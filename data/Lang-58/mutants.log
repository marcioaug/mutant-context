1:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:41:0L |==> 1L
2:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:41:0L |==> -1L
3:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:43:1L |==> 0L
4:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:43:1L |==> -1L
5:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:45:-1L |==> 0L
6:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:45:-1L |==> 1L
7:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:47:0 |==> 1
8:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:47:0 |==> -1
9:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:49:1 |==> 0
10:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:49:1 |==> -1
11:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:51:-1 |==> 0
12:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:51:-1 |==> 1
13:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:53:0 |==> 1
14:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:53:0 |==> -1
15:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:55:1 |==> 0
16:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:55:1 |==> -1
17:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:57:-1 |==> 0
18:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:57:-1 |==> 1
19:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:59:0 |==> 1
20:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:59:0 |==> -1
21:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:61:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:61:1 |==> -1
23:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:63:-1 |==> 0
24:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:63:-1 |==> 1
25:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:65:0.0 |==> 1.0
26:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:65:0.0 |==> -1.0
27:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:67:1.0 |==> 0.0
28:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:67:1.0 |==> -1.0
29:ORU:-(double):+(double):org.apache.commons.lang.math.NumberUtils:69:-1.0 |==> +1.0
30:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:69:1.0 |==> 0.0
31:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:69:1.0 |==> -1.0
32:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:71:0.0F |==> 1.0F
33:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:71:0.0F |==> -1.0F
34:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:73:1.0F |==> 0.0F
35:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:73:1.0F |==> -1.0F
36:ORU:-(float):+(float):org.apache.commons.lang.math.NumberUtils:75:-1.0F |==> +1.0F
37:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:75:1.0F |==> 0.0F
38:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:75:1.0F |==> -1.0F
39:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String):129:0 |==> 1
40:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String):129:0 |==> -1
41:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String,int):172:str == null |==> false
42:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String):200:0L |==> 1L
43:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String):200:0L |==> -1L
44:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String,long):221:str == null |==> false
45:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String):250:0.0F |==> 1.0F
46:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String):250:0.0F |==> -1.0F
47:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String,float):273:str == null |==> false
48:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String):302:0.0 |==> 1.0
49:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String):302:0.0 |==> -1.0
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String,double):325:str == null |==> false
51:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):398:str == null |==> false
52:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):401:StringUtils.isBlank(str) |==> false
53:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):401:StringUtils.isBlank(str) |==> true
54:COR:str.startsWith("--"):TRUE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):404:str.startsWith("--") |==> false
55:COR:str.startsWith("--"):FALSE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):404:str.startsWith("--") |==> true
56:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("0x") != str.startsWith("-0x")
57:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("0x")
58:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("-0x")
59:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> true
60:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:1 |==> 0
61:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:1 |==> -1
62:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() % 1
63:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() * 1
64:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() + 1
65:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() / 1
66:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') % str.indexOf('E')
67:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') * str.indexOf('E')
68:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') - str.indexOf('E')
69:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') / str.indexOf('E')
70:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:1 |==> 0
71:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:1 |==> -1
72:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) % 1
73:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) * 1
74:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> str.indexOf('e') + str.indexOf('E') - 1
75:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) / 1
76:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:-1 |==> 0
77:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:-1 |==> 1
78:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos != -1
79:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos >= -1
80:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> false
81:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:-1 |==> 0
82:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:-1 |==> 1
83:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos != -1
84:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos >= -1
85:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> false
86:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos != decPos
87:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos <= decPos
88:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> false
89:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:1 |==> 0
90:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:1 |==> -1
91:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos % 1
92:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos * 1
93:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos - 1
94:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos / 1
95:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:1 |==> 0
96:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:1 |==> -1
97:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos % 1
98:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos * 1
99:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos - 1
100:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos / 1
101:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):431:0 |==> 1
102:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):431:0 |==> -1
103:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:-1 |==> 0
104:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:-1 |==> 1
105:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos != -1
106:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos >= -1
107:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> false
108:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):434:0 |==> 1
109:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):434:0 |==> -1
110:COR:Character.isDigit(lastChar):TRUE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):440:Character.isDigit(lastChar) |==> false
111:COR:Character.isDigit(lastChar):FALSE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):440:Character.isDigit(lastChar) |==> true
112:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:-1 |==> 0
113:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:-1 |==> 1
114:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos != -1
115:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos >= -1
116:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> false
117:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:1 |==> 0
118:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:1 |==> -1
119:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() % 1
120:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() * 1
121:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() + 1
122:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() / 1
123:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos != str.length() - 1
124:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos <= str.length() - 1
125:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> false
126:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
127:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> false
128:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
129:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
130:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> 0
131:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> -1
132:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos % 1
133:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos * 1
134:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos - 1
135:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos / 1
136:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> 0
137:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> -1
138:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() % 1
139:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() * 1
140:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() + 1
141:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() / 1
142:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:0 |==> 1
143:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:0 |==> -1
144:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:1 |==> 0
145:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:1 |==> -1
146:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() % 1
147:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() * 1
148:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() + 1
149:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() / 1
150:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
151:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> false
152:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
153:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
154:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null |==> false
155:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:exp == null |==> false
156:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null |==> dec == null == (exp == null)
157:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:dec == null && exp == null |==> false
158:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null |==> dec == null
159:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:dec == null && exp == null |==> exp == null
160:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:0 |==> 1
161:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:0 |==> -1
162:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) <= '-'
163:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) >= '-'
164:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> false
165:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:1 |==> 0
166:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:1 |==> -1
167:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' == isDigits(numeric.substring(1))
168:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> false
169:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-'
170:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> isDigits(numeric.substring(1))
171:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) != isDigits(numeric)
172:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1))
173:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> isDigits(numeric)
174:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> true
175:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) == (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
176:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> false
177:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null
178:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
179:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:0.0F |==> 1.0F
180:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:0.0F |==> -1.0F
181:ROR:==(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
182:ROR:==(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
183:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> false
184:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
185:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> false
186:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
187:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> !allZeros
188:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
189:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
190:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
191:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
192:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:0.0 |==> 1.0
193:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:0.0 |==> -1.0
194:ROR:==(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() <= 0.0
195:ROR:==(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() >= 0.0
196:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> false
197:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 == !allZeros
198:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> false
199:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0
200:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> !allZeros
201:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.floatValue() == 0.0 && !allZeros)
202:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite()
203:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> (d.floatValue() == 0.0 && !allZeros)
204:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> true
205:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:-1 |==> 0
206:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:-1 |==> 1
207:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos != -1
208:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos >= -1
209:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> false
210:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:1 |==> 0
211:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:1 |==> -1
212:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() % 1
213:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() * 1
214:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() + 1
215:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() / 1
216:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos != str.length() - 1
217:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos <= str.length() - 1
218:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> false
219:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
220:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> false
221:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
222:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
223:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:1 |==> 0
224:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:1 |==> -1
225:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos % 1
226:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos * 1
227:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos - 1
228:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos / 1
229:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null |==> false
230:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:exp == null |==> false
231:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> dec == null == (exp == null)
232:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> false
233:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> dec == null
234:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> exp == null
235:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
236:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> false
237:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
238:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
239:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:0.0F |==> 1.0F
240:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:0.0F |==> -1.0F
241:ROR:==(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
242:ROR:==(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
243:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> false
244:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
245:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> false
246:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
247:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> !allZeros
248:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
249:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
250:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
251:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
252:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:0.0 |==> 1.0
253:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:0.0 |==> -1.0
254:ROR:==(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() <= 0.0
255:ROR:==(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() >= 0.0
256:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> false
257:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 == !allZeros
258:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> false
259:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0
260:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> !allZeros
261:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.doubleValue() == 0.0 && !allZeros)
262:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite()
263:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> (d.doubleValue() == 0.0 && !allZeros)
264:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> true
265:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):555:str == null |==> false
266:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):556:true |==> false
267:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:1 |==> 0
268:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:1 |==> -1
269:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() % 1
270:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() * 1
271:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() + 1
272:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() / 1
273:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:0 |==> 1
274:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:0 |==> -1
275:ROR:>=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i == 0
276:ROR:>=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i > 0
277:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> true
278:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) < '0'
279:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) > '0'
280:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> true
281:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):560:false |==> true
282:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:0 |==> 1
283:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:0 |==> -1
284:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() != 0
285:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() >= 0
286:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> false
287:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createFloat(java.lang.String):577:str == null |==> false
288:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createDouble(java.lang.String):593:str == null |==> false
289:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createInteger(java.lang.String):610:str == null |==> false
290:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createLong(java.lang.String):627:str == null |==> false
291:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigInteger(java.lang.String):643:str == null |==> false
292:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):659:str == null |==> false
293:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):663:StringUtils.isBlank(str) |==> false
294:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):663:StringUtils.isBlank(str) |==> true
295:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):679:array1 == array2 |==> false
296:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):680:true |==> false
297:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null |==> false
298:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array2 == null |==> false
299:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array1 == null != (array2 == null)
300:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array1 == null
301:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array2 == null
302:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> true
303:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):683:false |==> true
304:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length < array2.length
305:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length > array2.length
306:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> true
307:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):686:false |==> true
308:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:0 |==> 1
309:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:0 |==> -1
310:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i != array1.length
311:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i <= array1.length
312:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> false
313:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] < array2[i]
314:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] > array2[i]
315:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> true
316:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):691:false |==> true
317:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):695:true |==> false
318:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):706:array1 == array2 |==> false
319:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):707:true |==> false
320:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null |==> false
321:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array2 == null |==> false
322:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array1 == null != (array2 == null)
323:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array1 == null
324:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array2 == null
325:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> true
326:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):710:false |==> true
327:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length < array2.length
328:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length > array2.length
329:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> true
330:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):713:false |==> true
331:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:0 |==> 1
332:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:0 |==> -1
333:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i != array1.length
334:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i <= array1.length
335:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> false
336:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] < array2[i]
337:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] > array2[i]
338:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> true
339:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):718:false |==> true
340:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):722:true |==> false
341:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):733:array1 == array2 |==> false
342:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):734:true |==> false
343:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null |==> false
344:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array2 == null |==> false
345:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array1 == null != (array2 == null)
346:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array1 == null
347:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array2 == null
348:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> true
349:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):737:false |==> true
350:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length < array2.length
351:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length > array2.length
352:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> true
353:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):740:false |==> true
354:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:0 |==> 1
355:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:0 |==> -1
356:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i != array1.length
357:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i <= array1.length
358:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> false
359:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] < array2[i]
360:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] > array2[i]
361:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> true
362:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):745:false |==> true
363:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):749:true |==> false
364:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):760:array1 == array2 |==> false
365:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):761:true |==> false
366:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null |==> false
367:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array2 == null |==> false
368:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array1 == null != (array2 == null)
369:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array1 == null
370:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array2 == null
371:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> true
372:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):764:false |==> true
373:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length < array2.length
374:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length > array2.length
375:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> true
376:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):767:false |==> true
377:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:0 |==> 1
378:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:0 |==> -1
379:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i != array1.length
380:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i <= array1.length
381:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> false
382:ROR:!=(long,long):<(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] < array2[i]
383:ROR:!=(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] > array2[i]
384:ROR:!=(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> true
385:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):772:false |==> true
386:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):776:true |==> false
387:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):787:array1 == array2 |==> false
388:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):788:true |==> false
389:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null |==> false
390:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array2 == null |==> false
391:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array1 == null != (array2 == null)
392:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array1 == null
393:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array2 == null
394:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> true
395:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):791:false |==> true
396:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length < array2.length
397:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length > array2.length
398:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> true
399:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):794:false |==> true
400:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:0 |==> 1
401:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:0 |==> -1
402:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i != array1.length
403:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i <= array1.length
404:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> false
405:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:0 |==> 1
406:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:0 |==> -1
407:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) < 0
408:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) > 0
409:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> true
410:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):799:false |==> true
411:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):803:true |==> false
412:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):814:array1 == array2 |==> false
413:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):815:true |==> false
414:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null |==> false
415:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array2 == null |==> false
416:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array1 == null != (array2 == null)
417:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array1 == null
418:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array2 == null
419:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> true
420:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):818:false |==> true
421:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length < array2.length
422:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length > array2.length
423:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> true
424:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):821:false |==> true
425:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:0 |==> 1
426:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:0 |==> -1
427:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i != array1.length
428:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i <= array1.length
429:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> false
430:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:0 |==> 1
431:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:0 |==> -1
432:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) < 0
433:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) > 0
434:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> true
435:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):826:false |==> true
436:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):830:true |==> false
437:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(long[]):845:array == null |==> false
438:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(long[]):847:0 |==> 1
439:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(long[]):847:0 |==> -1
440:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length <= 0
441:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length >= 0
442:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> false
443:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(long[]):852:0 |==> 1
444:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(long[]):852:0 |==> -1
445:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(long[]):853:1 |==> 0
446:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(long[]):853:1 |==> -1
447:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i != array.length
448:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i <= array.length
449:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> false
450:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] != min
451:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] <= min
452:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> false
453:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(long[]):855:min = array[i] |==> <NO-OP>
454:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(int[]):872:array == null |==> false
455:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(int[]):874:0 |==> 1
456:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(int[]):874:0 |==> -1
457:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length <= 0
458:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length >= 0
459:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> false
460:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(int[]):879:0 |==> 1
461:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(int[]):879:0 |==> -1
462:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(int[]):880:1 |==> 0
463:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(int[]):880:1 |==> -1
464:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j != array.length
465:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j <= array.length
466:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> false
467:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] != min
468:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] <= min
469:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> false
470:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(int[]):882:min = array[j] |==> <NO-OP>
471:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(short[]):899:array == null |==> false
472:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(short[]):901:0 |==> 1
473:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(short[]):901:0 |==> -1
474:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length <= 0
475:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length >= 0
476:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> false
477:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(short[]):906:0 |==> 1
478:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(short[]):906:0 |==> -1
479:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(short[]):907:1 |==> 0
480:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(short[]):907:1 |==> -1
481:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i != array.length
482:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i <= array.length
483:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> false
484:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] != min
485:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] <= min
486:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> false
487:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(short[]):909:min = array[i] |==> <NO-OP>
488:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(byte[]):926:array == null |==> false
489:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(byte[]):928:0 |==> 1
490:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(byte[]):928:0 |==> -1
491:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length <= 0
492:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length >= 0
493:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> false
494:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(byte[]):933:0 |==> 1
495:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(byte[]):933:0 |==> -1
496:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(byte[]):934:1 |==> 0
497:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(byte[]):934:1 |==> -1
498:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i != array.length
499:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i <= array.length
500:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> false
501:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] != min
502:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] <= min
503:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> false
504:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(byte[]):936:min = array[i] |==> <NO-OP>
505:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(double[]):953:array == null |==> false
506:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(double[]):955:0 |==> 1
507:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(double[]):955:0 |==> -1
508:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length <= 0
509:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length >= 0
510:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> false
511:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(double[]):960:0 |==> 1
512:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(double[]):960:0 |==> -1
513:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(double[]):961:1 |==> 0
514:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(double[]):961:1 |==> -1
515:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i != array.length
516:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i <= array.length
517:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> false
518:ROR:<(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] != min
519:ROR:<(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] <= min
520:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> false
521:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(double[]):963:min = array[i] |==> <NO-OP>
522:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(float[]):980:array == null |==> false
523:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(float[]):982:0 |==> 1
524:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(float[]):982:0 |==> -1
525:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length <= 0
526:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length >= 0
527:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> false
528:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(float[]):987:0 |==> 1
529:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(float[]):987:0 |==> -1
530:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(float[]):988:1 |==> 0
531:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(float[]):988:1 |==> -1
532:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i != array.length
533:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i <= array.length
534:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> false
535:ROR:<(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] != min
536:ROR:<(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] <= min
537:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> false
538:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(float[]):990:min = array[i] |==> <NO-OP>
539:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(long[]):1009:array == null |==> false
540:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(long[]):1011:0 |==> 1
541:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(long[]):1011:0 |==> -1
542:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length <= 0
543:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length >= 0
544:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> false
545:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(long[]):1016:0 |==> 1
546:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(long[]):1016:0 |==> -1
547:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(long[]):1017:1 |==> 0
548:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(long[]):1017:1 |==> -1
549:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j != array.length
550:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j <= array.length
551:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> false
552:ROR:>(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] != max
553:ROR:>(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] >= max
554:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> false
555:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(long[]):1019:max = array[j] |==> <NO-OP>
556:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(int[]):1036:array == null |==> false
557:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(int[]):1038:0 |==> 1
558:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(int[]):1038:0 |==> -1
559:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length <= 0
560:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length >= 0
561:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> false
562:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(int[]):1043:0 |==> 1
563:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(int[]):1043:0 |==> -1
564:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(int[]):1044:1 |==> 0
565:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(int[]):1044:1 |==> -1
566:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j != array.length
567:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j <= array.length
568:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> false
569:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] != max
570:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] >= max
571:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> false
572:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(int[]):1046:max = array[j] |==> <NO-OP>
573:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(short[]):1063:array == null |==> false
574:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(short[]):1065:0 |==> 1
575:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(short[]):1065:0 |==> -1
576:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length <= 0
577:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length >= 0
578:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> false
579:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(short[]):1070:0 |==> 1
580:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(short[]):1070:0 |==> -1
581:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(short[]):1071:1 |==> 0
582:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(short[]):1071:1 |==> -1
583:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i != array.length
584:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i <= array.length
585:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> false
586:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] != max
587:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] >= max
588:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> false
589:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(short[]):1073:max = array[i] |==> <NO-OP>
590:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(byte[]):1090:array == null |==> false
591:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:0 |==> 1
592:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:0 |==> -1
593:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length <= 0
594:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length >= 0
595:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> false
596:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(byte[]):1097:0 |==> 1
597:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(byte[]):1097:0 |==> -1
598:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:1 |==> 0
599:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:1 |==> -1
600:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i != array.length
601:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i <= array.length
602:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> false
603:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] != max
604:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] >= max
605:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> false
606:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(byte[]):1100:max = array[i] |==> <NO-OP>
607:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(double[]):1117:array == null |==> false
608:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(double[]):1119:0 |==> 1
609:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(double[]):1119:0 |==> -1
610:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length <= 0
611:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length >= 0
612:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> false
613:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(double[]):1124:0 |==> 1
614:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(double[]):1124:0 |==> -1
615:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(double[]):1125:1 |==> 0
616:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(double[]):1125:1 |==> -1
617:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j != array.length
618:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j <= array.length
619:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> false
620:ROR:>(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] != max
621:ROR:>(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] >= max
622:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> false
623:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(double[]):1127:max = array[j] |==> <NO-OP>
624:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(float[]):1144:array == null |==> false
625:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(float[]):1146:0 |==> 1
626:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(float[]):1146:0 |==> -1
627:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length <= 0
628:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length >= 0
629:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> false
630:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(float[]):1151:0 |==> 1
631:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(float[]):1151:0 |==> -1
632:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(float[]):1152:1 |==> 0
633:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(float[]):1152:1 |==> -1
634:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j != array.length
635:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j <= array.length
636:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> false
637:ROR:>(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] != max
638:ROR:>(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] >= max
639:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> false
640:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(float[]):1154:max = array[j] |==> <NO-OP>
641:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b != a
642:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b <= a
643:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> false
644:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(long,long,long):1173:a = b |==> <NO-OP>
645:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c != a
646:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c <= a
647:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> false
648:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(long,long,long):1176:a = c |==> <NO-OP>
649:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b != a
650:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b <= a
651:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> false
652:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(int,int,int):1191:a = b |==> <NO-OP>
653:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c != a
654:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c <= a
655:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> false
656:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(int,int,int):1194:a = c |==> <NO-OP>
657:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b != a
658:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b <= a
659:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> false
660:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(short,short,short):1209:a = b |==> <NO-OP>
661:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c != a
662:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c <= a
663:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> false
664:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(short,short,short):1212:a = c |==> <NO-OP>
665:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b != a
666:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b <= a
667:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> false
668:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1227:a = b |==> <NO-OP>
669:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c != a
670:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c <= a
671:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> false
672:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1230:a = c |==> <NO-OP>
673:ROR:>(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b != a
674:ROR:>(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b >= a
675:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> false
676:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(long,long,long):1277:a = b |==> <NO-OP>
677:ROR:>(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c != a
678:ROR:>(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c >= a
679:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> false
680:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(long,long,long):1280:a = c |==> <NO-OP>
681:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b != a
682:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b >= a
683:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> false
684:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(int,int,int):1295:a = b |==> <NO-OP>
685:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c != a
686:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c >= a
687:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> false
688:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(int,int,int):1298:a = c |==> <NO-OP>
689:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b != a
690:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b >= a
691:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> false
692:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(short,short,short):1313:a = b |==> <NO-OP>
693:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c != a
694:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c >= a
695:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> false
696:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(short,short,short):1316:a = c |==> <NO-OP>
697:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b != a
698:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b >= a
699:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> false
700:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1331:a = b |==> <NO-OP>
701:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c != a
702:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c >= a
703:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> false
704:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1334:a = c |==> <NO-OP>
705:ROR:<(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs != rhs
706:ROR:<(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs <= rhs
707:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> false
708:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1406:-1 |==> 0
709:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(double,double):1406:-1 |==> 1
710:ROR:>(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs != rhs
711:ROR:>(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs >= rhs
712:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> false
713:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:+1 |==> -1
714:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:+1 |==> ~1
715:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:1 |==> 0
716:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:1 |==> -1
717:ROR:==(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits <= rhsBits
718:ROR:==(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits >= rhsBits
719:ROR:==(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> false
720:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@compare(double,double):1418:0 |==> 1
721:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@compare(double,double):1418:0 |==> -1
722:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits != rhsBits
723:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits <= rhsBits
724:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> false
725:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1427:-1 |==> 0
726:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(double,double):1427:-1 |==> 1
727:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:+1 |==> -1
728:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:+1 |==> ~1
729:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:1 |==> 0
730:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:1 |==> -1
731:ROR:<(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs != rhs
732:ROR:<(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs <= rhs
733:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> false
734:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1467:-1 |==> 0
735:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(float,float):1467:-1 |==> 1
736:ROR:>(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs != rhs
737:ROR:>(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs >= rhs
738:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> false
739:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:+1 |==> -1
740:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:+1 |==> ~1
741:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:1 |==> 0
742:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:1 |==> -1
743:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits <= rhsBits
744:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits >= rhsBits
745:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> false
746:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@compare(float,float):1479:0 |==> 1
747:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@compare(float,float):1479:0 |==> -1
748:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits != rhsBits
749:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits <= rhsBits
750:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> false
751:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1488:-1 |==> 0
752:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(float,float):1488:-1 |==> 1
753:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:+1 |==> -1
754:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:+1 |==> ~1
755:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:1 |==> 0
756:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:1 |==> -1
757:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1506:StringUtils.isEmpty(str) |==> false
758:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1506:StringUtils.isEmpty(str) |==> true
759:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1507:false |==> true
760:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:0 |==> 1
761:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:0 |==> -1
762:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i != str.length()
763:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i <= str.length()
764:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> false
765:COR:Character.isDigit(str.charAt(i)):TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1510:Character.isDigit(str.charAt(i)) |==> false
766:COR:Character.isDigit(str.charAt(i)):FALSE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1510:Character.isDigit(str.charAt(i)) |==> true
767:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1511:false |==> true
768:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1514:true |==> false
769:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1531:StringUtils.isEmpty(str) |==> false
770:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1531:StringUtils.isEmpty(str) |==> true
771:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1532:false |==> true
772:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1536:false |==> true
773:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1537:false |==> true
774:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1538:false |==> true
775:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1539:false |==> true
776:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> 1
777:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> -1
778:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] <= '-'
779:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] >= '-'
780:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> false
781:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:1 |==> 0
782:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:1 |==> -1
783:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> 1
784:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> -1
785:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:1 |==> 0
786:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:1 |==> -1
787:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start % 1
788:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start * 1
789:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start - 1
790:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start / 1
791:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz != start + 1
792:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz >= start + 1
793:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> false
794:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] <= '0'
795:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] >= '0'
796:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> false
797:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:1 |==> 0
798:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:1 |==> -1
799:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start % 1
800:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start * 1
801:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start - 1
802:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start / 1
803:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] <= 'x'
804:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] >= 'x'
805:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> false
806:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start] == '0' == (chars[start + 1] == 'x')
807:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> false
808:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start] == '0'
809:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start + 1] == 'x'
810:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:2 |==> 0
811:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:2 |==> -2
812:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start % 2
813:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start * 2
814:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start - 2
815:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start / 2
816:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i <= sz
817:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i >= sz
818:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> false
819:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1546:false |==> true
820:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i != chars.length
821:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i <= chars.length
822:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> false
823:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] != '0'
824:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] <= '0'
825:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> false
826:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] != '9'
827:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] >= '9'
828:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> false
829:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' != chars[i] > '9'
830:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0'
831:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] > '9'
832:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> true
833:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] != 'a'
834:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] <= 'a'
835:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> false
836:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] != 'f'
837:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] >= 'f'
838:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> false
839:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' != chars[i] > 'f'
840:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a'
841:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] > 'f'
842:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> true
843:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') == (chars[i] < 'a' || chars[i] > 'f')
844:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> false
845:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9')
846:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < 'a' || chars[i] > 'f')
847:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] != 'A'
848:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] <= 'A'
849:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> false
850:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] != 'F'
851:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] >= 'F'
852:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> false
853:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' != chars[i] > 'F'
854:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A'
855:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] > 'F'
856:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> true
857:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) == (chars[i] < 'A' || chars[i] > 'F')
858:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> false
859:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')
860:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < 'A' || chars[i] > 'F')
861:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1553:false |==> true
862:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1556:true |==> false
863:STD:<DEC>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1559:sz-- |==> <NO-OP>
864:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i != sz
865:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i <= sz
866:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> false
867:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:1 |==> 0
868:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:1 |==> -1
869:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz % 1
870:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz * 1
871:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz - 1
872:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz / 1
873:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i != sz + 1
874:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i <= sz + 1
875:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> false
876:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> i < sz + 1 == allowSigns
877:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> false
878:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> i < sz + 1
879:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> allowSigns
880:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) == !foundDigit
881:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> false
882:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns
883:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> !foundDigit
884:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz != (i < sz + 1 && allowSigns && !foundDigit)
885:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz
886:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> (i < sz + 1 && allowSigns && !foundDigit)
887:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> true
888:ROR:>=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] == '0'
889:ROR:>=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] > '0'
890:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> true
891:ROR:<=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] < '9'
892:ROR:<=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] == '9'
893:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> true
894:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
895:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> false
896:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
897:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
898:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1566:true |==> false
899:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1566:foundDigit = true |==> <NO-OP>
900:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1567:false |==> true
901:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1567:allowSigns = false |==> <NO-OP>
902:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] <= '.'
903:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] >= '.'
904:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> false
905:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasDecPoint != hasExp
906:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasDecPoint
907:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasExp
908:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> true
909:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1572:false |==> true
910:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1574:true |==> false
911:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1574:hasDecPoint = true |==> <NO-OP>
912:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] <= 'e'
913:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] >= 'e'
914:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> false
915:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] <= 'E'
916:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] >= 'E'
917:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> false
918:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
919:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
920:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
921:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> true
922:COR:hasExp:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1577:hasExp |==> false
923:COR:hasExp:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1577:hasExp |==> true
924:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1579:false |==> true
925:COR:foundDigit:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1581:foundDigit |==> false
926:COR:foundDigit:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1581:foundDigit |==> true
927:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1582:false |==> true
928:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1584:true |==> false
929:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1584:hasExp = true |==> <NO-OP>
930:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1585:true |==> false
931:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1585:allowSigns = true |==> <NO-OP>
932:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] <= '+'
933:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] >= '+'
934:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> false
935:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] <= '-'
936:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] >= '-'
937:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> false
938:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' != (chars[i] == '-')
939:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+'
940:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '-'
941:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> true
942:COR:allowSigns:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1587:allowSigns |==> false
943:COR:allowSigns:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1587:allowSigns |==> true
944:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1588:false |==> true
945:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1590:false |==> true
946:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1590:allowSigns = false |==> <NO-OP>
947:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1591:false |==> true
948:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1591:foundDigit = false |==> <NO-OP>
949:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1593:false |==> true
950:STD:<INC>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1595:i++ |==> <NO-OP>
951:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i != chars.length
952:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i <= chars.length
953:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> false
954:ROR:>=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] == '0'
955:ROR:>=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] > '0'
956:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> true
957:ROR:<=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] < '9'
958:ROR:<=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] == '9'
959:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> true
960:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
961:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> false
962:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
963:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
964:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1600:true |==> false
965:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] <= 'e'
966:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] >= 'e'
967:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> false
968:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] <= 'E'
969:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] >= 'E'
970:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> false
971:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
972:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
973:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
974:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> true
975:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1604:false |==> true
976:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] <= 'd'
977:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] >= 'd'
978:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> false
979:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] <= 'D'
980:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] >= 'D'
981:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> false
982:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' != (chars[i] == 'D')
983:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd'
984:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'D'
985:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'd' || chars[i] == 'D' |==> true
986:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] <= 'f'
987:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] >= 'f'
988:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> false
989:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') != (chars[i] == 'f')
990:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'd' || chars[i] == 'D'
991:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'f'
992:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> true
993:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] <= 'F'
994:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] >= 'F'
995:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> false
996:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') != (chars[i] == 'F')
997:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'
998:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'F'
999:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> true
1000:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1606:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns == (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1001:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> false
1002:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1606:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns
1003:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1004:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] <= 'l'
1005:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] >= 'l'
1006:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> false
1007:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] <= 'L'
1008:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] >= 'L'
1009:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> false
1010:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' != (chars[i] == 'L')
1011:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l'
1012:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'L'
1013:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'l' || chars[i] == 'L' |==> true
1014:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> foundDigit == !hasExp
1015:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> false
1016:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> foundDigit
1017:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> !hasExp
1018:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1619:false |==> true
1019:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> !allowSigns == foundDigit
1020:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> false
1021:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> !allowSigns
1022:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> foundDigit
