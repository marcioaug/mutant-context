1:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.common.base.Supplier<java.lang.String>):46:this.compiler = compiler |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.common.base.Supplier<java.lang.String>):47:this.safeNameIdSupplier = safeNameIdSupplier |==> <NO-OP>
3:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):67:makeLocalNamesUnique(newFnNode, isCallInLoop) |==> <NO-OP>
4:COR:hasArgs:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):77:hasArgs |==> false
5:COR:hasArgs:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):77:hasArgs |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):78:FunctionArgumentInjector.maybeAddTempsForCallArguments(newFnNode, args, namesToAlias, compiler.getCodingConvention()) |==> <NO-OP>
7:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):84:newBlock.detachFromParent() |==> <NO-OP>
8:COR:hasArgs:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):86:hasArgs |==> false
9:COR:hasArgs:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):86:hasArgs |==> true
10:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):89:newBlock == inlineResult |==> false
11:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):89:Preconditions.checkState(newBlock == inlineResult) |==> <NO-OP>
12:COR:isCallInLoop:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):97:isCallInLoop |==> false
13:COR:isCallInLoop:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):97:isCallInLoop |==> true
14:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):98:fixUnitializedVarDeclarations(newBlock) |==> <NO-OP>
15:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):104:injectableBlock != null |==> true
16:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):104:Preconditions.checkState(injectableBlock != null) |==> <NO-OP>
17:COR:NodeUtil.isLoopStructure(n):TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):117:NodeUtil.isLoopStructure(n) |==> false
18:COR:NodeUtil.isLoopStructure(n):FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):117:NodeUtil.isLoopStructure(n) |==> true
19:COR:NodeUtil.isVar(n):TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):122:NodeUtil.isVar(n) |==> false
20:COR:NodeUtil.isVar(n):FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):122:NodeUtil.isVar(n) |==> true
21:COR:name.hasChildren():TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):125:name.hasChildren() |==> false
22:COR:name.hasChildren():FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):125:name.hasChildren() |==> true
23:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):127:name.addChildToBack(NodeUtil.newUndefinedNode(srcLocation)) |==> <NO-OP>
24:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):132:c != null |==> true
25:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):133:fixUnitializedVarDeclarations(c) |==> <NO-OP>
26:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@makeLocalNamesUnique(com.google.javascript.rhino.Node,boolean):145:NodeTraversal.traverse(compiler, fnNode, new MakeDeclaredNamesUnique(new InlineRenamer(idSupplier, "inline_", isCallInLoop))) |==> <NO-OP>
27:LVR:FALSE:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@makeLocalNamesUnique(com.google.javascript.rhino.Node,boolean):152:false |==> true
28:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@makeLocalNamesUnique(com.google.javascript.rhino.Node,boolean):152:new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false).process(null, fnNode) |==> <NO-OP>
29:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null |==> false
30:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName == null != fnName.isEmpty()
31:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName == null
32:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName.isEmpty()
33:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> true
34:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null |==> false
35:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias == null != namesToAlias.isEmpty()
36:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias == null
37:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias.isEmpty()
38:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> true
39:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):195:result == fnTemplateRoot |==> false
40:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):195:Preconditions.checkState(result == fnTemplateRoot) |==> <NO-OP>
41:COR:namesToAlias.contains(name):TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):212:namesToAlias.contains(name) |==> false
42:COR:namesToAlias.contains(name):FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):212:namesToAlias.contains(name) |==> true
43:LVR:0:POS:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):216:0 |==> 1
44:LVR:0:NEG:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):216:0 |==> -1
45:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):216:newVars.add(0, newNode) |==> <NO-OP>
46:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):218:newArgMap.remove(name) |==> <NO-OP>
47:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):225:result == fnTemplateRoot |==> false
48:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):225:Preconditions.checkState(result == fnTemplateRoot) |==> <NO-OP>
49:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):230:fnTemplateRoot.addChildToFront(n) |==> <NO-OP>
50:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):261:Preconditions.checkNotNull(block) |==> <NO-OP>
51:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):262:Preconditions.checkNotNull(labelName) |==> <NO-OP>
52:LVR:FALSE:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):266:false |==> true
53:LVR:0:POS:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:0 |==> 1
54:LVR:0:NEG:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:0 |==> -1
55:ROR:>(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount != 0
56:ROR:>(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount >= 0
57:ROR:>(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> false
58:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):270:hasReturnAtExit = hasReturnAtExit(block) |==> <NO-OP>
59:COR:hasReturnAtExit:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):273:hasReturnAtExit |==> false
60:COR:hasReturnAtExit:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):273:hasReturnAtExit |==> true
61:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):274:convertLastReturnToStatement(block, resultName) |==> <NO-OP>
62:STD:<DEC>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):275:returnCount-- |==> <NO-OP>
63:LVR:0:POS:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:0 |==> 1
64:LVR:0:NEG:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:0 |==> -1
65:ROR:>(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount != 0
66:ROR:>(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount >= 0
67:ROR:>(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> false
68:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):282:replaceReturnWithBreak(block, null, resultName, labelName) |==> <NO-OP>
69:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):288:label.addChildToFront(name) |==> <NO-OP>
70:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):289:label.addChildToBack(block) |==> <NO-OP>
71:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):292:newRoot.addChildrenToBack(label) |==> <NO-OP>
72:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):296:root = newRoot |==> <NO-OP>
73:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> resultMustBeSet == !hasReturnAtExit
74:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> false
75:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> resultMustBeSet
76:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> !hasReturnAtExit
77:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultName != null |==> true
78:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> (resultMustBeSet && !hasReturnAtExit) == (resultName != null)
79:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> false
80:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> resultMustBeSet && !hasReturnAtExit
81:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> resultName != null
82:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):303:addDummyAssignment(block, resultName) |==> <NO-OP>
83:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() <= Token.BLOCK
84:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() >= Token.BLOCK
85:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> false
86:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:Preconditions.checkArgument(node.getType() == Token.BLOCK) |==> <NO-OP>
87:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):324:resultNode.copyInformationFromForTree(node) |==> <NO-OP>
88:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):326:node.addChildrenToBack(resultNode) |==> <NO-OP>
89:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() <= Token.RETURN
90:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() >= Token.RETURN
91:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> false
92:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:Preconditions.checkArgument(ret.getType() == Token.RETURN) |==> <NO-OP>
93:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):343:resultNode == null |==> false
94:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):344:block.removeChild(ret) |==> <NO-OP>
95:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):346:resultNode.copyInformationFromForTree(ret) |==> <NO-OP>
96:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):347:block.replaceChild(ret, resultNode) |==> <NO-OP>
97:COR:node.hasChildren():TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):377:node.hasChildren() |==> false
98:COR:node.hasChildren():FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):377:node.hasChildren() |==> true
99:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):380:retVal = node.getFirstChild().cloneTree() |==> <NO-OP>
100:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):383:resultName == null |==> false
101:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):384:retVal != null |==> true
102:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):385:resultNode = NodeUtil.newExpr(retVal) |==> <NO-OP>
103:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):388:retVal == null |==> false
104:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):391:retVal = NodeUtil.newUndefinedNode(srcLocation) |==> <NO-OP>
105:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):394:resultNode = createAssignStatementNode(resultName, retVal) |==> <NO-OP>
106:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() <= Token.RETURN
107:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() >= Token.RETURN
108:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> false
109:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() <= Token.FUNCTION
110:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() >= Token.FUNCTION
111:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> false
112:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() <= Token.EXPR_RESULT
113:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() >= Token.EXPR_RESULT
114:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> false
115:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.FUNCTION != (current.getType() == Token.EXPR_RESULT)
116:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.FUNCTION
117:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.EXPR_RESULT
118:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> true
119:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() <= Token.RETURN
120:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() >= Token.RETURN
121:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> false
122:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):426:Preconditions.checkState(NodeUtil.isStatementBlock(parent)) |==> <NO-OP>
123:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):433:breakNode.copyInformationFromForTree(current) |==> <NO-OP>
124:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):434:parent.replaceChild(current, breakNode) |==> <NO-OP>
125:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):435:resultNode != null |==> true
126:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):436:resultNode.copyInformationFromForTree(current) |==> <NO-OP>
127:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):437:parent.addChildBefore(resultNode, breakNode) |==> <NO-OP>
128:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):439:current = breakNode |==> <NO-OP>
129:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):441:c != null |==> true
130:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):443:c = replaceReturnWithBreak(c, current, resultName, labelName) |==> <NO-OP>
131:LVR:TRUE:FALSE:com.google.javascript.jscomp.RenameLabels@<init>(com.google.javascript.jscomp.AbstractCompiler):77:true |==> false
132:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@<init>():107:namespaceStack.push(new LabelNamespace()) |==> <NO-OP>
133:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@enterScope(com.google.javascript.jscomp.NodeTraversal):122:namespaceStack.push(new LabelNamespace()) |==> <NO-OP>
134:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@exitScope(com.google.javascript.jscomp.NodeTraversal):127:namespaceStack.pop() |==> <NO-OP>
135:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() <= Token.LABEL
136:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() >= Token.LABEL
137:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> false
138:LVR:POS:0:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:1 |==> 0
139:LVR:POS:NEG:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:1 |==> -1
140:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() % 1
141:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() * 1
142:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() - 1
143:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() / 1
144:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):146:Preconditions.checkState(!current.renameMap.containsKey(name)) |==> <NO-OP>
145:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):147:current.renameMap.put(name, li) |==> <NO-OP>
146:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() != currentDepth
147:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() <= currentDepth
148:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> false
149:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):151:names.add(nameSupplier.get()) |==> <NO-OP>
150:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):155:compiler.addToDebugLog("label renamed: " + name + " => " + newName) |==> <NO-OP>
151:LVR:TRUE:FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):158:true |==> false
152:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):170:visitLabel(node, parent) |==> <NO-OP>
153:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):175:visitBreakOrContinue(node) |==> <NO-OP>
154:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):186:nameNode != null |==> true
155:LVR:0:POS:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:0 |==> 1
156:LVR:0:NEG:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:0 |==> -1
157:ROR:!=(int,int):<(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() < 0
158:ROR:!=(int,int):>(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() > 0
159:ROR:!=(int,int):TRUE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> true
160:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:Preconditions.checkState(name.length() != 0) |==> <NO-OP>
161:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):191:li != null |==> true
162:LVR:TRUE:FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):194:true |==> false
163:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):194:li.referenced = true |==> <NO-OP>
164:COR:name.equals(newName):TRUE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):195:name.equals(newName) |==> false
165:COR:name.equals(newName):FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):195:name.equals(newName) |==> true
166:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):197:nameNode.setString(newName) |==> <NO-OP>
167:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):198:compiler.reportCodeChange() |==> <NO-OP>
168:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:nameNode != null |==> true
169:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:Preconditions.checkState(nameNode != null) |==> <NO-OP>
170:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> li.referenced != !removeUnused
171:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> li.referenced
172:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> !removeUnused
173:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> true
174:COR:name.equals(newName):TRUE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:name.equals(newName) |==> false
175:COR:name.equals(newName):FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:name.equals(newName) |==> true
176:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):219:nameNode.setString(newName) |==> <NO-OP>
177:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):220:compiler.reportCodeChange() |==> <NO-OP>
178:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):225:node.removeChild(newChild) |==> <NO-OP>
179:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):226:parent.replaceChild(node, newChild) |==> <NO-OP>
180:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() <= Token.BLOCK
181:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() >= Token.BLOCK
182:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> false
183:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):228:NodeUtil.tryMergeBlock(newChild) |==> <NO-OP>
184:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):230:compiler.reportCodeChange() |==> <NO-OP>
185:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):234:namespaceStack.peek().renameMap.remove(name) |==> <NO-OP>
186:LVR:POS:0:com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:1 |==> 0
187:LVR:POS:NEG:com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:1 |==> -1
188:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id % 1
189:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id * 1
190:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id + 1
191:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id / 1
192:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:NodeTraversal.traverse(compiler, root, new ProcessLabels()) |==> <NO-OP>
193:LVR:FALSE:TRUE:com.google.javascript.jscomp.RenameLabels$LabelInfo:263:false |==> true
