1:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null |==> false
2:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date2 == null |==> false
3:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date1 == null != (date2 == null)
4:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date1 == null
5:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date2 == null
6:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> true
7:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):146:cal1.setTime(date1) |==> <NO-OP>
8:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):148:cal2.setTime(date2) |==> <NO-OP>
9:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null |==> false
10:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal2 == null |==> false
11:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal1 == null != (cal2 == null)
12:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal1 == null
13:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal2 == null
14:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> true
15:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) <= cal2.get(Calendar.ERA)
16:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) >= cal2.get(Calendar.ERA)
17:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> false
18:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) <= cal2.get(Calendar.YEAR)
19:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) >= cal2.get(Calendar.YEAR)
20:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
21:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) == (cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR))
22:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
23:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
24:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
25:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) <= cal2.get(Calendar.DAY_OF_YEAR)
26:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) >= cal2.get(Calendar.DAY_OF_YEAR)
27:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
28:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) == (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))
29:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
30:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
31:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
32:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null |==> false
33:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date2 == null |==> false
34:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date1 == null != (date2 == null)
35:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date1 == null
36:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date2 == null
37:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> true
38:ROR:==(long,long):<=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() <= date2.getTime()
39:ROR:==(long,long):>=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() >= date2.getTime()
40:ROR:==(long,long):FALSE(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> false
41:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null |==> false
42:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal2 == null |==> false
43:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal1 == null != (cal2 == null)
44:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal1 == null
45:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal2 == null
46:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> true
47:ROR:==(long,long):<=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() <= cal2.getTime().getTime()
48:ROR:==(long,long):>=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() >= cal2.getTime().getTime()
49:ROR:==(long,long):FALSE(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> false
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null |==> false
51:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal2 == null |==> false
52:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal1 == null != (cal2 == null)
53:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal1 == null
54:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal2 == null
55:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> true
56:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) <= cal2.get(Calendar.MILLISECOND)
57:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) >= cal2.get(Calendar.MILLISECOND)
58:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> false
59:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) <= cal2.get(Calendar.SECOND)
60:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) >= cal2.get(Calendar.SECOND)
61:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> false
62:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) == (cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND))
63:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> false
64:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND)
65:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)
66:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) <= cal2.get(Calendar.MINUTE)
67:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) >= cal2.get(Calendar.MINUTE)
68:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> false
69:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)) == (cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE))
70:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> false
71:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)
72:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)
73:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) <= cal2.get(Calendar.HOUR)
74:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) >= cal2.get(Calendar.HOUR)
75:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> false
76:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)) == (cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR))
77:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> false
78:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)
79:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)
80:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) <= cal2.get(Calendar.DAY_OF_YEAR)
81:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) >= cal2.get(Calendar.DAY_OF_YEAR)
82:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
83:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)) == (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))
84:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
85:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)
86:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
87:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) <= cal2.get(Calendar.YEAR)
88:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) >= cal2.get(Calendar.YEAR)
89:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
90:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)) == (cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR))
91:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
92:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
93:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
94:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) <= cal2.get(Calendar.ERA)
95:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) >= cal2.get(Calendar.ERA)
96:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> false
97:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) == (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA))
98:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> false
99:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
100:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
101:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):235:cal1.getClass() == cal2.getClass() |==> false
102:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)) == (cal1.getClass() == cal2.getClass())
103:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> false
104:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
105:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):235:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> cal1.getClass() == cal2.getClass()
106:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null |==> false
107:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:parsePatterns == null |==> false
108:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> str == null != (parsePatterns == null)
109:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> str == null
110:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> parsePatterns == null
111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> true
112:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):258:0 |==> 1
113:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):258:0 |==> -1
114:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:0 |==> 1
115:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:0 |==> -1
116:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i != parsePatterns.length
117:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i <= parsePatterns.length
118:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> false
119:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:0 |==> 1
120:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:0 |==> -1
121:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i <= 0
122:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i >= 0
123:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> false
124:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):261:0 |==> 1
125:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):261:0 |==> -1
126:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):261:parser = new SimpleDateFormat(parsePatterns[0]) |==> <NO-OP>
127:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):263:parser.applyPattern(parsePatterns[i]) |==> <NO-OP>
128:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):265:0 |==> 1
129:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):265:0 |==> -1
130:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):265:pos.setIndex(0) |==> <NO-OP>
131:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null |==> true
132:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() <= str.length()
133:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() >= str.length()
134:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> false
135:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> date != null == (pos.getIndex() == str.length())
136:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> false
137:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> date != null
138:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> pos.getIndex() == str.length()
139:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):271:-1 |==> 0
140:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):271:-1 |==> 1
141:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):398:date == null |==> false
142:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):402:c.setTime(date) |==> <NO-OP>
143:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):403:c.add(calendarField, amount) |==> <NO-OP>
144:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):437:date == null |==> false
145:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):441:gval.setTime(date) |==> <NO-OP>
146:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):442:true |==> false
147:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):442:modify(gval, field, true) |==> <NO-OP>
148:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):475:date == null |==> false
149:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):479:true |==> false
150:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):479:modify(rounded, field, true) |==> <NO-OP>
151:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.lang.Object,int):514:date == null |==> false
152:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):544:date == null |==> false
153:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):548:gval.setTime(date) |==> <NO-OP>
154:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):549:false |==> true
155:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):549:modify(gval, field, false) |==> <NO-OP>
156:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):570:date == null |==> false
157:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):574:false |==> true
158:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):574:modify(truncated, field, false) |==> <NO-OP>
159:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.lang.Object,int):599:date == null |==> false
160:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:280000000 |==> 0
161:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:280000000 |==> -280000000
162:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) != 280000000
163:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) >= 280000000
164:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> false
165:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field <= Calendar.MILLISECOND
166:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field >= Calendar.MILLISECOND
167:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> false
168:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):637:false |==> true
169:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:500 |==> 0
170:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:500 |==> -500
171:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs != 500
172:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs <= 500
173:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> false
174:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> !round != millisecs < 500
175:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> !round
176:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> millisecs < 500
177:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> true
178:AOR:-(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time % millisecs
179:AOR:-(long,long):*(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time * millisecs
180:AOR:-(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time + millisecs
181:AOR:-(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time / millisecs
182:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time = time - millisecs |==> <NO-OP>
183:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field <= Calendar.SECOND
184:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field >= Calendar.SECOND
185:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> false
186:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):645:true |==> false
187:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):645:done = true |==> <NO-OP>
188:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:30 |==> 0
189:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:30 |==> -30
190:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds != 30
191:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds <= 30
192:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> false
193:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> !round != seconds < 30
194:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> !round
195:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> seconds < 30
196:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> true
197:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> !done == (!round || seconds < 30)
198:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> false
199:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> !done
200:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> (!round || seconds < 30)
201:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:1000L |==> 0L
202:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:1000L |==> -1000L
203:AOR:*(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds % 1000L
204:AOR:*(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds + 1000L
205:AOR:*(long,long):-(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds - 1000L
206:AOR:*(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds / 1000L
207:AOR:-(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time % (seconds * 1000L)
208:AOR:-(long,long):*(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time * (seconds * 1000L)
209:AOR:-(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time + (seconds * 1000L)
210:AOR:-(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time / (seconds * 1000L)
211:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time = time - (seconds * 1000L) |==> <NO-OP>
212:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field <= Calendar.MINUTE
213:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field >= Calendar.MINUTE
214:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> false
215:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):654:true |==> false
216:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):654:done = true |==> <NO-OP>
217:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:30 |==> 0
218:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:30 |==> -30
219:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes != 30
220:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes <= 30
221:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> false
222:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> !round != minutes < 30
223:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> !round
224:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> minutes < 30
225:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> true
226:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> !done == (!round || minutes < 30)
227:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> false
228:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> !done
229:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> (!round || minutes < 30)
230:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:60000L |==> 0L
231:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:60000L |==> -60000L
232:AOR:*(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes % 60000L
233:AOR:*(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes + 60000L
234:AOR:*(long,long):-(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes - 60000L
235:AOR:*(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes / 60000L
236:AOR:-(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time % (minutes * 60000L)
237:AOR:-(long,long):*(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time * (minutes * 60000L)
238:AOR:-(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time + (minutes * 60000L)
239:AOR:-(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time / (minutes * 60000L)
240:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time = time - (minutes * 60000L) |==> <NO-OP>
241:ROR:!=(long,long):<(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() < time
242:ROR:!=(long,long):>(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() > time
243:ROR:!=(long,long):TRUE(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> true
244:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):665:date.setTime(time) |==> <NO-OP>
245:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):666:val.setTime(date) |==> <NO-OP>
246:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):670:false |==> true
247:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:0 |==> 1
248:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:0 |==> -1
249:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i != fields.length
250:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i <= fields.length
251:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> false
252:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:0 |==> 1
253:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:0 |==> -1
254:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j != fields[i].length
255:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j <= fields[i].length
256:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> false
257:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] <= field
258:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] >= field
259:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> false
260:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> round == roundUp
261:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> false
262:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> round
263:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> roundUp
264:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field <= DateUtils.SEMI_MONTH
265:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field >= DateUtils.SEMI_MONTH
266:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> false
267:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:1 |==> 0
268:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:1 |==> -1
269:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) <= 1
270:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) >= 1
271:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> false
272:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):681:15 |==> 0
273:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):681:15 |==> -15
274:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):681:val.add(Calendar.DATE, 15) |==> <NO-OP>
275:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):683:-15 |==> 0
276:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):683:-15 |==> 15
277:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):683:val.add(Calendar.DATE, -15) |==> <NO-OP>
278:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):684:1 |==> 0
279:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):684:1 |==> -1
280:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):684:val.add(Calendar.MONTH, 1) |==> <NO-OP>
281:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:0 |==> 1
282:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:0 |==> -1
283:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:1 |==> 0
284:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:1 |==> -1
285:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:val.add(fields[i][0], 1) |==> <NO-OP>
286:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):696:0 |==> 1
287:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):696:0 |==> -1
288:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):697:false |==> true
289:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:0 |==> 1
290:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:0 |==> -1
291:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] <= Calendar.DATE
292:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] >= Calendar.DATE
293:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> false
294:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:1 |==> 0
295:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:1 |==> -1
296:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) % 1
297:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) * 1
298:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) + 1
299:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) / 1
300:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:offset = val.get(Calendar.DATE) - 1 |==> <NO-OP>
301:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:15 |==> 0
302:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:15 |==> -15
303:ROR:>=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset == 15
304:ROR:>=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset > 15
305:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> true
306:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):709:15 |==> 0
307:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):709:15 |==> -15
308:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):709:offset -= 15 |==> <NO-OP>
309:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:7 |==> 0
310:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:7 |==> -7
311:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset != 7
312:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset >= 7
313:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> false
314:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:roundUp = offset > 7 |==> <NO-OP>
315:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):713:true |==> false
316:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):713:offsetSet = true |==> <NO-OP>
317:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:0 |==> 1
318:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:0 |==> -1
319:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] <= Calendar.HOUR_OF_DAY
320:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] >= Calendar.HOUR_OF_DAY
321:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> false
322:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):720:offset = val.get(Calendar.HOUR_OF_DAY) |==> <NO-OP>
323:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:12 |==> 0
324:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:12 |==> -12
325:ROR:>=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset == 12
326:ROR:>=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset > 12
327:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> true
328:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):722:12 |==> 0
329:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):722:12 |==> -12
330:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):722:offset -= 12 |==> <NO-OP>
331:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:6 |==> 0
332:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:6 |==> -6
333:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset != 6
334:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset >= 6
335:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> false
336:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:roundUp = offset > 6 |==> <NO-OP>
337:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):725:true |==> false
338:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):725:offsetSet = true |==> <NO-OP>
339:COR:offsetSet:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):729:offsetSet |==> false
340:COR:offsetSet:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):729:offsetSet |==> true
341:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):730:0 |==> 1
342:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):730:0 |==> -1
343:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):731:0 |==> 1
344:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):731:0 |==> -1
345:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:0 |==> 1
346:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:0 |==> -1
347:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) % min
348:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) * min
349:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) + min
350:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) / min
351:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:offset = val.get(fields[i][0]) - min |==> <NO-OP>
352:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max % min
353:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max * min
354:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max + min
355:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max / min
356:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:2 |==> 0
357:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:2 |==> -2
358:AOR:/(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) % 2
359:AOR:/(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) * 2
360:AOR:/(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) + 2
361:AOR:/(int,int):-(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) - 2
362:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset != ((max - min) / 2)
363:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset >= ((max - min) / 2)
364:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> false
365:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:roundUp = offset > ((max - min) / 2) |==> <NO-OP>
366:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:0 |==> 1
367:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:0 |==> -1
368:ROR:!=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset < 0
369:ROR:!=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset > 0
370:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> true
371:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> 1
372:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> -1
373:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> 1
374:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> -1
375:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) % offset
376:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) * offset
377:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) + offset
378:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) / offset
379:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.set(fields[i][0], val.get(fields[i][0]) - offset) |==> <NO-OP>
380:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Date,int):772:focus == null |==> false
381:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Date,int):776:gval.setTime(focus) |==> <NO-OP>
382:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):805:focus == null |==> false
383:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):816:start = truncate(focus, Calendar.MONTH) |==> <NO-OP>
384:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):818:end = (Calendar)start.clone() |==> <NO-OP>
385:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):819:1 |==> 0
386:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):819:1 |==> -1
387:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):819:end.add(Calendar.MONTH, 1) |==> <NO-OP>
388:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):820:-1 |==> 0
389:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):820:-1 |==> 1
390:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):820:end.add(Calendar.DATE, -1) |==> <NO-OP>
391:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle <= RANGE_MONTH_MONDAY
392:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle >= RANGE_MONTH_MONDAY
393:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> false
394:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):823:startCutoff = Calendar.MONDAY |==> <NO-OP>
395:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):824:endCutoff = Calendar.SUNDAY |==> <NO-OP>
396:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):832:start = truncate(focus, Calendar.DATE) |==> <NO-OP>
397:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):833:end = truncate(focus, Calendar.DATE) |==> <NO-OP>
398:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):839:startCutoff = Calendar.MONDAY |==> <NO-OP>
399:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):840:endCutoff = Calendar.SUNDAY |==> <NO-OP>
400:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):843:startCutoff = focus.get(Calendar.DAY_OF_WEEK) |==> <NO-OP>
401:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:1 |==> 0
402:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:1 |==> -1
403:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff % 1
404:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff * 1
405:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff + 1
406:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff / 1
407:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:endCutoff = startCutoff - 1 |==> <NO-OP>
408:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:3 |==> 0
409:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:3 |==> -3
410:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) % 3
411:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) * 3
412:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) + 3
413:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) / 3
414:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3 |==> <NO-OP>
415:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:3 |==> 0
416:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:3 |==> -3
417:AOR:+(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) % 3
418:AOR:+(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) * 3
419:AOR:+(int,int):-(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) - 3
420:AOR:+(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) / 3
421:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3 |==> <NO-OP>
422:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff != Calendar.SUNDAY
423:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff <= Calendar.SUNDAY
424:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> false
425:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):856:7 |==> 0
426:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):856:7 |==> -7
427:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):856:startCutoff += 7 |==> <NO-OP>
428:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff != Calendar.SATURDAY
429:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff >= Calendar.SATURDAY
430:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> false
431:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):859:7 |==> 0
432:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):859:7 |==> -7
433:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):859:startCutoff -= 7 |==> <NO-OP>
434:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff != Calendar.SUNDAY
435:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff <= Calendar.SUNDAY
436:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> false
437:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):862:7 |==> 0
438:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):862:7 |==> -7
439:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):862:endCutoff += 7 |==> <NO-OP>
440:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff != Calendar.SATURDAY
441:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff >= Calendar.SATURDAY
442:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> false
443:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):865:7 |==> 0
444:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):865:7 |==> -7
445:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):865:endCutoff -= 7 |==> <NO-OP>
446:ROR:!=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) < startCutoff
447:ROR:!=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) > startCutoff
448:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> true
449:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):868:-1 |==> 0
450:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):868:-1 |==> 1
451:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):868:start.add(Calendar.DATE, -1) |==> <NO-OP>
452:ROR:!=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) < endCutoff
453:ROR:!=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) > endCutoff
454:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> true
455:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):871:1 |==> 0
456:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):871:1 |==> -1
457:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):871:end.add(Calendar.DATE, 1) |==> <NO-OP>
458:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.lang.Object,int):896:focus == null |==> false
459:LVR:NEG:0:org.apache.commons.lang.time.DateUtils$DateIterator@<init>(java.util.Calendar,java.util.Calendar):925:-1 |==> 0
460:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils$DateIterator@<init>(java.util.Calendar,java.util.Calendar):925:-1 |==> 1
461:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils$DateIterator@<init>(java.util.Calendar,java.util.Calendar):925:spot.add(Calendar.DATE, -1) |==> <NO-OP>
462:COR:spot.equals(endFinal):TRUE:org.apache.commons.lang.time.DateUtils$DateIterator@next():943:spot.equals(endFinal) |==> false
463:COR:spot.equals(endFinal):FALSE:org.apache.commons.lang.time.DateUtils$DateIterator@next():943:spot.equals(endFinal) |==> true
464:LVR:POS:0:org.apache.commons.lang.time.DateUtils$DateIterator@next():946:1 |==> 0
465:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils$DateIterator@next():946:1 |==> -1
466:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils$DateIterator@next():946:spot.add(Calendar.DATE, 1) |==> <NO-OP>
