1:ORU:-(double):+(double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:-1.0 |==> +1.0
2:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:1.0 |==> 0.0
3:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:1.0 |==> -1.0
4:AOR:/(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:-1.0 / getOrder() |==> -1.0 % getOrder()
5:AOR:/(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:-1.0 / getOrder() |==> -1.0 * getOrder()
6:AOR:/(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:-1.0 / getOrder() |==> -1.0 + getOrder()
7:AOR:/(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):123:-1.0 / getOrder() |==> -1.0 - getOrder()
8:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):126:0.9 |==> 0.0
9:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):126:0.9 |==> -0.9
10:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):126:setSafety(0.9) |==> <NO-OP>
11:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):127:0.2 |==> 0.0
12:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):127:0.2 |==> -0.2
13:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):127:setMinReduction(0.2) |==> <NO-OP>
14:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):128:10.0 |==> 0.0
15:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):128:10.0 |==> -10.0
16:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double):128:setMaxGrowth(10.0) |==> <NO-OP>
17:ORU:-(double):+(double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:-1.0 |==> +1.0
18:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:1.0 |==> 0.0
19:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:1.0 |==> -1.0
20:AOR:/(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:-1.0 / getOrder() |==> -1.0 % getOrder()
21:AOR:/(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:-1.0 / getOrder() |==> -1.0 * getOrder()
22:AOR:/(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:-1.0 / getOrder() |==> -1.0 + getOrder()
23:AOR:/(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):161:-1.0 / getOrder() |==> -1.0 - getOrder()
24:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):164:0.9 |==> 0.0
25:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):164:0.9 |==> -0.9
26:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):164:setSafety(0.9) |==> <NO-OP>
27:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):165:0.2 |==> 0.0
28:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):165:0.2 |==> -0.2
29:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):165:setMinReduction(0.2) |==> <NO-OP>
30:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):166:10.0 |==> 0.0
31:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):166:10.0 |==> -10.0
32:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@<init>(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[]):166:setMaxGrowth(10.0) |==> <NO-OP>
33:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@setSafety(double):186:this.safety = safety |==> <NO-OP>
34:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):194:sanityChecks(equations, t) |==> <NO-OP>
35:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):195:setEquations(equations) |==> <NO-OP>
36:ROR:>(double,double):!=(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):196:t > equations.getTime() |==> t != equations.getTime()
37:ROR:>(double,double):>=(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):196:t > equations.getTime() |==> t >= equations.getTime()
38:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):196:t > equations.getTime() |==> false
39:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):201:1 |==> 0
40:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):201:1 |==> -1
41:AOR:+(int,int):%(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):201:c.length + 1 |==> c.length % 1
42:AOR:+(int,int):*(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):201:c.length + 1 |==> c.length * 1
43:AOR:+(int,int):-(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):201:c.length + 1 |==> c.length - 1
44:AOR:+(int,int):/(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):201:c.length + 1 |==> c.length / 1
45:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):208:interpolator.reinitialize(this, yTmp, yDotK, forward, equations.getPrimaryMapper(), equations.getSecondaryMappers()) |==> <NO-OP>
46:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):210:interpolator.storeTime(equations.getTime()) |==> <NO-OP>
47:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):213:stepStart = equations.getTime() |==> <NO-OP>
48:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):214:0 |==> 1
49:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):214:0 |==> -1
50:LVR:TRUE:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):215:true |==> false
51:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):216:initIntegration(equations.getTime(), y0, t) |==> <NO-OP>
52:LVR:FALSE:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):219:false |==> true
53:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):219:isLastStep = false |==> <NO-OP>
54:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):222:interpolator.shift() |==> <NO-OP>
55:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):225:10 |==> 0
56:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):225:10 |==> -10
57:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):226:1.0 |==> 0.0
58:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):226:1.0 |==> -1.0
59:ROR:>=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):226:error >= 1.0 |==> error == 1.0
60:ROR:>=(double,double):>(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):226:error >= 1.0 |==> error > 1.0
61:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):226:error >= 1.0 |==> true
62:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):228:firstTime || !fsal |==> firstTime != !fsal
63:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):228:firstTime || !fsal |==> firstTime
64:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):228:firstTime || !fsal |==> !fsal
65:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):228:firstTime || !fsal |==> true
66:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):230:0 |==> 1
67:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):230:0 |==> -1
68:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):230:computeDerivatives(stepStart, y, yDotK[0]) |==> <NO-OP>
69:COR:firstTime:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):233:firstTime |==> false
70:COR:firstTime:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):233:firstTime |==> true
71:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):235:vecAbsoluteTolerance == null |==> false
72:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):236:0 |==> 1
73:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):236:0 |==> -1
74:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):236:i < scale.length |==> i != scale.length
75:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):236:i < scale.length |==> i <= scale.length
76:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):236:i < scale.length |==> false
77:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalRelativeTolerance * FastMath.abs(y[i]) |==> scalRelativeTolerance % FastMath.abs(y[i])
78:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalRelativeTolerance * FastMath.abs(y[i]) |==> scalRelativeTolerance + FastMath.abs(y[i])
79:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalRelativeTolerance * FastMath.abs(y[i]) |==> scalRelativeTolerance - FastMath.abs(y[i])
80:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalRelativeTolerance * FastMath.abs(y[i]) |==> scalRelativeTolerance / FastMath.abs(y[i])
81:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]) |==> scalAbsoluteTolerance % (scalRelativeTolerance * FastMath.abs(y[i]))
82:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]) |==> scalAbsoluteTolerance * (scalRelativeTolerance * FastMath.abs(y[i]))
83:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]) |==> scalAbsoluteTolerance - scalRelativeTolerance * FastMath.abs(y[i])
84:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]) |==> scalAbsoluteTolerance / (scalRelativeTolerance * FastMath.abs(y[i]))
85:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):237:scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]) |==> <NO-OP>
86:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):240:0 |==> 1
87:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):240:0 |==> -1
88:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):240:i < scale.length |==> i != scale.length
89:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):240:i < scale.length |==> i <= scale.length
90:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):240:i < scale.length |==> false
91:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecRelativeTolerance[i] % FastMath.abs(y[i])
92:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecRelativeTolerance[i] + FastMath.abs(y[i])
93:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecRelativeTolerance[i] - FastMath.abs(y[i])
94:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecRelativeTolerance[i] / FastMath.abs(y[i])
95:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecAbsoluteTolerance[i] % (vecRelativeTolerance[i] * FastMath.abs(y[i]))
96:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecAbsoluteTolerance[i] * (vecRelativeTolerance[i] * FastMath.abs(y[i]))
97:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecAbsoluteTolerance[i] - vecRelativeTolerance[i] * FastMath.abs(y[i])
98:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> vecAbsoluteTolerance[i] / (vecRelativeTolerance[i] * FastMath.abs(y[i]))
99:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):241:scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]) |==> <NO-OP>
100:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):245:0 |==> 1
101:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):245:0 |==> -1
102:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):245:1 |==> 0
103:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):245:1 |==> -1
104:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):244:hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]) |==> <NO-OP>
105:LVR:FALSE:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):246:false |==> true
106:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):246:firstTime = false |==> <NO-OP>
107:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):249:stepSize = hNew |==> <NO-OP>
108:COR:forward:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):250:forward |==> false
109:COR:forward:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):250:forward |==> true
110:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize |==> stepStart % stepSize
111:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize |==> stepStart * stepSize
112:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize |==> stepStart - stepSize
113:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize |==> stepStart / stepSize
114:ROR:>=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize >= t |==> stepStart + stepSize == t
115:ROR:>=(double,double):>(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize >= t |==> stepStart + stepSize > t
116:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):251:stepStart + stepSize >= t |==> true
117:AOR:-(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):252:t - stepStart |==> t % stepStart
118:AOR:-(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):252:t - stepStart |==> t * stepStart
119:AOR:-(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):252:t - stepStart |==> t + stepStart
120:AOR:-(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):252:t - stepStart |==> t / stepStart
121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):252:stepSize = t - stepStart |==> <NO-OP>
122:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize |==> stepStart % stepSize
123:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize |==> stepStart * stepSize
124:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize |==> stepStart - stepSize
125:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize |==> stepStart / stepSize
126:ROR:<=(double,double):<(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize <= t |==> stepStart + stepSize < t
127:ROR:<=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize <= t |==> stepStart + stepSize == t
128:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):255:stepStart + stepSize <= t |==> true
129:AOR:-(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):256:t - stepStart |==> t % stepStart
130:AOR:-(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):256:t - stepStart |==> t * stepStart
131:AOR:-(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):256:t - stepStart |==> t + stepStart
132:AOR:-(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):256:t - stepStart |==> t / stepStart
133:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):256:stepSize = t - stepStart |==> <NO-OP>
134:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):261:1 |==> 0
135:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):261:1 |==> -1
136:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):261:k < stages |==> k != stages
137:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):261:k < stages |==> k <= stages
138:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):261:k < stages |==> false
139:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):263:0 |==> 1
140:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):263:0 |==> -1
141:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):263:j < y0.length |==> j != y0.length
142:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):263:j < y0.length |==> j <= y0.length
143:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):263:j < y0.length |==> false
144:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:1 |==> 0
145:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:1 |==> -1
146:AOR:-(int,int):%(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:k - 1 |==> k % 1
147:AOR:-(int,int):*(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:k - 1 |==> k * 1
148:AOR:-(int,int):+(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:k - 1 |==> k + 1
149:AOR:-(int,int):/(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:k - 1 |==> k / 1
150:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:0 |==> 1
151:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:0 |==> -1
152:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:0 |==> 1
153:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:0 |==> -1
154:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:a[k - 1][0] * yDotK[0][j] |==> a[k - 1][0] % yDotK[0][j]
155:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:a[k - 1][0] * yDotK[0][j] |==> a[k - 1][0] + yDotK[0][j]
156:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:a[k - 1][0] * yDotK[0][j] |==> a[k - 1][0] - yDotK[0][j]
157:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):264:a[k - 1][0] * yDotK[0][j] |==> a[k - 1][0] / yDotK[0][j]
158:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):265:1 |==> 0
159:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):265:1 |==> -1
160:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):265:l < k |==> l != k
161:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):265:l < k |==> l <= k
162:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):265:l < k |==> false
163:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:1 |==> 0
164:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:1 |==> -1
165:AOR:-(int,int):%(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:k - 1 |==> k % 1
166:AOR:-(int,int):*(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:k - 1 |==> k * 1
167:AOR:-(int,int):+(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:k - 1 |==> k + 1
168:AOR:-(int,int):/(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:k - 1 |==> k / 1
169:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:a[k - 1][l] * yDotK[l][j] |==> a[k - 1][l] % yDotK[l][j]
170:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:a[k - 1][l] * yDotK[l][j] |==> a[k - 1][l] + yDotK[l][j]
171:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:a[k - 1][l] * yDotK[l][j] |==> a[k - 1][l] - yDotK[l][j]
172:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:a[k - 1][l] * yDotK[l][j] |==> a[k - 1][l] / yDotK[l][j]
173:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):266:sum += a[k - 1][l] * yDotK[l][j] |==> <NO-OP>
174:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:stepSize * sum |==> stepSize % sum
175:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:stepSize * sum |==> stepSize + sum
176:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:stepSize * sum |==> stepSize - sum
177:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:stepSize * sum |==> stepSize / sum
178:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:y[j] + stepSize * sum |==> y[j] % (stepSize * sum)
179:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:y[j] + stepSize * sum |==> y[j] * (stepSize * sum)
180:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:y[j] + stepSize * sum |==> y[j] - stepSize * sum
181:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:y[j] + stepSize * sum |==> y[j] / (stepSize * sum)
182:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):268:yTmp[j] = y[j] + stepSize * sum |==> <NO-OP>
183:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:1 |==> 0
184:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:1 |==> -1
185:AOR:-(int,int):%(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:k - 1 |==> k % 1
186:AOR:-(int,int):*(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:k - 1 |==> k * 1
187:AOR:-(int,int):+(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:k - 1 |==> k + 1
188:AOR:-(int,int):/(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:k - 1 |==> k / 1
189:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:c[k - 1] * stepSize |==> c[k - 1] % stepSize
190:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:c[k - 1] * stepSize |==> c[k - 1] + stepSize
191:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:c[k - 1] * stepSize |==> c[k - 1] - stepSize
192:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:c[k - 1] * stepSize |==> c[k - 1] / stepSize
193:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:stepStart + c[k - 1] * stepSize |==> stepStart % (c[k - 1] * stepSize)
194:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:stepStart + c[k - 1] * stepSize |==> stepStart * (c[k - 1] * stepSize)
195:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:stepStart + c[k - 1] * stepSize |==> stepStart - c[k - 1] * stepSize
196:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:stepStart + c[k - 1] * stepSize |==> stepStart / (c[k - 1] * stepSize)
197:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):271:computeDerivatives(stepStart + c[k - 1] * stepSize, yTmp, yDotK[k]) |==> <NO-OP>
198:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):276:0 |==> 1
199:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):276:0 |==> -1
200:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):276:j < y0.length |==> j != y0.length
201:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):276:j < y0.length |==> j <= y0.length
202:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):276:j < y0.length |==> false
203:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:0 |==> 1
204:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:0 |==> -1
205:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:0 |==> 1
206:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:0 |==> -1
207:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:b[0] * yDotK[0][j] |==> b[0] % yDotK[0][j]
208:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:b[0] * yDotK[0][j] |==> b[0] + yDotK[0][j]
209:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:b[0] * yDotK[0][j] |==> b[0] - yDotK[0][j]
210:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):277:b[0] * yDotK[0][j] |==> b[0] / yDotK[0][j]
211:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):278:1 |==> 0
212:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):278:1 |==> -1
213:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):278:l < stages |==> l != stages
214:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):278:l < stages |==> l <= stages
215:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):278:l < stages |==> false
216:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):279:b[l] * yDotK[l][j] |==> b[l] % yDotK[l][j]
217:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):279:b[l] * yDotK[l][j] |==> b[l] + yDotK[l][j]
218:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):279:b[l] * yDotK[l][j] |==> b[l] - yDotK[l][j]
219:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):279:b[l] * yDotK[l][j] |==> b[l] / yDotK[l][j]
220:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):279:sum += b[l] * yDotK[l][j] |==> <NO-OP>
221:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:stepSize * sum |==> stepSize % sum
222:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:stepSize * sum |==> stepSize + sum
223:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:stepSize * sum |==> stepSize - sum
224:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:stepSize * sum |==> stepSize / sum
225:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:y[j] + stepSize * sum |==> y[j] % (stepSize * sum)
226:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:y[j] + stepSize * sum |==> y[j] * (stepSize * sum)
227:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:y[j] + stepSize * sum |==> y[j] - stepSize * sum
228:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:y[j] + stepSize * sum |==> y[j] / (stepSize * sum)
229:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):281:yTmp[j] = y[j] + stepSize * sum |==> <NO-OP>
230:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):285:error = estimateError(yDotK, y, yTmp, stepSize) |==> <NO-OP>
231:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):286:1.0 |==> 0.0
232:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):286:1.0 |==> -1.0
233:ROR:>=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):286:error >= 1.0 |==> error == 1.0
234:ROR:>=(double,double):>(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):286:error >= 1.0 |==> error > 1.0
235:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):286:error >= 1.0 |==> true
236:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):290:safety * FastMath.pow(error, exp) |==> safety % FastMath.pow(error, exp)
237:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):290:safety * FastMath.pow(error, exp) |==> safety + FastMath.pow(error, exp)
238:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):290:safety * FastMath.pow(error, exp) |==> safety - FastMath.pow(error, exp)
239:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):290:safety * FastMath.pow(error, exp) |==> safety / FastMath.pow(error, exp)
240:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):291:stepSize * factor |==> stepSize % factor
241:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):291:stepSize * factor |==> stepSize + factor
242:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):291:stepSize * factor |==> stepSize - factor
243:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):291:stepSize * factor |==> stepSize / factor
244:LVR:FALSE:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):291:false |==> true
245:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):291:hNew = filterStep(stepSize * factor, forward, false) |==> <NO-OP>
246:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):297:stepStart + stepSize |==> stepStart % stepSize
247:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):297:stepStart + stepSize |==> stepStart * stepSize
248:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):297:stepStart + stepSize |==> stepStart - stepSize
249:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):297:stepStart + stepSize |==> stepStart / stepSize
250:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):297:interpolator.storeTime(stepStart + stepSize) |==> <NO-OP>
251:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):298:0 |==> 1
252:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):298:0 |==> -1
253:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):298:0 |==> 1
254:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):298:0 |==> -1
255:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):298:System.arraycopy(yTmp, 0, y, 0, y0.length) |==> <NO-OP>
256:LVR:POS:0:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:1 |==> 0
257:LVR:POS:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:1 |==> -1
258:AOR:-(int,int):%(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:stages - 1 |==> stages % 1
259:AOR:-(int,int):*(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:stages - 1 |==> stages * 1
260:AOR:-(int,int):+(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:stages - 1 |==> stages + 1
261:AOR:-(int,int):/(int,int):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:stages - 1 |==> stages / 1
262:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:0 |==> 1
263:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:0 |==> -1
264:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:0 |==> 1
265:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:0 |==> -1
266:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):299:System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length) |==> <NO-OP>
267:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):300:stepStart = acceptStep(interpolator, y, yDotTmp, t) |==> <NO-OP>
268:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):301:0 |==> 1
269:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):301:0 |==> -1
270:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):301:0 |==> 1
271:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):301:0 |==> -1
272:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):301:System.arraycopy(y, 0, yTmp, 0, y.length) |==> <NO-OP>
273:COR:isLastStep:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):303:isLastStep |==> false
274:COR:isLastStep:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):303:isLastStep |==> true
275:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):306:interpolator.storeTime(stepStart) |==> <NO-OP>
276:COR:fsal:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):308:fsal |==> false
277:COR:fsal:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):308:fsal |==> true
278:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:0 |==> 1
279:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:0 |==> -1
280:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:0 |==> 1
281:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:0 |==> -1
282:LVR:0:POS:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:0 |==> 1
283:LVR:0:NEG:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:0 |==> -1
284:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):310:System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0.length) |==> <NO-OP>
285:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):315:safety * FastMath.pow(error, exp) |==> safety % FastMath.pow(error, exp)
286:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):315:safety * FastMath.pow(error, exp) |==> safety + FastMath.pow(error, exp)
287:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):315:safety * FastMath.pow(error, exp) |==> safety - FastMath.pow(error, exp)
288:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):315:safety * FastMath.pow(error, exp) |==> safety / FastMath.pow(error, exp)
289:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):316:stepSize * factor |==> stepSize % factor
290:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):316:stepSize * factor |==> stepSize + factor
291:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):316:stepSize * factor |==> stepSize - factor
292:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):316:stepSize * factor |==> stepSize / factor
293:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):317:stepStart + scaledH |==> stepStart % scaledH
294:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):317:stepStart + scaledH |==> stepStart * scaledH
295:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):317:stepStart + scaledH |==> stepStart - scaledH
296:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):317:stepStart + scaledH |==> stepStart / scaledH
297:COR:forward:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:forward |==> false
298:COR:forward:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:forward |==> true
299:ROR:>=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:nextT >= t |==> nextT == t
300:ROR:>=(double,double):>(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:nextT >= t |==> nextT > t
301:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:nextT >= t |==> true
302:ROR:<=(double,double):<(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:nextT <= t |==> nextT < t
303:ROR:<=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:nextT <= t |==> nextT == t
304:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):318:nextT <= t |==> true
305:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):319:hNew = filterStep(scaledH, forward, nextIsLast) |==> <NO-OP>
306:AOR:+(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):321:stepStart + hNew |==> stepStart % hNew
307:AOR:+(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):321:stepStart + hNew |==> stepStart * hNew
308:AOR:+(double,double):-(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):321:stepStart + hNew |==> stepStart - hNew
309:AOR:+(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):321:stepStart + hNew |==> stepStart / hNew
310:COR:forward:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:forward |==> false
311:COR:forward:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:forward |==> true
312:ROR:>=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:filteredNextT >= t |==> filteredNextT == t
313:ROR:>=(double,double):>(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:filteredNextT >= t |==> filteredNextT > t
314:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:filteredNextT >= t |==> true
315:ROR:<=(double,double):<(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:filteredNextT <= t |==> filteredNextT < t
316:ROR:<=(double,double):==(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:filteredNextT <= t |==> filteredNextT == t
317:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):322:filteredNextT <= t |==> true
318:COR:filteredNextIsLast:TRUE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):323:filteredNextIsLast |==> false
319:COR:filteredNextIsLast:FALSE:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):323:filteredNextIsLast |==> true
320:AOR:-(double,double):%(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):324:t - stepStart |==> t % stepStart
321:AOR:-(double,double):*(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):324:t - stepStart |==> t * stepStart
322:AOR:-(double,double):+(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):324:t - stepStart |==> t + stepStart
323:AOR:-(double,double):/(double,double):org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):324:t - stepStart |==> t / stepStart
324:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):324:hNew = t - stepStart |==> <NO-OP>
325:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):332:equations.setTime(stepStart) |==> <NO-OP>
326:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):333:equations.setCompleteState(y) |==> <NO-OP>
327:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@integrate(org.apache.commons.math.ode.ExpandableStatefulODE,double):335:resetInternalState() |==> <NO-OP>
328:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@setMinReduction(double):350:this.minReduction = minReduction |==> <NO-OP>
329:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator@setMaxGrowth(double):364:this.maxGrowth = maxGrowth |==> <NO-OP>
