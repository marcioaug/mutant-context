1:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:34:0L |==> 1L
2:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:34:0L |==> -1L
3:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:36:1L |==> 0L
4:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:36:1L |==> -1L
5:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:38:-1L |==> 0L
6:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:38:-1L |==> 1L
7:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:40:0 |==> 1
8:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:40:0 |==> -1
9:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:42:1 |==> 0
10:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:42:1 |==> -1
11:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:44:-1 |==> 0
12:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:44:-1 |==> 1
13:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:46:0 |==> 1
14:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:46:0 |==> -1
15:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:48:1 |==> 0
16:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:48:1 |==> -1
17:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:50:-1 |==> 0
18:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:50:-1 |==> 1
19:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:52:0 |==> 1
20:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:52:0 |==> -1
21:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:54:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:54:1 |==> -1
23:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:56:-1 |==> 0
24:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:56:-1 |==> 1
25:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:58:0.0 |==> 1.0
26:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:58:0.0 |==> -1.0
27:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:60:1.0 |==> 0.0
28:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:60:1.0 |==> -1.0
29:ORU:-(double):+(double):org.apache.commons.lang3.math.NumberUtils:62:-1.0 |==> +1.0
30:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:62:1.0 |==> 0.0
31:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:62:1.0 |==> -1.0
32:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:64:0.0F |==> 1.0F
33:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:64:0.0F |==> -1.0F
34:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:66:1.0F |==> 0.0F
35:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:66:1.0F |==> -1.0F
36:ORU:-(float):+(float):org.apache.commons.lang3.math.NumberUtils:68:-1.0F |==> +1.0F
37:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:68:1.0F |==> 0.0F
38:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:68:1.0F |==> -1.0F
39:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String):100:0 |==> 1
40:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String):100:0 |==> -1
41:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String,int):121:str == null |==> false
42:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String):149:0L |==> 1L
43:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String):149:0L |==> -1L
44:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String,long):170:str == null |==> false
45:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String):199:0.0F |==> 1.0F
46:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String):199:0.0F |==> -1.0F
47:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String,float):222:str == null |==> false
48:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String):251:0.0 |==> 1.0
49:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String):251:0.0 |==> -1.0
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String,double):274:str == null |==> false
51:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String):303:0 |==> 1
52:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String):303:0 |==> -1
53:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String,byte):324:str == null |==> false
54:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String):352:0 |==> 1
55:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String):352:0 |==> -1
56:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String,short):373:str == null |==> false
57:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):451:str == null |==> false
58:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):454:StringUtils.isBlank(str) |==> false
59:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):454:StringUtils.isBlank(str) |==> true
60:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):459:0 |==> 1
61:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):459:0 |==> -1
62:COR:str.startsWith(pfx):TRUE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):461:str.startsWith(pfx) |==> false
63:COR:str.startsWith(pfx):FALSE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):461:str.startsWith(pfx) |==> true
64:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):462:pfxLen += pfx.length() |==> <NO-OP>
65:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:0 |==> 1
66:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:0 |==> -1
67:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen != 0
68:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen >= 0
69:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> false
70:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):467:0 |==> 1
71:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):467:0 |==> -1
72:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:i < str.length() |==> i != str.length()
73:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:i < str.length() |==> i <= str.length()
74:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:i < str.length() |==> false
75:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):469:firstSigDigit = str.charAt(i) |==> <NO-OP>
76:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):470:firstSigDigit == '0' |==> firstSigDigit <= '0'
77:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):470:firstSigDigit == '0' |==> firstSigDigit >= '0'
78:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):470:firstSigDigit == '0' |==> false
79:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:pfxLen++ |==> <NO-OP>
80:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - pfxLen |==> str.length() % pfxLen
81:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - pfxLen |==> str.length() * pfxLen
82:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - pfxLen |==> str.length() + pfxLen
83:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - pfxLen |==> str.length() / pfxLen
84:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:16 |==> 0
85:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:16 |==> -16
86:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 |==> hexDigits != 16
87:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 |==> hexDigits >= 16
88:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 |==> false
89:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:16 |==> 0
90:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:16 |==> -16
91:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 |==> hexDigits <= 16
92:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 |==> hexDigits >= 16
93:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 |==> false
94:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:firstSigDigit > '7' |==> firstSigDigit != '7'
95:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:firstSigDigit > '7' |==> firstSigDigit >= '7'
96:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:firstSigDigit > '7' |==> false
97:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 && firstSigDigit > '7' |==> hexDigits == 16 == firstSigDigit > '7'
98:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 && firstSigDigit > '7' |==> false
99:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 && firstSigDigit > '7' |==> hexDigits == 16
100:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits == 16 && firstSigDigit > '7' |==> firstSigDigit > '7'
101:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 || (hexDigits == 16 && firstSigDigit > '7') |==> hexDigits > 16 != (hexDigits == 16 && firstSigDigit > '7')
102:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 || (hexDigits == 16 && firstSigDigit > '7') |==> hexDigits > 16
103:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 || (hexDigits == 16 && firstSigDigit > '7') |==> (hexDigits == 16 && firstSigDigit > '7')
104:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):477:hexDigits > 16 || (hexDigits == 16 && firstSigDigit > '7') |==> true
105:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:8 |==> 0
106:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:8 |==> -8
107:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 |==> hexDigits != 8
108:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 |==> hexDigits >= 8
109:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 |==> false
110:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:8 |==> 0
111:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:8 |==> -8
112:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 |==> hexDigits <= 8
113:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 |==> hexDigits >= 8
114:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 |==> false
115:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:firstSigDigit > '7' |==> firstSigDigit != '7'
116:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:firstSigDigit > '7' |==> firstSigDigit >= '7'
117:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:firstSigDigit > '7' |==> false
118:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 && firstSigDigit > '7' |==> hexDigits == 8 == firstSigDigit > '7'
119:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 && firstSigDigit > '7' |==> false
120:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 && firstSigDigit > '7' |==> hexDigits == 8
121:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits == 8 && firstSigDigit > '7' |==> firstSigDigit > '7'
122:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 || (hexDigits == 8 && firstSigDigit > '7') |==> hexDigits > 8 != (hexDigits == 8 && firstSigDigit > '7')
123:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 || (hexDigits == 8 && firstSigDigit > '7') |==> hexDigits > 8
124:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 || (hexDigits == 8 && firstSigDigit > '7') |==> (hexDigits == 8 && firstSigDigit > '7')
125:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):480:hexDigits > 8 || (hexDigits == 8 && firstSigDigit > '7') |==> true
126:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:1 |==> 0
127:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:1 |==> -1
128:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:str.length() - 1 |==> str.length() % 1
129:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:str.length() - 1 |==> str.length() * 1
130:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:str.length() - 1 |==> str.length() + 1
131:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:str.length() - 1 |==> str.length() / 1
132:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') % str.indexOf('E')
133:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') * str.indexOf('E')
134:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') - str.indexOf('E')
135:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') / str.indexOf('E')
136:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:1 |==> 0
137:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:1 |==> -1
138:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) % 1
139:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) * 1
140:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') + 1 |==> str.indexOf('e') + str.indexOf('E') - 1
141:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):490:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) / 1
142:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:0 |==> 1
143:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:0 |==> -1
144:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):495:-1 |==> 0
145:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):495:-1 |==> 1
146:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):495:decPos > -1 |==> decPos != -1
147:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):495:decPos > -1 |==> decPos >= -1
148:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):495:decPos > -1 |==> false
149:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):497:-1 |==> 0
150:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):497:-1 |==> 1
151:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):497:expPos > -1 |==> expPos != -1
152:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):497:expPos > -1 |==> expPos >= -1
153:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):497:expPos > -1 |==> false
154:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos |==> expPos != decPos
155:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos |==> expPos <= decPos
156:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos |==> false
157:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos > str.length() |==> expPos != str.length()
158:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos > str.length() |==> expPos >= str.length()
159:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos > str.length() |==> false
160:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos || expPos > str.length() |==> expPos < decPos != expPos > str.length()
161:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos || expPos > str.length() |==> expPos < decPos
162:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos || expPos > str.length() |==> expPos > str.length()
163:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):498:expPos < decPos || expPos > str.length() |==> true
164:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):501:1 |==> 0
165:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):501:1 |==> -1
166:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):501:decPos + 1 |==> decPos % 1
167:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):501:decPos + 1 |==> decPos * 1
168:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):501:decPos + 1 |==> decPos - 1
169:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):501:decPos + 1 |==> decPos / 1
170:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:1 |==> 0
171:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:1 |==> -1
172:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:decPos + 1 |==> decPos % 1
173:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:decPos + 1 |==> decPos * 1
174:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:decPos + 1 |==> decPos - 1
175:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:decPos + 1 |==> decPos / 1
176:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):505:0 |==> 1
177:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):505:0 |==> -1
178:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):506:numDecimals = dec.length() |==> <NO-OP>
179:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):508:-1 |==> 0
180:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):508:-1 |==> 1
181:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):508:expPos > -1 |==> expPos != -1
182:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):508:expPos > -1 |==> expPos >= -1
183:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):508:expPos > -1 |==> false
184:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:expPos > str.length() |==> expPos != str.length()
185:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:expPos > str.length() |==> expPos >= str.length()
186:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:expPos > str.length() |==> false
187:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):512:0 |==> 1
188:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):512:0 |==> -1
189:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:lastChar != '.' |==> lastChar < '.'
190:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:lastChar != '.' |==> lastChar > '.'
191:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:lastChar != '.' |==> true
192:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar) == (lastChar != '.')
193:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:!Character.isDigit(lastChar) && lastChar != '.' |==> false
194:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar)
195:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):518:!Character.isDigit(lastChar) && lastChar != '.' |==> lastChar != '.'
196:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:-1 |==> 0
197:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:-1 |==> 1
198:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 |==> expPos != -1
199:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 |==> expPos >= -1
200:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 |==> false
201:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:1 |==> 0
202:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:1 |==> -1
203:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:str.length() - 1 |==> str.length() % 1
204:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:str.length() - 1 |==> str.length() * 1
205:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:str.length() - 1 |==> str.length() + 1
206:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:str.length() - 1 |==> str.length() / 1
207:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos < str.length() - 1 |==> expPos != str.length() - 1
208:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos < str.length() - 1 |==> expPos <= str.length() - 1
209:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos < str.length() - 1 |==> false
210:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
211:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 && expPos < str.length() - 1 |==> false
212:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
213:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):519:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
214:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:1 |==> 0
215:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:1 |==> -1
216:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:expPos + 1 |==> expPos % 1
217:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:expPos + 1 |==> expPos * 1
218:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:expPos + 1 |==> expPos - 1
219:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:expPos + 1 |==> expPos / 1
220:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:1 |==> 0
221:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:1 |==> -1
222:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:str.length() - 1 |==> str.length() % 1
223:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:str.length() - 1 |==> str.length() * 1
224:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:str.length() - 1 |==> str.length() + 1
225:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):520:str.length() - 1 |==> str.length() / 1
226:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:0 |==> 1
227:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:0 |==> -1
228:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:1 |==> 0
229:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:1 |==> -1
230:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:str.length() - 1 |==> str.length() % 1
231:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:str.length() - 1 |==> str.length() * 1
232:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:str.length() - 1 |==> str.length() + 1
233:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):525:str.length() - 1 |==> str.length() / 1
234:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):526:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
235:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):526:isAllZeros(mant) && isAllZeros(exp) |==> false
236:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):526:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
237:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):526:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
238:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):530:dec == null |==> false
239:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):531:exp == null |==> false
240:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):530:dec == null && exp == null |==> dec == null == (exp == null)
241:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):531:dec == null && exp == null |==> false
242:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):530:dec == null && exp == null |==> dec == null
243:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):531:dec == null && exp == null |==> exp == null
244:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:0 |==> 1
245:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:0 |==> -1
246:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' |==> numeric.charAt(0) <= '-'
247:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' |==> numeric.charAt(0) >= '-'
248:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' |==> false
249:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:1 |==> 0
250:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:1 |==> -1
251:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' == isDigits(numeric.substring(1))
252:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> false
253:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-'
254:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> isDigits(numeric.substring(1))
255:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) != isDigits(numeric)
256:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1))
257:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> isDigits(numeric)
258:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> true
259:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):530:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) == (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
260:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> false
261:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):530:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null
262:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):532:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
263:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:0.0F |==> 1.0F
264:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:0.0F |==> -1.0F
265:ROR:==(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
266:ROR:==(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
267:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F |==> false
268:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
269:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F && !allZeros |==> false
270:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
271:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.floatValue() == 0.0F && !allZeros |==> !allZeros
272:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
273:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
274:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
275:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):546:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
276:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:0.0 |==> 1.0
277:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:0.0 |==> -1.0
278:ROR:==(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 |==> d.floatValue() <= 0.0
279:ROR:==(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 |==> d.floatValue() >= 0.0
280:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 |==> false
281:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 == !allZeros
282:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 && !allZeros |==> false
283:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0
284:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.floatValue() == 0.0 && !allZeros |==> !allZeros
285:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.floatValue() == 0.0 && !allZeros)
286:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite()
287:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> (d.floatValue() == 0.0 && !allZeros)
288:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):560:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> true
289:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:-1 |==> 0
290:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:-1 |==> 1
291:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 |==> expPos != -1
292:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 |==> expPos >= -1
293:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 |==> false
294:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:1 |==> 0
295:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:1 |==> -1
296:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:str.length() - 1 |==> str.length() % 1
297:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:str.length() - 1 |==> str.length() * 1
298:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:str.length() - 1 |==> str.length() + 1
299:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:str.length() - 1 |==> str.length() / 1
300:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos < str.length() - 1 |==> expPos != str.length() - 1
301:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos < str.length() - 1 |==> expPos <= str.length() - 1
302:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos < str.length() - 1 |==> false
303:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
304:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 && expPos < str.length() - 1 |==> false
305:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
306:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):579:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
307:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):580:1 |==> 0
308:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):580:1 |==> -1
309:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):580:expPos + 1 |==> expPos % 1
310:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):580:expPos + 1 |==> expPos * 1
311:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):580:expPos + 1 |==> expPos - 1
312:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):580:expPos + 1 |==> expPos / 1
313:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):584:dec == null |==> false
314:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):584:exp == null |==> false
315:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):584:dec == null && exp == null |==> dec == null == (exp == null)
316:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):584:dec == null && exp == null |==> false
317:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):584:dec == null && exp == null |==> dec == null
318:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):584:dec == null && exp == null |==> exp == null
319:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):600:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
320:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):600:isAllZeros(mant) && isAllZeros(exp) |==> false
321:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):600:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
322:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):600:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
323:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):602:7 |==> 0
324:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):602:7 |==> -7
325:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):602:numDecimals <= 7 |==> numDecimals < 7
326:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):602:numDecimals <= 7 |==> numDecimals == 7
327:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):602:numDecimals <= 7 |==> true
328:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:0.0F |==> 1.0F
329:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:0.0F |==> -1.0F
330:ROR:==(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
331:ROR:==(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
332:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F |==> false
333:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
334:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F && !allZeros |==> false
335:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
336:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.floatValue() == 0.0F && !allZeros |==> !allZeros
337:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
338:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
339:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
340:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):604:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
341:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):612:16 |==> 0
342:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):612:16 |==> -16
343:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):612:numDecimals <= 16 |==> numDecimals < 16
344:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):612:numDecimals <= 16 |==> numDecimals == 16
345:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):612:numDecimals <= 16 |==> true
346:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:0.0 |==> 1.0
347:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:0.0 |==> -1.0
348:ROR:==(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 |==> d.doubleValue() <= 0.0
349:ROR:==(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 |==> d.doubleValue() >= 0.0
350:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 |==> false
351:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 == !allZeros
352:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 && !allZeros |==> false
353:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0
354:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.doubleValue() == 0.0 && !allZeros |==> !allZeros
355:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.doubleValue() == 0.0 && !allZeros)
356:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite()
357:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> (d.doubleValue() == 0.0 && !allZeros)
358:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):614:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> true
359:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):634:str == null |==> false
360:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):635:true |==> false
361:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:1 |==> 0
362:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:1 |==> -1
363:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:str.length() - 1 |==> str.length() % 1
364:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:str.length() - 1 |==> str.length() * 1
365:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:str.length() - 1 |==> str.length() + 1
366:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:str.length() - 1 |==> str.length() / 1
367:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:0 |==> 1
368:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:0 |==> -1
369:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:i >= 0 |==> i == 0
370:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:i >= 0 |==> i > 0
371:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):637:i >= 0 |==> true
372:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):638:str.charAt(i) != '0' |==> str.charAt(i) < '0'
373:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):638:str.charAt(i) != '0' |==> str.charAt(i) > '0'
374:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):638:str.charAt(i) != '0' |==> true
375:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):639:false |==> true
376:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):642:0 |==> 1
377:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):642:0 |==> -1
378:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):642:str.length() > 0 |==> str.length() != 0
379:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):642:str.length() > 0 |==> str.length() >= 0
380:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):642:str.length() > 0 |==> false
381:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createFloat(java.lang.String):656:str == null |==> false
382:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createDouble(java.lang.String):672:str == null |==> false
383:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createInteger(java.lang.String):689:str == null |==> false
384:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createLong(java.lang.String):707:str == null |==> false
385:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):724:str == null |==> false
386:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):727:0 |==> 1
387:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):727:0 |==> -1
388:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):728:10 |==> 0
389:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):728:10 |==> -10
390:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):729:false |==> true
391:COR:str.startsWith("-"):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):730:str.startsWith("-") |==> false
392:COR:str.startsWith("-"):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):730:str.startsWith("-") |==> true
393:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:true |==> false
394:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:negate = true |==> <NO-OP>
395:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):732:1 |==> 0
396:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):732:1 |==> -1
397:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):732:pos = 1 |==> <NO-OP>
398:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):734:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos) != str.startsWith("0x", pos)
399:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):734:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos)
400:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):734:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos)
401:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):734:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> true
402:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):735:16 |==> 0
403:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):735:16 |==> -16
404:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):735:radix = 16 |==> <NO-OP>
405:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):736:2 |==> 0
406:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):736:2 |==> -2
407:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):736:pos += 2 |==> <NO-OP>
408:COR:str.startsWith("#", pos):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):737:str.startsWith("#", pos) |==> false
409:COR:str.startsWith("#", pos):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):737:str.startsWith("#", pos) |==> true
410:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):738:16 |==> 0
411:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):738:16 |==> -16
412:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):738:radix = 16 |==> <NO-OP>
413:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):739:pos++ |==> <NO-OP>
414:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:1 |==> 0
415:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:1 |==> -1
416:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:pos + 1 |==> pos % 1
417:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:pos + 1 |==> pos * 1
418:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:pos + 1 |==> pos - 1
419:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:pos + 1 |==> pos / 1
420:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.length() > pos + 1 |==> str.length() != pos + 1
421:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.length() > pos + 1 |==> str.length() >= pos + 1
422:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.length() > pos + 1 |==> false
423:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos) == str.length() > pos + 1
424:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.startsWith("0", pos) && str.length() > pos + 1 |==> false
425:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos)
426:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):740:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.length() > pos + 1
427:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):741:8 |==> 0
428:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):741:8 |==> -8
429:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):741:radix = 8 |==> <NO-OP>
430:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):742:pos++ |==> <NO-OP>
431:COR:negate:TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):746:negate |==> false
432:COR:negate:FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):746:negate |==> true
433:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):759:str == null |==> false
434:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):763:StringUtils.isBlank(str) |==> false
435:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):763:StringUtils.isBlank(str) |==> true
436:COR:str.trim().startsWith("--"):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):766:str.trim().startsWith("--") |==> false
437:COR:str.trim().startsWith("--"):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):766:str.trim().startsWith("--") |==> true
438:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long[]):788:validateArray(array) |==> <NO-OP>
439:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(long[]):791:0 |==> 1
440:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(long[]):791:0 |==> -1
441:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(long[]):792:1 |==> 0
442:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(long[]):792:1 |==> -1
443:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):792:i < array.length |==> i != array.length
444:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):792:i < array.length |==> i <= array.length
445:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):792:i < array.length |==> false
446:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):793:array[i] < min |==> array[i] != min
447:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):793:array[i] < min |==> array[i] <= min
448:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):793:array[i] < min |==> false
449:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long[]):794:min = array[i] |==> <NO-OP>
450:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int[]):811:validateArray(array) |==> <NO-OP>
451:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(int[]):814:0 |==> 1
452:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(int[]):814:0 |==> -1
453:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(int[]):815:1 |==> 0
454:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(int[]):815:1 |==> -1
455:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):815:j < array.length |==> j != array.length
456:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):815:j < array.length |==> j <= array.length
457:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):815:j < array.length |==> false
458:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):816:array[j] < min |==> array[j] != min
459:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):816:array[j] < min |==> array[j] <= min
460:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):816:array[j] < min |==> false
461:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int[]):817:min = array[j] |==> <NO-OP>
462:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short[]):834:validateArray(array) |==> <NO-OP>
463:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(short[]):837:0 |==> 1
464:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(short[]):837:0 |==> -1
465:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(short[]):838:1 |==> 0
466:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(short[]):838:1 |==> -1
467:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):838:i < array.length |==> i != array.length
468:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):838:i < array.length |==> i <= array.length
469:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):838:i < array.length |==> false
470:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):839:array[i] < min |==> array[i] != min
471:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):839:array[i] < min |==> array[i] <= min
472:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):839:array[i] < min |==> false
473:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short[]):840:min = array[i] |==> <NO-OP>
474:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte[]):857:validateArray(array) |==> <NO-OP>
475:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(byte[]):860:0 |==> 1
476:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(byte[]):860:0 |==> -1
477:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(byte[]):861:1 |==> 0
478:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(byte[]):861:1 |==> -1
479:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):861:i < array.length |==> i != array.length
480:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):861:i < array.length |==> i <= array.length
481:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):861:i < array.length |==> false
482:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):862:array[i] < min |==> array[i] != min
483:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):862:array[i] < min |==> array[i] <= min
484:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):862:array[i] < min |==> false
485:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte[]):863:min = array[i] |==> <NO-OP>
486:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(double[]):881:validateArray(array) |==> <NO-OP>
487:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(double[]):884:0 |==> 1
488:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(double[]):884:0 |==> -1
489:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(double[]):885:1 |==> 0
490:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(double[]):885:1 |==> -1
491:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):885:i < array.length |==> i != array.length
492:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):885:i < array.length |==> i <= array.length
493:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):885:i < array.length |==> false
494:COR:Double.isNaN(array[i]):TRUE:org.apache.commons.lang3.math.NumberUtils@min(double[]):886:Double.isNaN(array[i]) |==> false
495:COR:Double.isNaN(array[i]):FALSE:org.apache.commons.lang3.math.NumberUtils@min(double[]):886:Double.isNaN(array[i]) |==> true
496:ROR:<(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):889:array[i] < min |==> array[i] != min
497:ROR:<(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):889:array[i] < min |==> array[i] <= min
498:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):889:array[i] < min |==> false
499:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(double[]):890:min = array[i] |==> <NO-OP>
500:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(float[]):908:validateArray(array) |==> <NO-OP>
501:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(float[]):911:0 |==> 1
502:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(float[]):911:0 |==> -1
503:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(float[]):912:1 |==> 0
504:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(float[]):912:1 |==> -1
505:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):912:i < array.length |==> i != array.length
506:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):912:i < array.length |==> i <= array.length
507:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):912:i < array.length |==> false
508:COR:Float.isNaN(array[i]):TRUE:org.apache.commons.lang3.math.NumberUtils@min(float[]):913:Float.isNaN(array[i]) |==> false
509:COR:Float.isNaN(array[i]):FALSE:org.apache.commons.lang3.math.NumberUtils@min(float[]):913:Float.isNaN(array[i]) |==> true
510:ROR:<(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):916:array[i] < min |==> array[i] != min
511:ROR:<(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):916:array[i] < min |==> array[i] <= min
512:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):916:array[i] < min |==> false
513:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(float[]):917:min = array[i] |==> <NO-OP>
514:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long[]):936:validateArray(array) |==> <NO-OP>
515:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(long[]):939:0 |==> 1
516:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(long[]):939:0 |==> -1
517:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(long[]):940:1 |==> 0
518:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(long[]):940:1 |==> -1
519:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):940:j < array.length |==> j != array.length
520:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):940:j < array.length |==> j <= array.length
521:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):940:j < array.length |==> false
522:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):941:array[j] > max |==> array[j] != max
523:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):941:array[j] > max |==> array[j] >= max
524:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):941:array[j] > max |==> false
525:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long[]):942:max = array[j] |==> <NO-OP>
526:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int[]):959:validateArray(array) |==> <NO-OP>
527:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(int[]):962:0 |==> 1
528:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(int[]):962:0 |==> -1
529:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(int[]):963:1 |==> 0
530:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(int[]):963:1 |==> -1
531:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):963:j < array.length |==> j != array.length
532:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):963:j < array.length |==> j <= array.length
533:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):963:j < array.length |==> false
534:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):964:array[j] > max |==> array[j] != max
535:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):964:array[j] > max |==> array[j] >= max
536:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):964:array[j] > max |==> false
537:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int[]):965:max = array[j] |==> <NO-OP>
538:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short[]):982:validateArray(array) |==> <NO-OP>
539:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(short[]):985:0 |==> 1
540:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(short[]):985:0 |==> -1
541:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(short[]):986:1 |==> 0
542:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(short[]):986:1 |==> -1
543:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):986:i < array.length |==> i != array.length
544:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):986:i < array.length |==> i <= array.length
545:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):986:i < array.length |==> false
546:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):987:array[i] > max |==> array[i] != max
547:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):987:array[i] > max |==> array[i] >= max
548:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):987:array[i] > max |==> false
549:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short[]):988:max = array[i] |==> <NO-OP>
550:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1005:validateArray(array) |==> <NO-OP>
551:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1008:0 |==> 1
552:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1008:0 |==> -1
553:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1009:1 |==> 0
554:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1009:1 |==> -1
555:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1009:i < array.length |==> i != array.length
556:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1009:i < array.length |==> i <= array.length
557:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1009:i < array.length |==> false
558:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1010:array[i] > max |==> array[i] != max
559:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1010:array[i] > max |==> array[i] >= max
560:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1010:array[i] > max |==> false
561:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1011:max = array[i] |==> <NO-OP>
562:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(double[]):1029:validateArray(array) |==> <NO-OP>
563:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(double[]):1032:0 |==> 1
564:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(double[]):1032:0 |==> -1
565:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(double[]):1033:1 |==> 0
566:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(double[]):1033:1 |==> -1
567:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1033:j < array.length |==> j != array.length
568:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1033:j < array.length |==> j <= array.length
569:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1033:j < array.length |==> false
570:COR:Double.isNaN(array[j]):TRUE:org.apache.commons.lang3.math.NumberUtils@max(double[]):1034:Double.isNaN(array[j]) |==> false
571:COR:Double.isNaN(array[j]):FALSE:org.apache.commons.lang3.math.NumberUtils@max(double[]):1034:Double.isNaN(array[j]) |==> true
572:ROR:>(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1037:array[j] > max |==> array[j] != max
573:ROR:>(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1037:array[j] > max |==> array[j] >= max
574:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1037:array[j] > max |==> false
575:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(double[]):1038:max = array[j] |==> <NO-OP>
576:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(float[]):1056:validateArray(array) |==> <NO-OP>
577:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(float[]):1059:0 |==> 1
578:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(float[]):1059:0 |==> -1
579:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(float[]):1060:1 |==> 0
580:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(float[]):1060:1 |==> -1
581:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1060:j < array.length |==> j != array.length
582:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1060:j < array.length |==> j <= array.length
583:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1060:j < array.length |==> false
584:COR:Float.isNaN(array[j]):TRUE:org.apache.commons.lang3.math.NumberUtils@max(float[]):1061:Float.isNaN(array[j]) |==> false
585:COR:Float.isNaN(array[j]):FALSE:org.apache.commons.lang3.math.NumberUtils@max(float[]):1061:Float.isNaN(array[j]) |==> true
586:ROR:>(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1064:array[j] > max |==> array[j] != max
587:ROR:>(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1064:array[j] > max |==> array[j] >= max
588:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1064:array[j] > max |==> false
589:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(float[]):1065:max = array[j] |==> <NO-OP>
590:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1079:array == null |==> false
591:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1081:0 |==> 1
592:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1081:0 |==> -1
593:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1081:Array.getLength(array) == 0 |==> Array.getLength(array) <= 0
594:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1081:Array.getLength(array) == 0 |==> Array.getLength(array) >= 0
595:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1081:Array.getLength(array) == 0 |==> false
596:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1097:b < a |==> b != a
597:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1097:b < a |==> b <= a
598:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1097:b < a |==> false
599:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1098:a = b |==> <NO-OP>
600:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1100:c < a |==> c != a
601:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1100:c < a |==> c <= a
602:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1100:c < a |==> false
603:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1101:a = c |==> <NO-OP>
604:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1115:b < a |==> b != a
605:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1115:b < a |==> b <= a
606:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1115:b < a |==> false
607:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1116:a = b |==> <NO-OP>
608:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1118:c < a |==> c != a
609:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1118:c < a |==> c <= a
610:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1118:c < a |==> false
611:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1119:a = c |==> <NO-OP>
612:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1133:b < a |==> b != a
613:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1133:b < a |==> b <= a
614:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1133:b < a |==> false
615:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1134:a = b |==> <NO-OP>
616:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1136:c < a |==> c != a
617:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1136:c < a |==> c <= a
618:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1136:c < a |==> false
619:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1137:a = c |==> <NO-OP>
620:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1151:b < a |==> b != a
621:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1151:b < a |==> b <= a
622:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1151:b < a |==> false
623:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1152:a = b |==> <NO-OP>
624:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1154:c < a |==> c != a
625:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1154:c < a |==> c <= a
626:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1154:c < a |==> false
627:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1155:a = c |==> <NO-OP>
628:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1203:b > a |==> b != a
629:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1203:b > a |==> b >= a
630:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1203:b > a |==> false
631:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1204:a = b |==> <NO-OP>
632:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1206:c > a |==> c != a
633:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1206:c > a |==> c >= a
634:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1206:c > a |==> false
635:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1207:a = c |==> <NO-OP>
636:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1221:b > a |==> b != a
637:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1221:b > a |==> b >= a
638:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1221:b > a |==> false
639:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1222:a = b |==> <NO-OP>
640:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1224:c > a |==> c != a
641:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1224:c > a |==> c >= a
642:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1224:c > a |==> false
643:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1225:a = c |==> <NO-OP>
644:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1239:b > a |==> b != a
645:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1239:b > a |==> b >= a
646:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1239:b > a |==> false
647:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1240:a = b |==> <NO-OP>
648:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1242:c > a |==> c != a
649:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1242:c > a |==> c >= a
650:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1242:c > a |==> false
651:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1243:a = c |==> <NO-OP>
652:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1257:b > a |==> b != a
653:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1257:b > a |==> b >= a
654:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1257:b > a |==> false
655:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1258:a = b |==> <NO-OP>
656:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1260:c > a |==> c != a
657:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1260:c > a |==> c >= a
658:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1260:c > a |==> false
659:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1261:a = c |==> <NO-OP>
660:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1310:StringUtils.isEmpty(str) |==> false
661:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1310:StringUtils.isEmpty(str) |==> true
662:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1311:false |==> true
663:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1313:0 |==> 1
664:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1313:0 |==> -1
665:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1313:i < str.length() |==> i != str.length()
666:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1313:i < str.length() |==> i <= str.length()
667:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1313:i < str.length() |==> false
668:COR:Character.isDigit(str.charAt(i)):TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1314:Character.isDigit(str.charAt(i)) |==> false
669:COR:Character.isDigit(str.charAt(i)):FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1314:Character.isDigit(str.charAt(i)) |==> true
670:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1315:false |==> true
671:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1318:true |==> false
672:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1335:StringUtils.isEmpty(str) |==> false
673:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1335:StringUtils.isEmpty(str) |==> true
674:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:false |==> true
675:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1340:false |==> true
676:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1341:false |==> true
677:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1342:false |==> true
678:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:false |==> true
679:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:0 |==> 1
680:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:0 |==> -1
681:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[0] == '-' |==> chars[0] <= '-'
682:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[0] == '-' |==> chars[0] >= '-'
683:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[0] == '-' |==> false
684:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:1 |==> 0
685:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:1 |==> -1
686:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:0 |==> 1
687:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:0 |==> -1
688:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:1 |==> 0
689:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:1 |==> -1
690:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start % 1
691:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start * 1
692:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start - 1
693:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start / 1
694:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 |==> sz != start + 1
695:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 |==> sz >= start + 1
696:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 |==> false
697:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[start] == '0' |==> chars[start] <= '0'
698:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[start] == '0' |==> chars[start] >= '0'
699:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[start] == '0' |==> false
700:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' |==> sz > start + 1 == (chars[start] == '0')
701:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' |==> false
702:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' |==> sz > start + 1
703:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' |==> chars[start] == '0'
704:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:1 |==> 0
705:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:1 |==> -1
706:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start % 1
707:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start * 1
708:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start - 1
709:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:start + 1 |==> start / 1
710:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[start + 1] == 'x' |==> chars[start + 1] <= 'x'
711:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[start + 1] == 'x' |==> chars[start + 1] >= 'x'
712:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[start + 1] == 'x' |==> false
713:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> (sz > start + 1 && chars[start] == '0') == (chars[start + 1] == 'x')
714:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> false
715:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> sz > start + 1 && chars[start] == '0'
716:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start + 1] == 'x'
717:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:2 |==> 0
718:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:2 |==> -2
719:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:start + 2 |==> start % 2
720:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:start + 2 |==> start * 2
721:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:start + 2 |==> start - 2
722:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:start + 2 |==> start / 2
723:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1348:i == sz |==> i <= sz
724:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1348:i == sz |==> i >= sz
725:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1348:i == sz |==> false
726:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1349:false |==> true
727:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1352:i < chars.length |==> i != chars.length
728:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1352:i < chars.length |==> i <= chars.length
729:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1352:i < chars.length |==> false
730:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' |==> chars[i] != '0'
731:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' |==> chars[i] <= '0'
732:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' |==> false
733:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] > '9' |==> chars[i] != '9'
734:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] > '9' |==> chars[i] >= '9'
735:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] > '9' |==> false
736:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' != chars[i] > '9'
737:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0'
738:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' || chars[i] > '9' |==> chars[i] > '9'
739:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:chars[i] < '0' || chars[i] > '9' |==> true
740:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' |==> chars[i] != 'a'
741:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' |==> chars[i] <= 'a'
742:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' |==> false
743:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] > 'f' |==> chars[i] != 'f'
744:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] > 'f' |==> chars[i] >= 'f'
745:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] > 'f' |==> false
746:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' != chars[i] > 'f'
747:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a'
748:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] > 'f'
749:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:chars[i] < 'a' || chars[i] > 'f' |==> true
750:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') == (chars[i] < 'a' || chars[i] > 'f')
751:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> false
752:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9')
753:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1354:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < 'a' || chars[i] > 'f')
754:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' |==> chars[i] != 'A'
755:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' |==> chars[i] <= 'A'
756:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' |==> false
757:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] > 'F' |==> chars[i] != 'F'
758:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] > 'F' |==> chars[i] >= 'F'
759:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] > 'F' |==> false
760:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' != chars[i] > 'F'
761:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A'
762:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] > 'F'
763:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:chars[i] < 'A' || chars[i] > 'F' |==> true
764:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) == (chars[i] < 'A' || chars[i] > 'F')
765:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> false
766:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1353:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')
767:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1355:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < 'A' || chars[i] > 'F')
768:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1356:false |==> true
769:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1359:true |==> false
770:STD:<DEC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1361:sz-- |==> <NO-OP>
771:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz |==> i != sz
772:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz |==> i <= sz
773:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz |==> false
774:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:1 |==> 0
775:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:1 |==> -1
776:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:sz + 1 |==> sz % 1
777:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:sz + 1 |==> sz * 1
778:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:sz + 1 |==> sz - 1
779:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:sz + 1 |==> sz / 1
780:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 |==> i != sz + 1
781:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 |==> i <= sz + 1
782:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 |==> false
783:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns |==> i < sz + 1 == allowSigns
784:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns |==> false
785:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns |==> i < sz + 1
786:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns |==> allowSigns
787:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) == !foundDigit
788:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns && !foundDigit |==> false
789:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns
790:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz + 1 && allowSigns && !foundDigit |==> !foundDigit
791:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz != (i < sz + 1 && allowSigns && !foundDigit)
792:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz
793:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> (i < sz + 1 && allowSigns && !foundDigit)
794:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1366:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> true
795:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' |==> chars[i] == '0'
796:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' |==> chars[i] > '0'
797:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' |==> true
798:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] <= '9' |==> chars[i] < '9'
799:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] <= '9' |==> chars[i] == '9'
800:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] <= '9' |==> true
801:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
802:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' && chars[i] <= '9' |==> false
803:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
804:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
805:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:true |==> false
806:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:foundDigit = true |==> <NO-OP>
807:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1369:false |==> true
808:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1369:allowSigns = false |==> <NO-OP>
809:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1371:chars[i] == '.' |==> chars[i] <= '.'
810:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1371:chars[i] == '.' |==> chars[i] >= '.'
811:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1371:chars[i] == '.' |==> false
812:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1372:hasDecPoint || hasExp |==> hasDecPoint != hasExp
813:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1372:hasDecPoint || hasExp |==> hasDecPoint
814:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1372:hasDecPoint || hasExp |==> hasExp
815:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1372:hasDecPoint || hasExp |==> true
816:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1374:false |==> true
817:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1376:true |==> false
818:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1376:hasDecPoint = true |==> <NO-OP>
819:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' |==> chars[i] <= 'e'
820:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' |==> chars[i] >= 'e'
821:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' |==> false
822:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'E' |==> chars[i] <= 'E'
823:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'E' |==> chars[i] >= 'E'
824:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'E' |==> false
825:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
826:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
827:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
828:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:chars[i] == 'e' || chars[i] == 'E' |==> true
829:COR:hasExp:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:hasExp |==> false
830:COR:hasExp:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:hasExp |==> true
831:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1381:false |==> true
832:COR:foundDigit:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1383:foundDigit |==> false
833:COR:foundDigit:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1383:foundDigit |==> true
834:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1384:false |==> true
835:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1386:true |==> false
836:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1386:hasExp = true |==> <NO-OP>
837:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1387:true |==> false
838:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1387:allowSigns = true |==> <NO-OP>
839:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' |==> chars[i] <= '+'
840:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' |==> chars[i] >= '+'
841:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' |==> false
842:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '-' |==> chars[i] <= '-'
843:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '-' |==> chars[i] >= '-'
844:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '-' |==> false
845:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' != (chars[i] == '-')
846:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+'
847:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '-'
848:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:chars[i] == '+' || chars[i] == '-' |==> true
849:COR:allowSigns:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1389:allowSigns |==> false
850:COR:allowSigns:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1389:allowSigns |==> true
851:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:false |==> true
852:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1392:false |==> true
853:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1392:allowSigns = false |==> <NO-OP>
854:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1393:false |==> true
855:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1393:foundDigit = false |==> <NO-OP>
856:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:false |==> true
857:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1397:i++ |==> <NO-OP>
858:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:i < chars.length |==> i != chars.length
859:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:i < chars.length |==> i <= chars.length
860:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:i < chars.length |==> false
861:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' |==> chars[i] == '0'
862:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' |==> chars[i] > '0'
863:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' |==> true
864:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] <= '9' |==> chars[i] < '9'
865:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] <= '9' |==> chars[i] == '9'
866:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] <= '9' |==> true
867:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
868:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' && chars[i] <= '9' |==> false
869:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
870:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
871:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1402:true |==> false
872:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' |==> chars[i] <= 'e'
873:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' |==> chars[i] >= 'e'
874:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' |==> false
875:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'E' |==> chars[i] <= 'E'
876:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'E' |==> chars[i] >= 'E'
877:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'E' |==> false
878:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
879:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
880:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
881:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1404:chars[i] == 'e' || chars[i] == 'E' |==> true
882:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1406:false |==> true
883:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == '.' |==> chars[i] <= '.'
884:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == '.' |==> chars[i] >= '.'
885:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == '.' |==> false
886:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:hasDecPoint || hasExp |==> hasDecPoint != hasExp
887:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:hasDecPoint || hasExp |==> hasDecPoint
888:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:hasDecPoint || hasExp |==> hasExp
889:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:hasDecPoint || hasExp |==> true
890:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:false |==> true
891:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' |==> chars[i] <= 'd'
892:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' |==> chars[i] >= 'd'
893:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' |==> false
894:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1418:chars[i] == 'D' |==> chars[i] <= 'D'
895:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1418:chars[i] == 'D' |==> chars[i] >= 'D'
896:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1418:chars[i] == 'D' |==> false
897:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' != (chars[i] == 'D')
898:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd'
899:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1418:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'D'
900:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1418:chars[i] == 'd' || chars[i] == 'D' |==> true
901:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1419:chars[i] == 'f' |==> chars[i] <= 'f'
902:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1419:chars[i] == 'f' |==> chars[i] >= 'f'
903:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1419:chars[i] == 'f' |==> false
904:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') != (chars[i] == 'f')
905:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'd' || chars[i] == 'D'
906:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1419:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'f'
907:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1419:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> true
908:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1420:chars[i] == 'F' |==> chars[i] <= 'F'
909:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1420:chars[i] == 'F' |==> chars[i] >= 'F'
910:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1420:chars[i] == 'F' |==> false
911:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') != (chars[i] == 'F')
912:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'
913:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1420:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'F'
914:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1420:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> true
915:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1416:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns == (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
916:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> false
917:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1416:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns
918:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
919:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1423:chars[i] == 'l' |==> chars[i] <= 'l'
920:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1423:chars[i] == 'l' |==> chars[i] >= 'l'
921:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1423:chars[i] == 'l' |==> false
922:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:chars[i] == 'L' |==> chars[i] <= 'L'
923:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:chars[i] == 'L' |==> chars[i] >= 'L'
924:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:chars[i] == 'L' |==> false
925:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1423:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' != (chars[i] == 'L')
926:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1423:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l'
927:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'L'
928:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:chars[i] == 'l' || chars[i] == 'L' |==> true
929:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp |==> foundDigit == !hasExp
930:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp |==> false
931:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp |==> foundDigit
932:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp |==> !hasExp
933:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp && !hasDecPoint |==> (foundDigit && !hasExp) == !hasDecPoint
934:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp && !hasDecPoint |==> false
935:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp && !hasDecPoint |==> foundDigit && !hasExp
936:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1426:foundDigit && !hasExp && !hasDecPoint |==> !hasDecPoint
937:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1429:false |==> true
938:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1433:!allowSigns && foundDigit |==> !allowSigns == foundDigit
939:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1433:!allowSigns && foundDigit |==> false
940:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1433:!allowSigns && foundDigit |==> !allowSigns
941:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1433:!allowSigns && foundDigit |==> foundDigit
