1:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator@getCost(com.google.javascript.rhino.Node,int):47:estimator.add(root) |==> <NO-OP>
2:LVR:0:POS:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator:57:0 |==> 1
3:LVR:0:NEG:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator:57:0 |==> -1
4:LVR:TRUE:FALSE:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator:59:true |==> false
5:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@<init>(int):62:this.maxCost = costThreshhold |==> <NO-OP>
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@add(com.google.javascript.rhino.Node):67:cg.add(root) |==> <NO-OP>
7:LVR:POS:0:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:1 |==> 0
8:LVR:POS:NEG:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:1 |==> -1
9:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:str.length() - 1 |==> str.length() % 1
10:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:str.length() - 1 |==> str.length() * 1
11:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:str.length() - 1 |==> str.length() + 1
12:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:str.length() - 1 |==> str.length() / 1
13:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):86:last = str.charAt(str.length() - 1) |==> <NO-OP>
14:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):87:cost += str.length() |==> <NO-OP>
15:ROR:<=(int,int):<(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):88:maxCost <= cost |==> maxCost < cost
16:ROR:<=(int,int):==(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):88:maxCost <= cost |==> maxCost == cost
17:ROR:<=(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):88:maxCost <= cost |==> true
18:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):89:false |==> true
19:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@append(java.lang.String):89:continueProcessing = false |==> <NO-OP>
20:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@addIdentifier(java.lang.String):95:add(ESTIMATED_IDENTIFIER) |==> <NO-OP>
21:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineCostEstimator$CompiledSizeEstimator@addConstant(java.lang.String):104:add("0") |==> <NO-OP>
