1:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.Chronology):125:0 |==> 1
2:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.Chronology):125:0 |==> -1
3:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.Chronology):126:0 |==> 1
4:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.Chronology):126:0 |==> -1
5:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):154:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
6:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):156:type == null |==> false
7:STD:<CALL>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):161:chronology.validate(this, iValues) |==> <NO-OP>
8:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):191:chronology = DateTimeUtils.getChronology(chronology).withUTC() |==> <NO-OP>
9:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):193:types == null |==> false
10:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):196:values == null |==> false
11:ROR:!=(int,int):<(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> values.length < types.length
12:ROR:!=(int,int):>(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> values.length > types.length
13:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> true
14:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:0 |==> 1
15:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:0 |==> -1
16:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> types.length <= 0
17:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> types.length >= 0
18:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> false
19:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:0 |==> 1
20:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:0 |==> -1
21:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> i != types.length
22:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> i <= types.length
23:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> false
24:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):208:types[i] == null |==> false
25:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:0 |==> 1
26:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:0 |==> -1
27:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> i != types.length
28:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> i <= types.length
29:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> false
30:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:0 |==> 1
31:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:0 |==> -1
32:ROR:>(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> i != 0
33:ROR:>(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> i >= 0
34:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> false
35:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:0 |==> 1
36:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:0 |==> -1
37:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 |==> compare != 0
38:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 |==> compare <= 0
39:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 |==> false
40:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:0 |==> 1
41:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:0 |==> -1
42:ROR:!=(int,int):<(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 |==> compare < 0
43:ROR:!=(int,int):>(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 |==> compare > 0
44:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 |==> true
45:LVR:FALSE:TRUE:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:false |==> true
46:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:loopUnitField.isSupported() == false |==> false
47:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:loopUnitField.isSupported() == false |==> loopUnitField.isSupported()
48:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:loopUnitField.isSupported() == false |==> false
49:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> compare != 0 == (loopUnitField.isSupported() == false)
50:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> false
51:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> compare != 0
52:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> loopUnitField.isSupported() == false
53:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> compare < 0 != (compare != 0 && loopUnitField.isSupported() == false)
54:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> compare < 0
55:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> (compare != 0 && loopUnitField.isSupported() == false)
56:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> true
57:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:1 |==> 0
58:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:1 |==> -1
59:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i % 1
60:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i * 1
61:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i + 1
62:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i / 1
63:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:0 |==> 1
64:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:0 |==> -1
65:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:compare == 0 |==> compare <= 0
66:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:compare == 0 |==> compare >= 0
67:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:compare == 0 |==> false
68:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:1 |==> 0
69:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:1 |==> -1
70:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i % 1
71:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i * 1
72:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i + 1
73:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i / 1
74:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:types[i - 1].getRangeDurationType() == null |==> false
75:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:loopType.getRangeDurationType() == null |==> false
76:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):227:loopType.getRangeDurationType() == null |==> false
77:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:1 |==> 0
78:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:1 |==> -1
79:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i % 1
80:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i * 1
81:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i + 1
82:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):229:i - 1 |==> i / 1
83:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:1 |==> 0
84:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:1 |==> -1
85:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i % 1
86:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i * 1
87:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i + 1
88:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):231:i - 1 |==> i / 1
89:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):233:0 |==> 1
90:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):233:0 |==> -1
91:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):233:lastRangeField.compareTo(loopRangeField) < 0 |==> lastRangeField.compareTo(loopRangeField) != 0
92:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):233:lastRangeField.compareTo(loopRangeField) < 0 |==> lastRangeField.compareTo(loopRangeField) <= 0
93:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):233:lastRangeField.compareTo(loopRangeField) < 0 |==> false
94:LVR:POS:0:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):235:1 |==> 0
95:LVR:POS:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):235:1 |==> -1
96:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):235:i - 1 |==> i % 1
97:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):235:i - 1 |==> i * 1
98:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):235:i - 1 |==> i + 1
99:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):235:i - 1 |==> i / 1
100:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):237:0 |==> 1
101:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):237:0 |==> -1
102:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):237:lastRangeField.compareTo(loopRangeField) == 0 |==> lastRangeField.compareTo(loopRangeField) <= 0
103:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):237:lastRangeField.compareTo(loopRangeField) == 0 |==> lastRangeField.compareTo(loopRangeField) >= 0
104:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):237:lastRangeField.compareTo(loopRangeField) == 0 |==> false
105:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):243:lastUnitField = loopUnitField |==> <NO-OP>
106:STD:<CALL>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):247:chronology.validate(this, values) |==> <NO-OP>
107:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):259:partial == null |==> false
108:LVR:0:POS:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):265:0 |==> 1
109:LVR:0:NEG:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):265:0 |==> -1
110:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):265:i < partial.size() |==> i != partial.size()
111:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):265:i < partial.size() |==> i <= partial.size()
112:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):265:i < partial.size() |==> false
113:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):266:iTypes[i] = partial.getFieldType(i) |==> <NO-OP>
114:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):267:iValues[i] = partial.getValue(i) |==> <NO-OP>
115:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):400:newChronology = DateTimeUtils.getChronology(newChronology) |==> <NO-OP>
116:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):401:newChronology = newChronology.withUTC() |==> <NO-OP>
117:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):402:newChronology == getChronology() |==> false
118:STD:<CALL>:<NO-OP>:org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):406:newChronology.validate(newPartial, iValues) |==> <NO-OP>
119:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):427:fieldType == null |==> false
120:LVR:NEG:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):431:-1 |==> 0
121:LVR:NEG:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):431:-1 |==> 1
122:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):431:index == -1 |==> index <= -1
123:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):431:index == -1 |==> index >= -1
124:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):431:index == -1 |==> false
125:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):432:1 |==> 0
126:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):432:1 |==> -1
127:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):432:iTypes.length + 1 |==> iTypes.length % 1
128:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):432:iTypes.length + 1 |==> iTypes.length * 1
129:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):432:iTypes.length + 1 |==> iTypes.length - 1
130:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):432:iTypes.length + 1 |==> iTypes.length / 1
131:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):436:0 |==> 1
132:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):436:0 |==> -1
133:COR:unitField.isSupported():TRUE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):438:unitField.isSupported() |==> false
134:COR:unitField.isSupported():FALSE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):438:unitField.isSupported() |==> true
135:ROR:<(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):439:i < iTypes.length |==> i != iTypes.length
136:ROR:<(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):439:i < iTypes.length |==> i <= iTypes.length
137:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):439:i < iTypes.length |==> false
138:COR:loopUnitField.isSupported():TRUE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:loopUnitField.isSupported() |==> false
139:COR:loopUnitField.isSupported():FALSE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):442:loopUnitField.isSupported() |==> true
140:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:0 |==> 1
141:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:0 |==> -1
142:ROR:>(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:compare > 0 |==> compare != 0
143:ROR:>(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:compare > 0 |==> compare >= 0
144:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:compare > 0 |==> false
145:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:0 |==> 1
146:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:0 |==> -1
147:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:compare == 0 |==> compare <= 0
148:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:compare == 0 |==> compare >= 0
149:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:compare == 0 |==> false
150:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:0 |==> 1
151:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:0 |==> -1
152:ROR:>(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:rangeField.compareTo(loopRangeField) > 0 |==> rangeField.compareTo(loopRangeField) != 0
153:ROR:>(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:rangeField.compareTo(loopRangeField) > 0 |==> rangeField.compareTo(loopRangeField) >= 0
154:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):449:rangeField.compareTo(loopRangeField) > 0 |==> false
155:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):456:0 |==> 1
156:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):456:0 |==> -1
157:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):456:0 |==> 1
158:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):456:0 |==> -1
159:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):456:System.arraycopy(iTypes, 0, newTypes, 0, i) |==> <NO-OP>
160:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:0 |==> 1
161:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:0 |==> -1
162:LVR:0:POS:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:0 |==> 1
163:LVR:0:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:0 |==> -1
164:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):457:System.arraycopy(iValues, 0, newValues, 0, i) |==> <NO-OP>
165:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):458:newTypes[i] = fieldType |==> <NO-OP>
166:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):459:newValues[i] = value |==> <NO-OP>
167:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:1 |==> 0
168:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:1 |==> -1
169:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:i + 1 |==> i % 1
170:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:i + 1 |==> i * 1
171:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:i + 1 |==> i - 1
172:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:i + 1 |==> i / 1
173:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i |==> newTypes.length % i
174:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i |==> newTypes.length * i
175:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i |==> newTypes.length + i
176:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i |==> newTypes.length / i
177:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:1 |==> 0
178:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:1 |==> -1
179:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i - 1 |==> (newTypes.length - i) % 1
180:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i - 1 |==> (newTypes.length - i) * 1
181:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i - 1 |==> newTypes.length - i + 1
182:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:newTypes.length - i - 1 |==> (newTypes.length - i) / 1
183:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):460:System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1) |==> <NO-OP>
184:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:1 |==> 0
185:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:1 |==> -1
186:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:i + 1 |==> i % 1
187:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:i + 1 |==> i * 1
188:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:i + 1 |==> i - 1
189:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:i + 1 |==> i / 1
190:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i |==> newValues.length % i
191:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i |==> newValues.length * i
192:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i |==> newValues.length + i
193:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i |==> newValues.length / i
194:LVR:POS:0:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:1 |==> 0
195:LVR:POS:NEG:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:1 |==> -1
196:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i - 1 |==> (newValues.length - i) % 1
197:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i - 1 |==> (newValues.length - i) * 1
198:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i - 1 |==> newValues.length - i + 1
199:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:newValues.length - i - 1 |==> (newValues.length - i) / 1
200:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):461:System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1) |==> <NO-OP>
201:STD:<CALL>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):465:iChronology.validate(newPartial, newValues) |==> <NO-OP>
202:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):468:value == getValue(index) |==> value <= getValue(index)
203:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):468:value == getValue(index) |==> value >= getValue(index)
204:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):468:value == getValue(index) |==> false
205:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):472:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
206:LVR:NEG:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):486:-1 |==> 0
207:LVR:NEG:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):486:-1 |==> 1
208:ROR:!=(int,int):<(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):486:index != -1 |==> index < -1
209:ROR:!=(int,int):>(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):486:index != -1 |==> index > -1
210:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):486:index != -1 |==> true
211:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):487:1 |==> 0
212:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):487:1 |==> -1
213:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):487:size() - 1 |==> size() % 1
214:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):487:size() - 1 |==> size() * 1
215:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):487:size() - 1 |==> size() + 1
216:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):487:size() - 1 |==> size() / 1
217:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:1 |==> 0
218:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:1 |==> -1
219:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:size() - 1 |==> size() % 1
220:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:size() - 1 |==> size() * 1
221:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:size() - 1 |==> size() + 1
222:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:size() - 1 |==> size() / 1
223:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:0 |==> 1
224:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:0 |==> -1
225:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:0 |==> 1
226:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:0 |==> -1
227:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:System.arraycopy(iTypes, 0, newTypes, 0, index) |==> <NO-OP>
228:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:1 |==> 0
229:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:1 |==> -1
230:AOR:+(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:index + 1 |==> index % 1
231:AOR:+(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:index + 1 |==> index * 1
232:AOR:+(int,int):-(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:index + 1 |==> index - 1
233:AOR:+(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:index + 1 |==> index / 1
234:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:newTypes.length - index |==> newTypes.length % index
235:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:newTypes.length - index |==> newTypes.length * index
236:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:newTypes.length - index |==> newTypes.length + index
237:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:newTypes.length - index |==> newTypes.length / index
238:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index) |==> <NO-OP>
239:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):491:0 |==> 1
240:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):491:0 |==> -1
241:LVR:0:POS:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):491:0 |==> 1
242:LVR:0:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):491:0 |==> -1
243:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):491:System.arraycopy(iValues, 0, newValues, 0, index) |==> <NO-OP>
244:LVR:POS:0:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:1 |==> 0
245:LVR:POS:NEG:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:1 |==> -1
246:AOR:+(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index % 1
247:AOR:+(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index * 1
248:AOR:+(int,int):-(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index - 1
249:AOR:+(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index / 1
250:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newValues.length - index |==> newValues.length % index
251:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newValues.length - index |==> newValues.length * index
252:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newValues.length - index |==> newValues.length + index
253:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newValues.length - index |==> newValues.length / index
254:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index) |==> <NO-OP>
255:STD:<CALL>:<NO-OP>:org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:iChronology.validate(newPartial, newValues) |==> <NO-OP>
256:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):517:value == getValue(index) |==> value <= getValue(index)
257:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):517:value == getValue(index) |==> value >= getValue(index)
258:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):517:value == getValue(index) |==> false
259:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):521:newValues = getField(index).set(this, index, newValues, value) |==> <NO-OP>
260:LVR:0:POS:org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):541:0 |==> 1
261:LVR:0:NEG:org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):541:0 |==> -1
262:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):541:amount == 0 |==> amount <= 0
263:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):541:amount == 0 |==> amount >= 0
264:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):541:amount == 0 |==> false
265:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):545:newValues = getField(index).add(this, index, newValues, amount) |==> <NO-OP>
266:LVR:0:POS:org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):565:0 |==> 1
267:LVR:0:NEG:org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):565:0 |==> -1
268:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):565:amount == 0 |==> amount <= 0
269:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):565:amount == 0 |==> amount >= 0
270:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):565:amount == 0 |==> false
271:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):569:newValues = getField(index).addWrapPartial(this, index, newValues, amount) |==> <NO-OP>
272:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:period == null |==> false
273:LVR:0:POS:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:0 |==> 1
274:LVR:0:NEG:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:0 |==> -1
275:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:scalar == 0 |==> scalar <= 0
276:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:scalar == 0 |==> scalar >= 0
277:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:scalar == 0 |==> false
278:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:period == null || scalar == 0 |==> period == null != (scalar == 0)
279:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:period == null || scalar == 0 |==> period == null
280:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:period == null || scalar == 0 |==> scalar == 0
281:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):589:period == null || scalar == 0 |==> true
282:LVR:0:POS:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):593:0 |==> 1
283:LVR:0:NEG:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):593:0 |==> -1
284:ROR:<(int,int):!=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):593:i < period.size() |==> i != period.size()
285:ROR:<(int,int):<=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):593:i < period.size() |==> i <= period.size()
286:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):593:i < period.size() |==> false
287:LVR:0:POS:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):596:0 |==> 1
288:LVR:0:NEG:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):596:0 |==> -1
289:ROR:>=(int,int):==(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):596:index >= 0 |==> index == 0
290:ROR:>=(int,int):>(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):596:index >= 0 |==> index > 0
291:ROR:>=(int,int):TRUE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):596:index >= 0 |==> true
292:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):597:newValues = getField(index).add(this, index, newValues, FieldUtils.safeMultiply(period.getValue(i), scalar)) |==> <NO-OP>
293:LVR:POS:0:org.joda.time.Partial@plus(org.joda.time.ReadablePeriod):614:1 |==> 0
294:LVR:POS:NEG:org.joda.time.Partial@plus(org.joda.time.ReadablePeriod):614:1 |==> -1
295:LVR:NEG:0:org.joda.time.Partial@minus(org.joda.time.ReadablePeriod):627:-1 |==> 0
296:LVR:NEG:POS:org.joda.time.Partial@minus(org.joda.time.ReadablePeriod):627:-1 |==> 1
297:LVR:0:POS:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):658:0 |==> 1
298:LVR:0:NEG:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):658:0 |==> -1
299:ROR:<(int,int):!=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):658:i < iTypes.length |==> i != iTypes.length
300:ROR:<(int,int):<=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):658:i < iTypes.length |==> i <= iTypes.length
301:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):658:i < iTypes.length |==> false
302:ROR:!=(int,int):<(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):660:value != iValues[i] |==> value < iValues[i]
303:ROR:!=(int,int):>(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):660:value != iValues[i] |==> value > iValues[i]
304:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):660:value != iValues[i] |==> true
305:LVR:FALSE:TRUE:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):661:false |==> true
306:LVR:TRUE:FALSE:org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):664:true |==> false
307:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):680:partial == null |==> false
308:LVR:0:POS:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):683:0 |==> 1
309:LVR:0:NEG:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):683:0 |==> -1
310:ROR:<(int,int):!=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):683:i < iTypes.length |==> i != iTypes.length
311:ROR:<(int,int):<=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):683:i < iTypes.length |==> i <= iTypes.length
312:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):683:i < iTypes.length |==> false
313:ROR:!=(int,int):<(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):685:value != iValues[i] |==> value < iValues[i]
314:ROR:!=(int,int):>(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):685:value != iValues[i] |==> value > iValues[i]
315:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):685:value != iValues[i] |==> true
316:LVR:FALSE:TRUE:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):686:false |==> true
317:LVR:TRUE:FALSE:org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):689:true |==> false
318:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@getFormatter():706:f == null |==> false
319:LVR:0:POS:org.joda.time.Partial@getFormatter():707:0 |==> 1
320:LVR:0:NEG:org.joda.time.Partial@getFormatter():707:0 |==> -1
321:ROR:==(int,int):<=(int,int):org.joda.time.Partial@getFormatter():707:size() == 0 |==> size() <= 0
322:ROR:==(int,int):>=(int,int):org.joda.time.Partial@getFormatter():707:size() == 0 |==> size() >= 0
323:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@getFormatter():707:size() == 0 |==> false
324:LVR:POS:0:org.joda.time.Partial@getFormatter():710:2 |==> 0
325:LVR:POS:NEG:org.joda.time.Partial@getFormatter():710:2 |==> -2
326:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():710:f = new DateTimeFormatter[2] |==> <NO-OP>
327:LVR:0:POS:org.joda.time.Partial@getFormatter():713:0 |==> 1
328:LVR:0:NEG:org.joda.time.Partial@getFormatter():713:0 |==> -1
329:LVR:TRUE:FALSE:org.joda.time.Partial@getFormatter():713:true |==> false
330:LVR:FALSE:TRUE:org.joda.time.Partial@getFormatter():713:false |==> true
331:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():713:f[0] = ISODateTimeFormat.forFields(list, true, false) |==> <NO-OP>
332:LVR:0:POS:org.joda.time.Partial@getFormatter():714:0 |==> 1
333:LVR:0:NEG:org.joda.time.Partial@getFormatter():714:0 |==> -1
334:ROR:==(int,int):<=(int,int):org.joda.time.Partial@getFormatter():714:list.size() == 0 |==> list.size() <= 0
335:ROR:==(int,int):>=(int,int):org.joda.time.Partial@getFormatter():714:list.size() == 0 |==> list.size() >= 0
336:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@getFormatter():714:list.size() == 0 |==> false
337:LVR:POS:0:org.joda.time.Partial@getFormatter():715:1 |==> 0
338:LVR:POS:NEG:org.joda.time.Partial@getFormatter():715:1 |==> -1
339:LVR:0:POS:org.joda.time.Partial@getFormatter():715:0 |==> 1
340:LVR:0:NEG:org.joda.time.Partial@getFormatter():715:0 |==> -1
341:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():715:f[1] = f[0] |==> <NO-OP>
342:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@getFormatter():720:iFormatter = f |==> <NO-OP>
343:LVR:0:POS:org.joda.time.Partial@getFormatter():722:0 |==> 1
344:LVR:0:NEG:org.joda.time.Partial@getFormatter():722:0 |==> -1
345:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():739:f == null |==> false
346:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toString():740:getFormatter() |==> <NO-OP>
347:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial@toString():741:f = iFormatter |==> <NO-OP>
348:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():742:f == null |==> false
349:LVR:POS:0:org.joda.time.Partial@toString():746:1 |==> 0
350:LVR:POS:NEG:org.joda.time.Partial@toString():746:1 |==> -1
351:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():747:f1 == null |==> false
352:LVR:POS:0:org.joda.time.Partial@toStringList():764:20 |==> 0
353:LVR:POS:NEG:org.joda.time.Partial@toStringList():764:20 |==> -20
354:AOR:*(int,int):%(int,int):org.joda.time.Partial@toStringList():764:20 * size |==> 20 % size
355:AOR:*(int,int):+(int,int):org.joda.time.Partial@toStringList():764:20 * size |==> 20 + size
356:AOR:*(int,int):-(int,int):org.joda.time.Partial@toStringList():764:20 * size |==> 20 - size
357:AOR:*(int,int):/(int,int):org.joda.time.Partial@toStringList():764:20 * size |==> 20 / size
358:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():765:buf.append('[') |==> <NO-OP>
359:LVR:0:POS:org.joda.time.Partial@toStringList():766:0 |==> 1
360:LVR:0:NEG:org.joda.time.Partial@toStringList():766:0 |==> -1
361:ROR:<(int,int):!=(int,int):org.joda.time.Partial@toStringList():766:i < size |==> i != size
362:ROR:<(int,int):<=(int,int):org.joda.time.Partial@toStringList():766:i < size |==> i <= size
363:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@toStringList():766:i < size |==> false
364:LVR:0:POS:org.joda.time.Partial@toStringList():767:0 |==> 1
365:LVR:0:NEG:org.joda.time.Partial@toStringList():767:0 |==> -1
366:ROR:>(int,int):!=(int,int):org.joda.time.Partial@toStringList():767:i > 0 |==> i != 0
367:ROR:>(int,int):>=(int,int):org.joda.time.Partial@toStringList():767:i > 0 |==> i >= 0
368:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@toStringList():767:i > 0 |==> false
369:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():768:buf.append(',').append(' ') |==> <NO-OP>
370:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():770:buf.append(iTypes[i].getName()) |==> <NO-OP>
371:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():771:buf.append('=') |==> <NO-OP>
372:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():772:buf.append(iValues[i]) |==> <NO-OP>
373:STD:<CALL>:<NO-OP>:org.joda.time.Partial@toStringList():774:buf.append(']') |==> <NO-OP>
374:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString(java.lang.String):786:pattern == null |==> false
375:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString(java.lang.String,java.util.Locale):801:pattern == null |==> false
376:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@addToCopy(int):894:newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
377:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@addWrapFieldToCopy(int):918:newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd) |==> <NO-OP>
378:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@setCopy(int):935:newValues = getField().set(iPartial, iFieldIndex, newValues, value) |==> <NO-OP>
379:STD:<ASSIGN>:<NO-OP>:org.joda.time.Partial$Property@setCopy(java.lang.String,java.util.Locale):952:newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale) |==> <NO-OP>
