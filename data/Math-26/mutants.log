1:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:42:2 |==> 0
2:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:42:2 |==> -2
3:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:42:1 |==> 0
4:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:42:1 |==> -1
5:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:45:1 |==> 0
6:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:45:1 |==> -1
7:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:45:1 |==> 0
8:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:45:1 |==> -1
9:LVR:0:POS:org.apache.commons.math3.fraction.Fraction:48:0 |==> 1
10:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction:48:0 |==> -1
11:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:48:1 |==> 0
12:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:48:1 |==> -1
13:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:51:4 |==> 0
14:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:51:4 |==> -4
15:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:51:5 |==> 0
16:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:51:5 |==> -5
17:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:54:1 |==> 0
18:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:54:1 |==> -1
19:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:54:5 |==> 0
20:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:54:5 |==> -5
21:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:57:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:57:1 |==> -1
23:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:57:2 |==> 0
24:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:57:2 |==> -2
25:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:60:1 |==> 0
26:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:60:1 |==> -1
27:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:60:4 |==> 0
28:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:60:4 |==> -4
29:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:63:1 |==> 0
30:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:63:1 |==> -1
31:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:63:3 |==> 0
32:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:63:3 |==> -3
33:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:66:3 |==> 0
34:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:66:3 |==> -3
35:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:66:5 |==> 0
36:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:66:5 |==> -5
37:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:69:3 |==> 0
38:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:69:3 |==> -3
39:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:69:4 |==> 0
40:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:69:4 |==> -4
41:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:72:2 |==> 0
42:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:72:2 |==> -2
43:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:72:5 |==> 0
44:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:72:5 |==> -5
45:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:75:2 |==> 0
46:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:75:2 |==> -2
47:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:75:4 |==> 0
48:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:75:4 |==> -4
49:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:78:2 |==> 0
50:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:78:2 |==> -2
51:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:78:3 |==> 0
52:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:78:3 |==> -3
53:LVR:NEG:0:org.apache.commons.math3.fraction.Fraction:81:-1 |==> 0
54:LVR:NEG:POS:org.apache.commons.math3.fraction.Fraction:81:-1 |==> 1
55:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:81:1 |==> 0
56:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:81:1 |==> -1
57:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double):99:1.0E-5 |==> 0.0
58:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double):99:1.0E-5 |==> -1.0E-5
59:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double):99:100 |==> 0
60:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double):99:100 |==> -100
61:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:0 |==> 1
62:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:0 |==> -1
63:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:100 |==> 0
64:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:100 |==> -100
65:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) != overflow
66:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) >= overflow
67:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> false
68:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):182:1L |==> 0L
69:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):182:1L |==> -1L
70:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 % value
71:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 * value
72:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 + value
73:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 / value
74:ROR:<(double,double):!=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) != epsilon
75:ROR:<(double,double):<=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) <= epsilon
76:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> false
77:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:1 |==> 0
78:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:1 |==> -1
79:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):193:1 |==> 0
80:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):193:1 |==> -1
81:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):194:0 |==> 1
82:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):194:0 |==> -1
83:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):196:1 |==> 0
84:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):196:1 |==> -1
85:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):198:0 |==> 1
86:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):198:0 |==> -1
87:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):199:1 |==> 0
88:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):199:1 |==> -1
89:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):201:0 |==> 1
90:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):201:0 |==> -1
91:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):202:false |==> true
92:STD:<INC>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):204:++n |==> <NO-OP>
93:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 |==> 0.0
94:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 |==> -1.0
95:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 % a0
96:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 * a0
97:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 + a0
98:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 / a0
99:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 % (r0 - a0)
100:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 * (r0 - a0)
101:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 + (r0 - a0)
102:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 - (r0 - a0)
103:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 % p1
104:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 + p1
105:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 - p1
106:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 / p1
107:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) % p0
108:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) * p0
109:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) - p0
110:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) / p0
111:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:p2 = (a1 * p1) + p0 |==> <NO-OP>
112:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 % q1
113:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 + q1
114:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 - q1
115:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 / q1
116:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) % q0
117:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) * q0
118:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) - q0
119:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) / q0
120:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:q2 = (a1 * q1) + q0 |==> <NO-OP>
121:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) != overflow
122:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) >= overflow
123:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> false
124:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) != overflow
125:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) >= overflow
126:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> false
127:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow) != (FastMath.abs(q2) > overflow)
128:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow)
129:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(q2) > overflow)
130:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> true
131:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 % (double)q2
132:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 * (double)q2
133:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 + (double)q2
134:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 - (double)q2
135:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n != maxIterations
136:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n <= maxIterations
137:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> false
138:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent % value
139:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent * value
140:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent + value
141:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent / value
142:ROR:>(double,double):!=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) != epsilon
143:ROR:>(double,double):>=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) >= epsilon
144:ROR:>(double,double):FALSE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> false
145:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations == FastMath.abs(convergent - value) > epsilon
146:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> false
147:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations
148:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) > epsilon
149:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 != maxDenominator
150:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 <= maxDenominator
151:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> false
152:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> (n < maxIterations && FastMath.abs(convergent - value) > epsilon) == q2 < maxDenominator
153:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> false
154:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> n < maxIterations && FastMath.abs(convergent - value) > epsilon
155:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> q2 < maxDenominator
156:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):215:p0 = p1 |==> <NO-OP>
157:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):216:p1 = p2 |==> <NO-OP>
158:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):217:q0 = q1 |==> <NO-OP>
159:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):218:q1 = q2 |==> <NO-OP>
160:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:a0 = a1 |==> <NO-OP>
161:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):220:r0 = r1 |==> <NO-OP>
162:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):222:true |==> false
163:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):222:stop = true |==> <NO-OP>
164:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n == maxIterations
165:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n > maxIterations
166:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> true
167:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 != maxDenominator
168:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 <= maxDenominator
169:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> false
170:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(int):246:1 |==> 0
171:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int):246:1 |==> -1
172:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:0 |==> 1
173:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:0 |==> -1
174:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den <= 0
175:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den >= 0
176:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> false
177:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:0 |==> 1
178:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:0 |==> -1
179:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den != 0
180:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den <= 0
181:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> false
182:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num <= Integer.MIN_VALUE
183:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num >= Integer.MIN_VALUE
184:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> false
185:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den <= Integer.MIN_VALUE
186:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den >= Integer.MIN_VALUE
187:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> false
188:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE != (den == Integer.MIN_VALUE)
189:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE
190:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> den == Integer.MIN_VALUE
191:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> true
192:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:-num |==> +num
193:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:-num |==> ~num
194:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:num = -num |==> <NO-OP>
195:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:-den |==> +den
196:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:-den |==> ~den
197:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:den = -den |==> <NO-OP>
198:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:1 |==> 0
199:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:1 |==> -1
200:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d != 1
201:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d >= 1
202:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> false
203:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):273:num /= d |==> <NO-OP>
204:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):274:den /= d |==> <NO-OP>
205:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:0 |==> 1
206:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:0 |==> -1
207:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den != 0
208:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den <= 0
209:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> false
210:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:-num |==> +num
211:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:-num |==> ~num
212:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:num = -num |==> <NO-OP>
213:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):280:-den |==> +den
214:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):280:-den |==> ~den
215:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):280:den = -den |==> <NO-OP>
216:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@abs():292:0 |==> 1
217:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@abs():292:0 |==> -1
218:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator == 0
219:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator > 0
220:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> true
221:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) % object.denominator
222:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) + object.denominator
223:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) - object.denominator
224:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) / object.denominator
225:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) % object.numerator
226:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) + object.numerator
227:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) - object.numerator
228:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) / object.numerator
229:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd != dOn
230:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd <= dOn
231:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> false
232:LVR:NEG:0:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:-1 |==> 0
233:LVR:NEG:POS:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:-1 |==> 1
234:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd != dOn
235:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd >= dOn
236:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> false
237:ORU:+(int):-(int):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:+1 |==> -1
238:ORU:+(int):~(int):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:+1 |==> ~1
239:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:1 |==> 0
240:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:1 |==> -1
241:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:0 |==> 1
242:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:0 |==> -1
243:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator % (double)denominator
244:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator * (double)denominator
245:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator + (double)denominator
246:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator - (double)denominator
247:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):333:this == other |==> false
248:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):334:true |==> false
249:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator <= rhs.numerator
250:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator >= rhs.numerator
251:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> false
252:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator <= rhs.denominator
253:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator >= rhs.denominator
254:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> false
255:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator) == (denominator == rhs.denominator)
256:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> false
257:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator)
258:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (denominator == rhs.denominator)
259:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):343:false |==> true
260:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> 0
261:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> -37
262:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> 0
263:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> -37
264:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():378:17 |==> 0
265:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():378:17 |==> -17
266:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 % 17
267:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 + 17
268:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 - 17
269:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 / 17
270:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 % numerator
271:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 * numerator
272:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 - numerator
273:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 / numerator
274:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 % (37 * 17 + numerator)
275:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 + (37 * 17 + numerator)
276:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 - (37 * 17 + numerator)
277:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 / (37 * 17 + numerator)
278:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) % denominator
279:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) * denominator
280:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) - denominator
281:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) / denominator
282:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator <= Integer.MIN_VALUE
283:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator >= Integer.MIN_VALUE
284:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> false
285:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@negate():409:-numerator |==> +numerator
286:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@negate():409:-numerator |==> ~numerator
287:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@add(org.apache.commons.math3.fraction.Fraction):431:true |==> false
288:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i % denominator
289:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i + denominator
290:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i - denominator
291:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i / denominator
292:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator % (i * denominator)
293:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator * (i * denominator)
294:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator - i * denominator
295:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator / (i * denominator)
296:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@subtract(org.apache.commons.math3.fraction.Fraction):454:false |==> true
297:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i % denominator
298:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i + denominator
299:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i - denominator
300:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i / denominator
301:AOR:-(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator % (i * denominator)
302:AOR:-(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator * (i * denominator)
303:AOR:-(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator + i * denominator
304:AOR:-(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator / (i * denominator)
305:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):477:fraction == null |==> false
306:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:0 |==> 1
307:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:0 |==> -1
308:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator <= 0
309:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator >= 0
310:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> false
311:COR:isAdd:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):482:isAdd |==> false
312:COR:isAdd:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):482:isAdd |==> true
313:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:0 |==> 1
314:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:0 |==> -1
315:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator <= 0
316:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator >= 0
317:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> false
318:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:1 |==> 0
319:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:1 |==> -1
320:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 <= 1
321:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 >= 1
322:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> false
323:COR:isAdd:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:isAdd |==> false
324:COR:isAdd:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:isAdd |==> true
325:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator % d1
326:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator * d1
327:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator + d1
328:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator - d1
329:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator % d1
330:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator * d1
331:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator + d1
332:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator - d1
333:COR:isAdd:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):506:isAdd |==> false
334:COR:isAdd:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):506:isAdd |==> true
335:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:0 |==> 1
336:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:0 |==> -1
337:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 <= 0
338:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 >= 0
339:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> false
340:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:31 |==> 0
341:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:31 |==> -31
342:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() != 31
343:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() >= 31
344:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> false
345:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator % d1
346:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator * d1
347:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator + d1
348:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator - d1
349:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator % d2
350:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator * d2
351:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator + d2
352:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator - d2
353:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):534:fraction == null |==> false
354:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> 1
355:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> -1
356:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator <= 0
357:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator >= 0
358:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> false
359:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> 1
360:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> -1
361:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator <= 0
362:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator >= 0
363:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> false
364:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> numerator == 0 != (fraction.numerator == 0)
365:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> numerator == 0
366:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> fraction.numerator == 0
367:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> true
368:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator % d1
369:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator * d1
370:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator + d1
371:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator - d1
372:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator % d2
373:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator * d2
374:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator + d2
375:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator - d2
376:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator % d2
377:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator * d2
378:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator + d2
379:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator - d2
380:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator % d1
381:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator * d1
382:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator + d1
383:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator - d1
384:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator % i
385:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator + i
386:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator - i
387:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator / i
388:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):569:fraction == null |==> false
389:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:0 |==> 1
390:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:0 |==> -1
391:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator <= 0
392:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator >= 0
393:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> false
394:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator % i
395:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator + i
396:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator - i
397:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator / i
398:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 |==> 0
399:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 |==> -100
400:AOR:*(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 % doubleValue()
401:AOR:*(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 + doubleValue()
402:AOR:*(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 - doubleValue()
403:AOR:*(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 / doubleValue()
404:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:0 |==> 1
405:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:0 |==> -1
406:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator <= 0
407:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator >= 0
408:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> false
409:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:0 |==> 1
410:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:0 |==> -1
411:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator <= 0
412:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator >= 0
413:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> false
414:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator <= Integer.MIN_VALUE
415:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator >= Integer.MIN_VALUE
416:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> false
417:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:1 |==> 0
418:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:1 |==> -1
419:LOR:&(int,int):^(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:numerator & 1 |==> numerator ^ 1
420:LOR:&(int,int):|(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:numerator & 1 |==> numerator | 1
421:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:0 |==> 1
422:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:0 |==> -1
423:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) <= 0
424:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) >= 0
425:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> false
426:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE == ((numerator & 1) == 0)
427:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> false
428:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE
429:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> (numerator & 1) == 0
430:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> 0
431:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> -2
432:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:numerator /= 2 |==> <NO-OP>
433:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> 0
434:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> -2
435:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:denominator /= 2 |==> <NO-OP>
436:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:0 |==> 1
437:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:0 |==> -1
438:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator != 0
439:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator <= 0
440:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> false
441:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator <= Integer.MIN_VALUE
442:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator >= Integer.MIN_VALUE
443:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> false
444:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator <= Integer.MIN_VALUE
445:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator >= Integer.MIN_VALUE
446:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> false
447:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE != (denominator == Integer.MIN_VALUE)
448:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE
449:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> denominator == Integer.MIN_VALUE
450:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> true
451:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:-numerator |==> +numerator
452:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:-numerator |==> ~numerator
453:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:numerator = -numerator |==> <NO-OP>
454:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:-denominator |==> +denominator
455:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:-denominator |==> ~denominator
456:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:denominator = -denominator |==> <NO-OP>
457:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):634:numerator /= gcd |==> <NO-OP>
458:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):635:denominator /= gcd |==> <NO-OP>
459:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@toString():651:1 |==> 0
460:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@toString():651:1 |==> -1
461:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator <= 1
462:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator >= 1
463:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> false
464:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():652:str = Integer.toString(numerator) |==> <NO-OP>
465:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@toString():653:0 |==> 1
466:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@toString():653:0 |==> -1
467:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator <= 0
468:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator >= 0
469:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> false
470:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():654:str = "0" |==> <NO-OP>
471:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():656:str = numerator + " / " + denominator |==> <NO-OP>
