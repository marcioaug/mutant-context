1:COR:assertOnChange:TRUE:com.google.javascript.jscomp.Normalize@reportCodeChange(java.lang.String):79:assertOnChange |==> false
2:COR:assertOnChange:FALSE:com.google.javascript.jscomp.Normalize@reportCodeChange(java.lang.String):79:assertOnChange |==> true
3:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@reportCodeChange(java.lang.String):83:compiler.reportCodeChange() |==> <NO-OP>
4:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):88:NodeTraversal.traverse(compiler, root, this) |==> <NO-OP>
5:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):89:removeDuplicateDeclarations(root) |==> <NO-OP>
6:COR:MAKE_LOCAL_NAMES_UNIQUE:TRUE:com.google.javascript.jscomp.Normalize@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):90:MAKE_LOCAL_NAMES_UNIQUE |==> false
7:COR:MAKE_LOCAL_NAMES_UNIQUE:FALSE:com.google.javascript.jscomp.Normalize@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):90:MAKE_LOCAL_NAMES_UNIQUE |==> true
8:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):93:t.traverseRoots(externs, root) |==> <NO-OP>
9:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):95:new PropogateConstantAnnotations(compiler, assertOnChange).process(externs, root) |==> <NO-OP>
10:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):101:doStatementNormalizations(t, n, parent) |==> <NO-OP>
11:LVR:TRUE:FALSE:com.google.javascript.jscomp.Normalize@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):103:true |==> false
12:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):120:new NodeTraversal(compiler, this).traverseRoots(externs, root) |==> <NO-OP>
13:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):126:n.getType() == Token.NAME |==> n.getType() <= Token.NAME
14:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):126:n.getType() == Token.NAME |==> n.getType() >= Token.NAME
15:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):126:n.getType() == Token.NAME |==> false
16:COR:n.getString().isEmpty():TRUE:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):127:n.getString().isEmpty() |==> false
17:COR:n.getString().isEmpty():FALSE:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):127:n.getString().isEmpty() |==> true
18:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):134:var != null |==> true
19:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):135:info = var.getJSDocInfo() |==> <NO-OP>
20:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:info != null |==> true
21:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:info != null && info.isConstant() |==> info != null == info.isConstant()
22:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:info != null && info.isConstant() |==> false
23:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:info != null && info.isConstant() |==> info != null
24:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:info != null && info.isConstant() |==> info.isConstant()
25:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:(info != null && info.isConstant()) && !n.getBooleanProp(Node.IS_CONSTANT_NAME) |==> (info != null && info.isConstant()) == !n.getBooleanProp(Node.IS_CONSTANT_NAME)
26:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:(info != null && info.isConstant()) && !n.getBooleanProp(Node.IS_CONSTANT_NAME) |==> false
27:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:(info != null && info.isConstant()) && !n.getBooleanProp(Node.IS_CONSTANT_NAME) |==> (info != null && info.isConstant())
28:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):139:(info != null && info.isConstant()) && !n.getBooleanProp(Node.IS_CONSTANT_NAME) |==> !n.getBooleanProp(Node.IS_CONSTANT_NAME)
29:LVR:TRUE:FALSE:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):140:true |==> false
30:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):140:n.putBooleanProp(Node.IS_CONSTANT_NAME, true) |==> <NO-OP>
31:COR:assertOnChange:TRUE:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:assertOnChange |==> false
32:COR:assertOnChange:FALSE:com.google.javascript.jscomp.Normalize$PropogateConstantAnnotations@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:assertOnChange |==> true
33:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize$VerifyConstants@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):173:externsAndJs != null |==> true
34:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):173:Preconditions.checkState(externsAndJs != null) |==> <NO-OP>
35:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):174:Preconditions.checkState(externsAndJs.hasChild(externs)) |==> <NO-OP>
36:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):176:NodeTraversal.traverseRoots(compiler, Lists.newArrayList(externs, root), this) |==> <NO-OP>
37:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):184:n.getType() == Token.NAME |==> n.getType() <= Token.NAME
38:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):184:n.getType() == Token.NAME |==> n.getType() >= Token.NAME
39:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):184:n.getType() == Token.NAME |==> false
40:COR:n.getString().isEmpty():TRUE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):186:n.getString().isEmpty() |==> false
41:COR:n.getString().isEmpty():FALSE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):186:n.getString().isEmpty() |==> true
42:COR:checkUserDeclarations:TRUE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):191:checkUserDeclarations |==> false
43:COR:checkUserDeclarations:FALSE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):191:checkUserDeclarations |==> true
44:LVR:FALSE:TRUE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):192:false |==> true
45:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):193:NodeUtil.isConstantName(n) || compiler.getCodingConvention().isConstant(n.getString()) |==> NodeUtil.isConstantName(n) != compiler.getCodingConvention().isConstant(n.getString())
46:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):193:NodeUtil.isConstantName(n) || compiler.getCodingConvention().isConstant(n.getString()) |==> NodeUtil.isConstantName(n)
47:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):194:NodeUtil.isConstantName(n) || compiler.getCodingConvention().isConstant(n.getString()) |==> compiler.getCodingConvention().isConstant(n.getString())
48:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):194:NodeUtil.isConstantName(n) || compiler.getCodingConvention().isConstant(n.getString()) |==> true
49:LVR:TRUE:FALSE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):195:true |==> false
50:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):195:expectedConst = true |==> <NO-OP>
51:LVR:FALSE:TRUE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):197:false |==> true
52:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):197:expectedConst = false |==> <NO-OP>
53:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):201:var != null |==> true
54:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):202:info = var.getJSDocInfo() |==> <NO-OP>
55:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):205:info != null |==> true
56:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):205:info != null && info.isConstant() |==> info != null == info.isConstant()
57:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):205:info != null && info.isConstant() |==> false
58:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):205:info != null && info.isConstant() |==> info != null
59:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):205:info != null && info.isConstant() |==> info.isConstant()
60:LVR:TRUE:FALSE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):206:true |==> false
61:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):206:expectedConst = true |==> <NO-OP>
62:LVR:FALSE:TRUE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):208:false |==> true
63:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):208:expectedConst = false |==> <NO-OP>
64:COR:expectedConst:TRUE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):212:expectedConst |==> false
65:COR:expectedConst:FALSE:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):212:expectedConst |==> true
66:ROR:==(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):213:expectedConst == isConst |==> false
67:ROR:==(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):213:expectedConst == isConst |==> expectedConst
68:ROR:==(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):213:expectedConst == isConst |==> isConst
69:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):213:Preconditions.checkState(expectedConst == isConst, "The name " + name + " is not annotated as constant.") |==> <NO-OP>
70:ROR:==(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:expectedConst == isConst |==> false
71:ROR:==(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:expectedConst == isConst |==> expectedConst
72:ROR:==(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:expectedConst == isConst |==> isConst
73:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:Preconditions.checkState(expectedConst == isConst, "The name " + name + " should not be annotated as constant.") |==> <NO-OP>
74:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):222:value == null |==> false
75:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):223:constantMap.put(name, isConst) |==> <NO-OP>
76:ROR:==(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):225:value.booleanValue() == isConst |==> false
77:ROR:==(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):225:value.booleanValue() == isConst |==> value.booleanValue()
78:ROR:==(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):225:value.booleanValue() == isConst |==> isConst
79:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$VerifyConstants@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):225:Preconditions.checkState(value.booleanValue() == isConst, "The name " + name + " is not consistently annotated as " + "constant.") |==> <NO-OP>
80:COR:CONVERT_WHILE_TO_FOR:TRUE:com.google.javascript.jscomp.Normalize@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):237:CONVERT_WHILE_TO_FOR |==> false
81:COR:CONVERT_WHILE_TO_FOR:FALSE:com.google.javascript.jscomp.Normalize@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):237:CONVERT_WHILE_TO_FOR |==> true
82:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):239:n.setType(Token.FOR) |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):240:n.addChildBefore(new Node(Token.EMPTY), expr) |==> <NO-OP>
84:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):241:n.addChildAfter(new Node(Token.EMPTY), expr) |==> <NO-OP>
85:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):242:reportCodeChange("WHILE node") |==> <NO-OP>
86:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):252:n.getType() == Token.LABEL |==> n.getType() <= Token.LABEL
87:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):252:n.getType() == Token.LABEL |==> n.getType() >= Token.LABEL
88:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):252:n.getType() == Token.LABEL |==> false
89:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):253:normalizeLabels(n) |==> <NO-OP>
90:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:n.getType() == Token.LABEL |==> n.getType() <= Token.LABEL
91:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:n.getType() == Token.LABEL |==> n.getType() >= Token.LABEL
92:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:n.getType() == Token.LABEL |==> false
93:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:NodeUtil.isStatementBlock(n) || n.getType() == Token.LABEL |==> NodeUtil.isStatementBlock(n) != (n.getType() == Token.LABEL)
94:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:NodeUtil.isStatementBlock(n) || n.getType() == Token.LABEL |==> NodeUtil.isStatementBlock(n)
95:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:NodeUtil.isStatementBlock(n) || n.getType() == Token.LABEL |==> n.getType() == Token.LABEL
96:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:NodeUtil.isStatementBlock(n) || n.getType() == Token.LABEL |==> true
97:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):259:extractForInitializer(n, null, null) |==> <NO-OP>
98:COR:NodeUtil.isStatementBlock(n):TRUE:com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):264:NodeUtil.isStatementBlock(n) |==> false
99:COR:NodeUtil.isStatementBlock(n):FALSE:com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):264:NodeUtil.isStatementBlock(n) |==> true
100:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):265:splitVarDeclarations(n) |==> <NO-OP>
101:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):268:n.getType() == Token.FUNCTION |==> n.getType() <= Token.FUNCTION
102:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):268:n.getType() == Token.FUNCTION |==> n.getType() >= Token.FUNCTION
103:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):268:n.getType() == Token.FUNCTION |==> false
104:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@doStatementNormalizations(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):269:moveNamedFunctions(n.getLastChild()) |==> <NO-OP>
105:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):281:n.getType() == Token.LABEL |==> n.getType() <= Token.LABEL
106:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):281:n.getType() == Token.LABEL |==> n.getType() >= Token.LABEL
107:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):281:n.getType() == Token.LABEL |==> false
108:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):281:Preconditions.checkArgument(n.getType() == Token.LABEL) |==> <NO-OP>
109:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):293:n.replaceChild(last, block) |==> <NO-OP>
110:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):294:block.addChildToFront(last) |==> <NO-OP>
111:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@normalizeLabels(com.google.javascript.rhino.Node):295:reportCodeChange("LABEL normalization") |==> <NO-OP>
112:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):314:c != null |==> true
113:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):316:before == null |==> false
114:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):317:before == null |==> false
115:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):320:extractForInitializer(c, insertBefore, insertBeforeParent) |==> <NO-OP>
116:ROR:!=(int,int):<(int,int):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):324:c.getFirstChild().getType() != Token.EMPTY |==> c.getFirstChild().getType() < Token.EMPTY
117:ROR:!=(int,int):>(int,int):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):324:c.getFirstChild().getType() != Token.EMPTY |==> c.getFirstChild().getType() > Token.EMPTY
118:ROR:!=(int,int):TRUE(int,int):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):324:c.getFirstChild().getType() != Token.EMPTY |==> true
119:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):323:!NodeUtil.isForIn(c) && c.getFirstChild().getType() != Token.EMPTY |==> !NodeUtil.isForIn(c) == (c.getFirstChild().getType() != Token.EMPTY)
120:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):324:!NodeUtil.isForIn(c) && c.getFirstChild().getType() != Token.EMPTY |==> false
121:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):323:!NodeUtil.isForIn(c) && c.getFirstChild().getType() != Token.EMPTY |==> !NodeUtil.isForIn(c)
122:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):324:!NodeUtil.isForIn(c) && c.getFirstChild().getType() != Token.EMPTY |==> c.getFirstChild().getType() != Token.EMPTY
123:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):326:c.replaceChild(init, new Node(Token.EMPTY)) |==> <NO-OP>
124:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):331:init.getType() == Token.VAR |==> init.getType() <= Token.VAR
125:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):331:init.getType() == Token.VAR |==> init.getType() >= Token.VAR
126:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):331:init.getType() == Token.VAR |==> false
127:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):337:insertBeforeParent.addChildBefore(newStatement, insertBefore) |==> <NO-OP>
128:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@extractForInitializer(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):338:reportCodeChange("FOR initializer") |==> <NO-OP>
129:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):355:c != null |==> true
130:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):357:c.getType() == Token.VAR |==> c.getType() <= Token.VAR
131:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):357:c.getType() == Token.VAR |==> c.getType() >= Token.VAR
132:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):357:c.getType() == Token.VAR |==> false
133:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):358:assertOnChange && !c.hasChildren() |==> assertOnChange == !c.hasChildren()
134:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):358:assertOnChange && !c.hasChildren() |==> false
135:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):358:assertOnChange && !c.hasChildren() |==> assertOnChange
136:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):358:assertOnChange && !c.hasChildren() |==> !c.hasChildren()
137:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):362:c.getFirstChild() != c.getLastChild() |==> true
138:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):364:c.removeChild(name) |==> <NO-OP>
139:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):366:n.addChildBefore(newVar, c) |==> <NO-OP>
140:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@splitVarDeclarations(com.google.javascript.rhino.Node):367:reportCodeChange("VAR with multiple children") |==> <NO-OP>
141:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):379:functionBody.getParent().getType() == Token.FUNCTION |==> functionBody.getParent().getType() <= Token.FUNCTION
142:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):379:functionBody.getParent().getType() == Token.FUNCTION |==> functionBody.getParent().getType() >= Token.FUNCTION
143:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):379:functionBody.getParent().getType() == Token.FUNCTION |==> false
144:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):378:Preconditions.checkState(functionBody.getParent().getType() == Token.FUNCTION) |==> <NO-OP>
145:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):384:current != null |==> true
146:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):384:current != null && NodeUtil.isFunctionDeclaration(current) |==> current != null == NodeUtil.isFunctionDeclaration(current)
147:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):384:current != null && NodeUtil.isFunctionDeclaration(current) |==> false
148:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):384:current != null && NodeUtil.isFunctionDeclaration(current) |==> current != null
149:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):384:current != null && NodeUtil.isFunctionDeclaration(current) |==> NodeUtil.isFunctionDeclaration(current)
150:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):385:previous = current |==> <NO-OP>
151:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):386:current = current.getNext() |==> <NO-OP>
152:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):391:current != null |==> true
153:COR:NodeUtil.isFunctionDeclaration(current):TRUE:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):394:NodeUtil.isFunctionDeclaration(current) |==> false
154:COR:NodeUtil.isFunctionDeclaration(current):FALSE:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):394:NodeUtil.isFunctionDeclaration(current) |==> true
155:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):396:Preconditions.checkNotNull(previous) |==> <NO-OP>
156:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):397:functionBody.removeChildAfter(previous) |==> <NO-OP>
157:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):401:insertAfter = addToFront(functionBody, current, insertAfter) |==> <NO-OP>
158:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):402:compiler.reportCodeChange() |==> <NO-OP>
159:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):405:previous = current |==> <NO-OP>
160:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.Normalize@moveNamedFunctions(com.google.javascript.rhino.Node):407:current = next |==> <NO-OP>
161:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.Normalize@addToFront(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):417:after == null |==> false
162:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@addToFront(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):418:parent.addChildToFront(newChild) |==> <NO-OP>
163:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@addToFront(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):420:parent.addChildAfter(newChild, after) |==> <NO-OP>
164:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize@removeDuplicateDeclarations(com.google.javascript.rhino.Node):433:t.traverse(root) |==> <NO-OP>
165:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):450:n.getType() == Token.NAME |==> n.getType() <= Token.NAME
166:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):450:n.getType() == Token.NAME |==> n.getType() >= Token.NAME
167:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):450:n.getType() == Token.NAME |==> false
168:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):450:Preconditions.checkState(n.getType() == Token.NAME) |==> <NO-OP>
169:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):451:parent.getType() == Token.VAR |==> parent.getType() <= Token.VAR
170:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):451:parent.getType() == Token.VAR |==> parent.getType() >= Token.VAR
171:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):451:parent.getType() == Token.VAR |==> false
172:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):452:Preconditions.checkState(parent.hasOneChild()) |==> <NO-OP>
173:COR:n.hasChildren():TRUE:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):471:n.hasChildren() |==> false
174:COR:n.hasChildren():FALSE:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):471:n.hasChildren() |==> true
175:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):473:parent.removeChild(n) |==> <NO-OP>
176:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):476:n.removeChild(value) |==> <NO-OP>
177:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):478:gramps.replaceChild(parent, new Node(Token.EXPR_RESULT, replacement)) |==> <NO-OP>
178:COR:NodeUtil.isStatementBlock(gramps):TRUE:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):481:NodeUtil.isStatementBlock(gramps) |==> false
179:COR:NodeUtil.isStatementBlock(gramps):FALSE:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):481:NodeUtil.isStatementBlock(gramps) |==> true
180:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):482:gramps.removeChild(parent) |==> <NO-OP>
181:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):483:gramps.getType() == Token.FOR |==> gramps.getType() <= Token.FOR
182:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):483:gramps.getType() == Token.FOR |==> gramps.getType() >= Token.FOR
183:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):483:gramps.getType() == Token.FOR |==> false
184:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):487:parent.removeChild(n) |==> <NO-OP>
185:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):488:gramps.replaceChild(parent, n) |==> <NO-OP>
186:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):490:gramps.getType() == Token.LABEL |==> gramps.getType() <= Token.LABEL
187:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):490:gramps.getType() == Token.LABEL |==> gramps.getType() >= Token.LABEL
188:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):490:gramps.getType() == Token.LABEL |==> false
189:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):490:Preconditions.checkState(gramps.getType() == Token.LABEL) |==> <NO-OP>
190:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):491:gramps.replaceChild(parent, new Node(Token.EMPTY)) |==> <NO-OP>
191:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler@onRedeclaration(com.google.javascript.jscomp.Scope,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):494:reportCodeChange("Duplicate VAR declaration") |==> <NO-OP>
192:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.Normalize$ScopeTicklingCallback@enterScope(com.google.javascript.jscomp.NodeTraversal):509:t.getScope() |==> <NO-OP>
193:LVR:TRUE:FALSE:com.google.javascript.jscomp.Normalize$ScopeTicklingCallback@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):520:true |==> false
