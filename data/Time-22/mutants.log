1:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType):82:type = checkPeriodType(type) |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType):83:iType = type |==> <NO-OP>
3:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(int,int,int,int,int,int,int,int,org.joda.time.PeriodType):84:setPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis) |==> <NO-OP>
4:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology):98:type = checkPeriodType(type) |==> <NO-OP>
5:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology):99:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
6:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology):100:iType = type |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,long,org.joda.time.PeriodType,org.joda.time.Chronology):101:iValues = chrono.get(this, startInstant, endInstant) |==> <NO-OP>
8:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):114:type = checkPeriodType(type) |==> <NO-OP>
9:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):115:startInstant == null |==> false
10:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):115:endInstant == null |==> false
11:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):115:startInstant == null && endInstant == null |==> startInstant == null == (endInstant == null)
12:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):115:startInstant == null && endInstant == null |==> false
13:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):115:startInstant == null && endInstant == null |==> startInstant == null
14:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):115:startInstant == null && endInstant == null |==> endInstant == null
15:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):116:iType = type |==> <NO-OP>
16:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):117:iValues = new int[size()] |==> <NO-OP>
17:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):122:iType = type |==> <NO-OP>
18:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType):123:iValues = chrono.get(this, startMillis, endMillis) |==> <NO-OP>
19:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):147:start == null |==> false
20:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):147:end == null |==> false
21:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):147:start == null || end == null |==> start == null != (end == null)
22:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):147:start == null || end == null |==> start == null
23:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):147:start == null || end == null |==> end == null
24:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):147:start == null || end == null |==> true
25:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal |==> start instanceof BaseLocal == end instanceof BaseLocal
26:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal |==> false
27:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal |==> start instanceof BaseLocal
28:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal |==> end instanceof BaseLocal
29:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start.getClass() == end.getClass() |==> false
30:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> (start instanceof BaseLocal && end instanceof BaseLocal) == (start.getClass() == end.getClass())
31:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> false
32:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> start instanceof BaseLocal && end instanceof BaseLocal
33:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):150:start instanceof BaseLocal && end instanceof BaseLocal && start.getClass() == end.getClass() |==> start.getClass() == end.getClass()
34:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):152:type = checkPeriodType(type) |==> <NO-OP>
35:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):156:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
36:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):157:iType = type |==> <NO-OP>
37:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):158:iValues = chrono.get(this, startMillis, endMillis) |==> <NO-OP>
38:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):160:start.size() != end.size() |==> start.size() < end.size()
39:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):160:start.size() != end.size() |==> start.size() > end.size()
40:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):160:start.size() != end.size() |==> true
41:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):163:0 |==> 1
42:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):163:0 |==> -1
43:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):163:i < isize |==> i != isize
44:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):163:i < isize |==> i <= isize
45:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):163:i < isize |==> false
46:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):164:start.getFieldType(i) != end.getFieldType(i) |==> true
47:LVR:FALSE:TRUE:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):168:false |==> true
48:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):168:DateTimeUtils.isContiguous(start) == false |==> false
49:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):168:DateTimeUtils.isContiguous(start) == false |==> DateTimeUtils.isContiguous(start)
50:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):168:DateTimeUtils.isContiguous(start) == false |==> false
51:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):171:iType = checkPeriodType(type) |==> <NO-OP>
52:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):173:0L |==> 1L
53:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):173:0L |==> -1L
54:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):173:0L |==> 1L
55:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):173:0L |==> -1L
56:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType):173:iValues = chrono.get(this, chrono.set(start, 0L), chrono.set(end, 0L)) |==> <NO-OP>
57:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType):186:type = checkPeriodType(type) |==> <NO-OP>
58:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType):191:iType = type |==> <NO-OP>
59:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType):192:iValues = chrono.get(this, startMillis, endMillis) |==> <NO-OP>
60:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType):204:type = checkPeriodType(type) |==> <NO-OP>
61:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType):209:iType = type |==> <NO-OP>
62:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType):210:iValues = chrono.get(this, startMillis, endMillis) |==> <NO-OP>
63:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long):224:iType = PeriodType.time() |==> <NO-OP>
64:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long):226:iType = PeriodType.standard() |==> <NO-OP>
65:LVR:POS:0:org.joda.time.base.BasePeriod@<init>(long):227:8 |==> 0
66:LVR:POS:NEG:org.joda.time.base.BasePeriod@<init>(long):227:8 |==> -8
67:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long):227:iValues = new int[8] |==> <NO-OP>
68:LVR:0:POS:org.joda.time.base.BasePeriod@<init>(long):228:0 |==> 1
69:LVR:0:NEG:org.joda.time.base.BasePeriod@<init>(long):228:0 |==> -1
70:LVR:POS:0:org.joda.time.base.BasePeriod@<init>(long):228:4 |==> 0
71:LVR:POS:NEG:org.joda.time.base.BasePeriod@<init>(long):228:4 |==> -4
72:LVR:POS:0:org.joda.time.base.BasePeriod@<init>(long):228:4 |==> 0
73:LVR:POS:NEG:org.joda.time.base.BasePeriod@<init>(long):228:4 |==> -4
74:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long):228:System.arraycopy(values, 0, iValues, 4, 4) |==> <NO-OP>
75:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,org.joda.time.PeriodType,org.joda.time.Chronology):245:type = checkPeriodType(type) |==> <NO-OP>
76:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,org.joda.time.PeriodType,org.joda.time.Chronology):246:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
77:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,org.joda.time.PeriodType,org.joda.time.Chronology):247:iType = type |==> <NO-OP>
78:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(long,org.joda.time.PeriodType,org.joda.time.Chronology):248:iValues = chrono.get(this, duration) |==> <NO-OP>
79:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):263:type == null |==> false
80:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):263:type = (type == null ? converter.getPeriodType(period) : type) |==> <NO-OP>
81:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):264:type = checkPeriodType(type) |==> <NO-OP>
82:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):265:iType = type |==> <NO-OP>
83:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):267:iValues = new int[size()] |==> <NO-OP>
84:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):268:chrono = DateTimeUtils.getChronology(chrono) |==> <NO-OP>
85:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):269:converter.setInto((ReadWritablePeriod)this, period, chrono) |==> <NO-OP>
86:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology):271:iValues = new MutablePeriod(period, type, chrono).getValues() |==> <NO-OP>
87:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(int[],org.joda.time.PeriodType):284:iType = type |==> <NO-OP>
88:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@<init>(int[],org.joda.time.PeriodType):285:iValues = values |==> <NO-OP>
89:LVR:POS:0:org.joda.time.base.BasePeriod@toDurationFrom(org.joda.time.ReadableInstant):363:1 |==> 0
90:LVR:POS:NEG:org.joda.time.base.BasePeriod@toDurationFrom(org.joda.time.ReadableInstant):363:1 |==> -1
91:LVR:NEG:0:org.joda.time.base.BasePeriod@toDurationTo(org.joda.time.ReadableInstant):387:-1 |==> 0
92:LVR:NEG:POS:org.joda.time.base.BasePeriod@toDurationTo(org.joda.time.ReadableInstant):387:-1 |==> 1
93:LVR:NEG:0:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):402:-1 |==> 0
94:LVR:NEG:POS:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):402:-1 |==> 1
95:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):402:index == -1 |==> index <= -1
96:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):402:index == -1 |==> index >= -1
97:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):402:index == -1 |==> false
98:LVR:0:POS:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):403:0 |==> 1
99:LVR:0:NEG:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):403:0 |==> -1
100:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):403:newValue != 0 |==> newValue < 0
101:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):403:newValue != 0 |==> newValue > 0
102:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):403:newValue != 0 |==> true
103:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@checkAndUpdate(org.joda.time.DurationFieldType,int[],int):408:values[index] = newValue |==> <NO-OP>
104:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@setPeriod(org.joda.time.ReadablePeriod):420:period == null |==> false
105:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriod(org.joda.time.ReadablePeriod):421:setValues(new int[size()]) |==> <NO-OP>
106:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriod(org.joda.time.ReadablePeriod):423:setPeriodInternal(period) |==> <NO-OP>
107:LVR:0:POS:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):432:0 |==> 1
108:LVR:0:NEG:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):432:0 |==> -1
109:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):432:i < isize |==> i != isize
110:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):432:i < isize |==> i <= isize
111:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):432:i < isize |==> false
112:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):435:checkAndUpdate(type, newValues, value) |==> <NO-OP>
113:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(org.joda.time.ReadablePeriod):437:iValues = newValues |==> <NO-OP>
114:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriod(int,int,int,int,int,int,int,int):455:setPeriodInternal(years, months, weeks, days, hours, minutes, seconds, millis) |==> <NO-OP>
115:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):464:checkAndUpdate(DurationFieldType.years(), newValues, years) |==> <NO-OP>
116:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):465:checkAndUpdate(DurationFieldType.months(), newValues, months) |==> <NO-OP>
117:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):466:checkAndUpdate(DurationFieldType.weeks(), newValues, weeks) |==> <NO-OP>
118:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):467:checkAndUpdate(DurationFieldType.days(), newValues, days) |==> <NO-OP>
119:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):468:checkAndUpdate(DurationFieldType.hours(), newValues, hours) |==> <NO-OP>
120:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):469:checkAndUpdate(DurationFieldType.minutes(), newValues, minutes) |==> <NO-OP>
121:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):470:checkAndUpdate(DurationFieldType.seconds(), newValues, seconds) |==> <NO-OP>
122:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):471:checkAndUpdate(DurationFieldType.millis(), newValues, millis) |==> <NO-OP>
123:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setPeriodInternal(int,int,int,int,int,int,int,int):472:iValues = newValues |==> <NO-OP>
124:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@setField(org.joda.time.DurationFieldType,int):484:setFieldInto(iValues, field, value) |==> <NO-OP>
125:LVR:NEG:0:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):497:-1 |==> 0
126:LVR:NEG:POS:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):497:-1 |==> 1
127:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):497:index == -1 |==> index <= -1
128:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):497:index == -1 |==> index >= -1
129:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):497:index == -1 |==> false
130:LVR:0:POS:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:0 |==> 1
131:LVR:0:NEG:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:0 |==> -1
132:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 |==> value < 0
133:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 |==> value > 0
134:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 |==> true
135:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:field == null |==> false
136:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 || field == null |==> value != 0 != (field == null)
137:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 || field == null |==> value != 0
138:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 || field == null |==> field == null
139:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):498:value != 0 || field == null |==> true
140:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setFieldInto(int[],org.joda.time.DurationFieldType,int):503:values[index] = value |==> <NO-OP>
141:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@addField(org.joda.time.DurationFieldType,int):515:addFieldInto(iValues, field, value) |==> <NO-OP>
142:LVR:NEG:0:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):528:-1 |==> 0
143:LVR:NEG:POS:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):528:-1 |==> 1
144:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):528:index == -1 |==> index <= -1
145:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):528:index == -1 |==> index >= -1
146:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):528:index == -1 |==> false
147:LVR:0:POS:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:0 |==> 1
148:LVR:0:NEG:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:0 |==> -1
149:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 |==> value < 0
150:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 |==> value > 0
151:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 |==> true
152:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:field == null |==> false
153:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 || field == null |==> value != 0 != (field == null)
154:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 || field == null |==> value != 0
155:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 || field == null |==> field == null
156:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):529:value != 0 || field == null |==> true
157:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@addFieldInto(int[],org.joda.time.DurationFieldType,int):534:values[index] = FieldUtils.safeAdd(values[index], value) |==> <NO-OP>
158:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@mergePeriod(org.joda.time.ReadablePeriod):545:period != null |==> true
159:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@mergePeriod(org.joda.time.ReadablePeriod):546:iValues = mergePeriodInto(getValues(), period) |==> <NO-OP>
160:LVR:0:POS:org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):559:0 |==> 1
161:LVR:0:NEG:org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):559:0 |==> -1
162:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):559:i < isize |==> i != isize
163:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):559:i < isize |==> i <= isize
164:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):559:i < isize |==> false
165:STD:<CALL>:<NO-OP>:org.joda.time.base.BasePeriod@mergePeriodInto(int[],org.joda.time.ReadablePeriod):562:checkAndUpdate(type, values, value) |==> <NO-OP>
166:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.base.BasePeriod@addPeriod(org.joda.time.ReadablePeriod):574:period != null |==> true
167:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@addPeriod(org.joda.time.ReadablePeriod):575:iValues = addPeriodInto(getValues(), period) |==> <NO-OP>
168:LVR:0:POS:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):588:0 |==> 1
169:LVR:0:NEG:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):588:0 |==> -1
170:ROR:<(int,int):!=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):588:i < isize |==> i != isize
171:ROR:<(int,int):<=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):588:i < isize |==> i <= isize
172:ROR:<(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):588:i < isize |==> false
173:LVR:0:POS:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):591:0 |==> 1
174:LVR:0:NEG:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):591:0 |==> -1
175:ROR:!=(int,int):<(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):591:value != 0 |==> value < 0
176:ROR:!=(int,int):>(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):591:value != 0 |==> value > 0
177:ROR:!=(int,int):TRUE(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):591:value != 0 |==> true
178:LVR:NEG:0:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):593:-1 |==> 0
179:LVR:NEG:POS:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):593:-1 |==> 1
180:ROR:==(int,int):<=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):593:index == -1 |==> index <= -1
181:ROR:==(int,int):>=(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):593:index == -1 |==> index >= -1
182:ROR:==(int,int):FALSE(int,int):org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):593:index == -1 |==> false
183:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@addPeriodInto(int[],org.joda.time.ReadablePeriod):597:values[index] = FieldUtils.safeAdd(getValue(index), value) |==> <NO-OP>
184:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setValue(int,int):613:iValues[index] = value |==> <NO-OP>
185:STD:<ASSIGN>:<NO-OP>:org.joda.time.base.BasePeriod@setValues(int[]):622:iValues = values |==> <NO-OP>
