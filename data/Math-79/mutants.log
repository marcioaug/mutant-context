1:LVR:POS:0:org.apache.commons.math.util.MathUtils:70:1L |==> 0L
2:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:70:1L |==> -1L
3:LVR:POS:0:org.apache.commons.math.util.MathUtils:70:1L |==> 0L
4:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:70:1L |==> -1L
5:LVR:POS:0:org.apache.commons.math.util.MathUtils:70:2L |==> 0L
6:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:70:2L |==> -2L
7:LVR:POS:0:org.apache.commons.math.util.MathUtils:71:6L |==> 0L
8:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:71:6L |==> -6L
9:LVR:POS:0:org.apache.commons.math.util.MathUtils:71:24L |==> 0L
10:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:71:24L |==> -24L
11:LVR:POS:0:org.apache.commons.math.util.MathUtils:71:120L |==> 0L
12:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:71:120L |==> -120L
13:LVR:POS:0:org.apache.commons.math.util.MathUtils:72:720L |==> 0L
14:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:72:720L |==> -720L
15:LVR:POS:0:org.apache.commons.math.util.MathUtils:72:5040L |==> 0L
16:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:72:5040L |==> -5040L
17:LVR:POS:0:org.apache.commons.math.util.MathUtils:72:40320L |==> 0L
18:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:72:40320L |==> -40320L
19:LVR:POS:0:org.apache.commons.math.util.MathUtils:73:362880L |==> 0L
20:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:73:362880L |==> -362880L
21:LVR:POS:0:org.apache.commons.math.util.MathUtils:73:3628800L |==> 0L
22:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:73:3628800L |==> -3628800L
23:LVR:POS:0:org.apache.commons.math.util.MathUtils:73:39916800L |==> 0L
24:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:73:39916800L |==> -39916800L
25:LVR:POS:0:org.apache.commons.math.util.MathUtils:74:479001600L |==> 0L
26:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:74:479001600L |==> -479001600L
27:LVR:POS:0:org.apache.commons.math.util.MathUtils:74:6227020800L |==> 0L
28:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:74:6227020800L |==> -6227020800L
29:LVR:POS:0:org.apache.commons.math.util.MathUtils:74:87178291200L |==> 0L
30:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:74:87178291200L |==> -87178291200L
31:LVR:POS:0:org.apache.commons.math.util.MathUtils:75:1307674368000L |==> 0L
32:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:75:1307674368000L |==> -1307674368000L
33:LVR:POS:0:org.apache.commons.math.util.MathUtils:75:20922789888000L |==> 0L
34:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:75:20922789888000L |==> -20922789888000L
35:LVR:POS:0:org.apache.commons.math.util.MathUtils:75:355687428096000L |==> 0L
36:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:75:355687428096000L |==> -355687428096000L
37:LVR:POS:0:org.apache.commons.math.util.MathUtils:76:6402373705728000L |==> 0L
38:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:76:6402373705728000L |==> -6402373705728000L
39:LVR:POS:0:org.apache.commons.math.util.MathUtils:76:121645100408832000L |==> 0L
40:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:76:121645100408832000L |==> -121645100408832000L
41:LVR:POS:0:org.apache.commons.math.util.MathUtils:76:2432902008176640000L |==> 0L
42:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:76:2432902008176640000L |==> -2432902008176640000L
43:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x % (long)y
44:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x * (long)y
45:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x - (long)y
46:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x / (long)y
47:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s != Integer.MIN_VALUE
48:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s <= Integer.MIN_VALUE
49:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> false
50:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s != Integer.MAX_VALUE
51:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s >= Integer.MAX_VALUE
52:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> false
53:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE != s > Integer.MAX_VALUE
54:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE
55:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s > Integer.MAX_VALUE
56:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> true
57:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a != b
58:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a >= b
59:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> false
60:LVR:0:POS:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:0 |==> 1
61:LVR:0:NEG:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:0 |==> -1
62:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a != 0
63:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a <= 0
64:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> false
65:LVR:0:POS:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:0 |==> 1
66:LVR:0:NEG:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:0 |==> -1
67:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b != 0
68:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b <= 0
69:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> false
70:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE % b
71:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE * b
72:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE + b
73:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE / b
74:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b < a
75:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b == a
76:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> true
77:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a % b
78:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a * b
79:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a - b
80:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a / b
81:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a % b
82:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a * b
83:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a - b
84:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a / b
85:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE % b
86:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE * b
87:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE + b
88:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE / b
89:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a < Long.MAX_VALUE - b
90:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a == Long.MAX_VALUE - b
91:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> true
92:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a % b
93:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a * b
94:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a - b
95:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a / b
96:STD:<CALL>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):189:checkBinomial(n, k) |==> <NO-OP>
97:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n <= k
98:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n >= k
99:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> false
100:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:0 |==> 1
101:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:0 |==> -1
102:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k <= 0
103:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k >= 0
104:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> false
105:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (n == k) != (k == 0)
106:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (n == k)
107:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (k == 0)
108:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> true
109:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):191:1 |==> 0
110:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):191:1 |==> -1
111:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> 0
112:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> -1
113:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k <= 1
114:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k >= 1
115:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> false
116:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> 0
117:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> -1
118:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n % 1
119:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n * 1
120:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n + 1
121:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n / 1
122:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k <= n - 1
123:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k >= n - 1
124:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> false
125:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == 1) != (k == n - 1)
126:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == 1)
127:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == n - 1)
128:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> true
129:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:2 |==> 0
130:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:2 |==> -2
131:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n % 2
132:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n * 2
133:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n + 2
134:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n - 2
135:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k != n / 2
136:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k >= n / 2
137:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> false
138:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n % k
139:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n * k
140:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n + k
141:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n / k
142:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):205:1 |==> 0
143:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):205:1 |==> -1
144:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:61 |==> 0
145:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:61 |==> -61
146:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n < 61
147:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n == 61
148:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> true
149:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n % k
150:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n * k
151:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n + k
152:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n / k
153:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:1 |==> 0
154:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:1 |==> -1
155:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> (n - k) % 1
156:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> (n - k) * 1
157:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> n - k - 1
158:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> (n - k) / 1
159:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:1 |==> 0
160:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:1 |==> -1
161:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j < k
162:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j == k
163:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> true
164:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result % i
165:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result + i
166:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result - i
167:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result / i
168:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i % j
169:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i * j
170:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i + j
171:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i - j
172:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result = result * i / j |==> <NO-OP>
173:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):211:i++ |==> <NO-OP>
174:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:66 |==> 0
175:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:66 |==> -66
176:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n < 66
177:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n == 66
178:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> true
179:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n % k
180:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n * k
181:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n + k
182:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n / k
183:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:1 |==> 0
184:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:1 |==> -1
185:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> (n - k) % 1
186:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> (n - k) * 1
187:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> n - k - 1
188:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> (n - k) / 1
189:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:1 |==> 0
190:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:1 |==> -1
191:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j < k
192:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j == k
193:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> true
194:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j % d
195:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j * d
196:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j + d
197:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j - d
198:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result % (j / d)
199:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result * (j / d)
200:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result + (j / d)
201:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result - (j / d)
202:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i % d
203:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i * d
204:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i + d
205:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i - d
206:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) % (i / d)
207:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) + (i / d)
208:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) - (i / d)
209:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) / (i / d)
210:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result = (result / (j / d)) * (i / d) |==> <NO-OP>
211:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):226:i++ |==> <NO-OP>
212:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n % k
213:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n * k
214:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n + k
215:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n / k
216:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:1 |==> 0
217:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:1 |==> -1
218:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> (n - k) % 1
219:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> (n - k) * 1
220:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> n - k - 1
221:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> (n - k) / 1
222:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:1 |==> 0
223:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:1 |==> -1
224:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j < k
225:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j == k
226:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> true
227:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j % d
228:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j * d
229:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j + d
230:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j - d
231:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result % (j / d)
232:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result * (j / d)
233:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result + (j / d)
234:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result - (j / d)
235:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i % d
236:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i * d
237:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i + d
238:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i - d
239:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result = mulAndCheck(result / (j / d), i / d) |==> <NO-OP>
240:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):236:i++ |==> <NO-OP>
241:STD:<CALL>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):265:checkBinomial(n, k) |==> <NO-OP>
242:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n <= k
243:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n >= k
244:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> false
245:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:0 |==> 1
246:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:0 |==> -1
247:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k <= 0
248:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k >= 0
249:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> false
250:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (n == k) != (k == 0)
251:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (n == k)
252:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (k == 0)
253:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> true
254:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):267:1.0 |==> 0.0
255:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):267:1.0 |==> -1.0
256:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> 0
257:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> -1
258:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k <= 1
259:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k >= 1
260:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> false
261:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> 0
262:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> -1
263:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n % 1
264:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n * 1
265:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n + 1
266:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n / 1
267:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k <= n - 1
268:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k >= n - 1
269:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> false
270:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == 1) != (k == n - 1)
271:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == 1)
272:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == n - 1)
273:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> true
274:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:2 |==> 0
275:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:2 |==> -2
276:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n % 2
277:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n * 2
278:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n + 2
279:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n - 2
280:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k != n / 2
281:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k >= n / 2
282:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> false
283:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n % k
284:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n * k
285:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n + k
286:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n / k
287:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:67 |==> 0
288:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:67 |==> -67
289:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n != 67
290:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n <= 67
291:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> false
292:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):279:1.0 |==> 0.0
293:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):279:1.0 |==> -1.0
294:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:1 |==> 0
295:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:1 |==> -1
296:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i < k
297:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i == k
298:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> true
299:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n % k
300:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n * k
301:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n + k
302:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n / k
303:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> (n - k) % i
304:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> (n - k) * i
305:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> n - k - i
306:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> (n - k) / i
307:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) % (double)i
308:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) * (double)i
309:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) + (double)i
310:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) - (double)i
311:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:result *= (double)(n - k + i) / (double)i |==> <NO-OP>
312:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:0.5 |==> 0.0
313:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:0.5 |==> -0.5
314:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result % 0.5
315:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result * 0.5
316:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result - 0.5
317:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result / 0.5
318:STD:<CALL>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):306:checkBinomial(n, k) |==> <NO-OP>
319:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n <= k
320:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n >= k
321:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> false
322:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:0 |==> 1
323:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:0 |==> -1
324:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k <= 0
325:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k >= 0
326:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> false
327:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (n == k) != (k == 0)
328:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (n == k)
329:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (k == 0)
330:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> true
331:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):308:0 |==> 1
332:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):308:0 |==> -1
333:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> 0
334:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> -1
335:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k <= 1
336:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k >= 1
337:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> false
338:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> 0
339:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> -1
340:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n % 1
341:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n * 1
342:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n + 1
343:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n / 1
344:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k <= n - 1
345:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k >= n - 1
346:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> false
347:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == 1) != (k == n - 1)
348:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == 1)
349:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == n - 1)
350:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> true
351:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:67 |==> 0
352:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:67 |==> -67
353:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n != 67
354:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n <= 67
355:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> false
356:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:1030 |==> 0
357:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:1030 |==> -1030
358:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n != 1030
359:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n <= 1030
360:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> false
361:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:2 |==> 0
362:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:2 |==> -2
363:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n % 2
364:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n * 2
365:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n + 2
366:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n - 2
367:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k != n / 2
368:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k >= n / 2
369:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> false
370:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n % k
371:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n * k
372:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n + k
373:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n / k
374:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):337:0 |==> 1
375:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):337:0 |==> -1
376:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n % k
377:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n * k
378:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n + k
379:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n / k
380:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:1 |==> 0
381:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:1 |==> -1
382:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> (n - k) % 1
383:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> (n - k) * 1
384:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> n - k - 1
385:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> (n - k) / 1
386:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i < n
387:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i == n
388:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> true
389:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):341:logSum += Math.log(i) |==> <NO-OP>
390:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:2 |==> 0
391:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:2 |==> -2
392:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i < k
393:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i == k
394:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> true
395:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):346:logSum -= Math.log(i) |==> <NO-OP>
396:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n != k
397:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n <= k
398:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> false
399:LVR:0:POS:org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:0 |==> 1
400:LVR:0:NEG:org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:0 |==> -1
401:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n != 0
402:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n <= 0
403:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> false
404:COR:equals(x, y, eps):TRUE:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):383:equals(x, y, eps) |==> false
405:COR:equals(x, y, eps):FALSE:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):383:equals(x, y, eps) |==> true
406:LVR:0:POS:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):384:0 |==> 1
407:LVR:0:NEG:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):384:0 |==> -1
408:ROR:<(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x != y
409:ROR:<(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x <= y
410:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> false
411:LVR:NEG:0:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):386:-1 |==> 0
412:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):386:-1 |==> 1
413:LVR:POS:0:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):388:1 |==> 0
414:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):388:1 |==> -1
415:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@cosh(double):399:-x |==> +x
416:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) % Math.exp(-x)
417:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) * Math.exp(-x)
418:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) - Math.exp(-x)
419:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) / Math.exp(-x)
420:LVR:POS:0:org.apache.commons.math.util.MathUtils@cosh(double):399:2.0 |==> 0.0
421:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@cosh(double):399:2.0 |==> -2.0
422:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) % 2.0
423:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) * 2.0
424:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) + 2.0
425:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) - 2.0
426:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(x) == Double.isNaN(y)
427:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> false
428:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(x)
429:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(y)
430:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x <= y
431:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x >= y
432:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> false
433:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> (Double.isNaN(x) && Double.isNaN(y)) != (x == y)
434:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> (Double.isNaN(x) && Double.isNaN(y))
435:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> x == y
436:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> true
437:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y % x
438:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y * x
439:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y + x
440:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y / x
441:ROR:<=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) < eps
442:ROR:<=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) == eps
443:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> true
444:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> equals(x, y) != (Math.abs(y - x) <= eps)
445:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> equals(x, y)
446:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> (Math.abs(y - x) <= eps)
447:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> true
448:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double,double,int):447:0 |==> 1
449:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double,double,int):447:0 |==> -1
450:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps != 0
451:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps >= 0
452:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> false
453:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps != NAN_GAP
454:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps <= NAN_GAP
455:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> false
456:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps > 0 == maxUlps < NAN_GAP
457:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> false
458:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps > 0
459:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps < NAN_GAP
460:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double,double,int):453:0 |==> 1
461:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double,double,int):453:0 |==> -1
462:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt != 0
463:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt <= 0
464:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> false
465:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK % xInt
466:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK * xInt
467:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK + xInt
468:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK / xInt
469:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@equals(double,double,int):454:xInt = SGN_MASK - xInt |==> <NO-OP>
470:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double,double,int):456:0 |==> 1
471:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double,double,int):456:0 |==> -1
472:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt != 0
473:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt <= 0
474:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> false
475:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK % yInt
476:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK * yInt
477:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK + yInt
478:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK / yInt
479:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@equals(double,double,int):457:yInt = SGN_MASK - yInt |==> <NO-OP>
480:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt % yInt
481:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt * yInt
482:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt + yInt
483:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt / yInt
484:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) < maxUlps
485:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) == maxUlps
486:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> true
487:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:x == null |==> false
488:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:y == null |==> false
489:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (x == null) != (y == null)
490:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (x == null)
491:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (y == null)
492:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> true
493:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:x == null |==> false
494:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:y == null |==> false
495:LOR:^(boolean,boolean):&(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:(x == null) ^ (y == null) |==> (x == null) & (y == null)
496:LOR:^(boolean,boolean):|(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:(x == null) ^ (y == null) |==> (x == null) | (y == null)
497:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length < y.length
498:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length > y.length
499:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> true
500:LVR:FALSE:TRUE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):478:false |==> true
501:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:0 |==> 1
502:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:0 |==> -1
503:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i != x.length
504:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i <= x.length
505:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> false
506:COR:equals(x[i], y[i]):TRUE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):481:equals(x[i], y[i]) |==> false
507:COR:equals(x[i], y[i]):FALSE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):481:equals(x[i], y[i]) |==> true
508:LVR:FALSE:TRUE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):482:false |==> true
509:LVR:TRUE:FALSE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):485:true |==> false
510:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorial(int):511:0 |==> 1
511:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorial(int):511:0 |==> -1
512:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n != 0
513:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n <= 0
514:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> false
515:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorial(int):516:20 |==> 0
516:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorial(int):516:20 |==> -20
517:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n != 20
518:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n >= 20
519:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> false
520:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorialDouble(int):544:0 |==> 1
521:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorialDouble(int):544:0 |==> -1
522:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n != 0
523:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n <= 0
524:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> false
525:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialDouble(int):549:21 |==> 0
526:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialDouble(int):549:21 |==> -21
527:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n != 21
528:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n <= 21
529:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> false
530:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialDouble(int):552:0.5 |==> 0.0
531:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialDouble(int):552:0.5 |==> -0.5
532:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) % 0.5
533:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) * 0.5
534:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) - 0.5
535:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) / 0.5
536:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorialLog(int):569:0 |==> 1
537:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):569:0 |==> -1
538:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n != 0
539:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n <= 0
540:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> false
541:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialLog(int):574:21 |==> 0
542:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):574:21 |==> -21
543:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n != 21
544:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n <= 21
545:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> false
546:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorialLog(int):577:0 |==> 1
547:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):577:0 |==> -1
548:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialLog(int):578:2 |==> 0
549:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):578:2 |==> -2
550:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i < n
551:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i == n
552:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> true
553:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@factorialLog(int):579:logSum += Math.log(i) |==> <NO-OP>
554:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> 1
555:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> -1
556:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u <= 0
557:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u >= 0
558:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> false
559:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> 1
560:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> -1
561:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v <= 0
562:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v >= 0
563:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> false
564:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (u == 0) != (v == 0)
565:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (u == 0)
566:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (v == 0)
567:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> true
568:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u <= Integer.MIN_VALUE
569:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u >= Integer.MIN_VALUE
570:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> false
571:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v <= Integer.MIN_VALUE
572:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v >= Integer.MIN_VALUE
573:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> false
574:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (u == Integer.MIN_VALUE) != (v == Integer.MIN_VALUE)
575:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (u == Integer.MIN_VALUE)
576:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (v == Integer.MIN_VALUE)
577:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> true
578:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) % Math.abs(v)
579:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) * Math.abs(v)
580:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) - Math.abs(v)
581:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) / Math.abs(v)
582:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):630:0 |==> 1
583:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):630:0 |==> -1
584:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u != 0
585:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u >= 0
586:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> false
587:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):631:-u |==> +u
588:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):631:-u |==> ~u
589:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):631:u = -u |==> <NO-OP>
590:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):633:0 |==> 1
591:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):633:0 |==> -1
592:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v != 0
593:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v >= 0
594:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> false
595:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):634:-v |==> +v
596:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):634:-v |==> ~v
597:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):634:v = -v |==> <NO-OP>
598:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):637:0 |==> 1
599:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):637:0 |==> -1
600:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> 0
601:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> -1
602:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:u & 1 |==> u ^ 1
603:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:u & 1 |==> u | 1
604:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> 1
605:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> -1
606:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) <= 0
607:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) >= 0
608:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> false
609:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> 0
610:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> -1
611:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:v & 1 |==> v ^ 1
612:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:v & 1 |==> v | 1
613:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> 1
614:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> -1
615:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) <= 0
616:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) >= 0
617:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> false
618:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (u & 1) == 0 == ((v & 1) == 0)
619:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> false
620:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (u & 1) == 0
621:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (v & 1) == 0
622:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):638:31 |==> 0
623:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:31 |==> -31
624:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k != 31
625:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k <= 31
626:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> false
627:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> ((u & 1) == 0 && (v & 1) == 0) == k < 31
628:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> false
629:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> (u & 1) == 0 && (v & 1) == 0
630:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> k < 31
631:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):640:2 |==> 0
632:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):640:2 |==> -2
633:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):640:u /= 2 |==> <NO-OP>
634:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):641:2 |==> 0
635:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):641:2 |==> -2
636:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):641:v /= 2 |==> <NO-OP>
637:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):642:k++ |==> <NO-OP>
638:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):644:31 |==> 0
639:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):644:31 |==> -31
640:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k <= 31
641:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k >= 31
642:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> false
643:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> 0
644:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> -1
645:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u & 1 |==> u ^ 1
646:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u & 1 |==> u | 1
647:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> 0
648:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> -1
649:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) <= 1
650:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) >= 1
651:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> false
652:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:-(u / 2) |==> +(u / 2)
653:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:-(u / 2) |==> ~(u / 2)
654:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):651:2 |==> 0
655:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):651:2 |==> -2
656:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u % 2
657:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u * 2
658:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u + 2
659:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u - 2
660:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):657:1 |==> 0
661:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):657:1 |==> -1
662:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:t & 1 |==> t ^ 1
663:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:t & 1 |==> t | 1
664:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):657:0 |==> 1
665:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):657:0 |==> -1
666:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) <= 0
667:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) >= 0
668:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> false
669:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):658:2 |==> 0
670:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):658:2 |==> -2
671:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):658:t /= 2 |==> <NO-OP>
672:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):661:0 |==> 1
673:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):661:0 |==> -1
674:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t != 0
675:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t >= 0
676:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> false
677:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):662:-t |==> +t
678:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):662:-t |==> ~t
679:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):662:u = -t |==> <NO-OP>
680:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):664:v = t |==> <NO-OP>
681:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v % u
682:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v * u
683:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v + u
684:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v / u
685:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):667:2 |==> 0
686:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):667:2 |==> -2
687:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) % 2
688:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) * 2
689:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) + 2
690:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) - 2
691:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):667:t = (v - u) / 2 |==> <NO-OP>
692:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):670:0 |==> 1
693:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):670:0 |==> -1
694:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t < 0
695:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t > 0
696:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> true
697:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u |==> +u
698:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u |==> ~u
699:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 |==> 0
700:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 |==> -1
701:SOR:<<(int,int):>>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 << k |==> 1 >> k
702:SOR:<<(int,int):>>>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 << k |==> 1 >>> k
703:AOR:*(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u % (1 << k)
704:AOR:*(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u + (1 << k)
705:AOR:*(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u - (1 << k)
706:AOR:*(int,int):/(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u / (1 << k)
707:ROR:>=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x == ZB
708:ROR:>=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x > ZB
709:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> true
710:COR:Double.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@indicator(double):715:Double.isNaN(x) |==> false
711:COR:Double.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@indicator(double):715:Double.isNaN(x) |==> true
712:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(double):718:0.0 |==> 1.0
713:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(double):718:0.0 |==> -1.0
714:ROR:>=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x == 0.0
715:ROR:>=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x > 0.0
716:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> true
717:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> 0.0
718:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> -1.0
719:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@indicator(double):718:-1.0 |==> +1.0
720:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> 0.0
721:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> -1.0
722:COR:Float.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@indicator(float):729:Float.isNaN(x) |==> false
723:COR:Float.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@indicator(float):729:Float.isNaN(x) |==> true
724:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(float):732:0.0F |==> 1.0F
725:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(float):732:0.0F |==> -1.0F
726:ROR:>=(float,float):==(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x == 0.0F
727:ROR:>=(float,float):>(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x > 0.0F
728:ROR:>=(float,float):TRUE(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> true
729:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> 0.0F
730:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> -1.0F
731:ORU:-(float):+(float):org.apache.commons.math.util.MathUtils@indicator(float):732:-1.0F |==> +1.0F
732:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> 0.0F
733:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> -1.0F
734:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(int):742:0 |==> 1
735:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(int):742:0 |==> -1
736:ROR:>=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x == 0
737:ROR:>=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x > 0
738:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> true
739:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(int):742:1 |==> 0
740:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(int):742:1 |==> -1
741:LVR:NEG:0:org.apache.commons.math.util.MathUtils@indicator(int):742:-1 |==> 0
742:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@indicator(int):742:-1 |==> 1
743:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(long):752:0L |==> 1L
744:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(long):752:0L |==> -1L
745:ROR:>=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x == 0L
746:ROR:>=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x > 0L
747:ROR:>=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> true
748:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(long):752:1L |==> 0L
749:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(long):752:1L |==> -1L
750:LVR:NEG:0:org.apache.commons.math.util.MathUtils@indicator(long):752:-1L |==> 0L
751:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@indicator(long):752:-1L |==> 1L
752:ROR:>=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x == ZS
753:ROR:>=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x > ZS
754:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> true
755:LVR:0:POS:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> 1
756:LVR:0:NEG:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> -1
757:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a <= 0
758:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a >= 0
759:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> false
760:LVR:0:POS:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> 1
761:LVR:0:NEG:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> -1
762:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b <= 0
763:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b >= 0
764:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> false
765:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> a == 0 != (b == 0)
766:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> a == 0
767:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> b == 0
768:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> true
769:LVR:0:POS:org.apache.commons.math.util.MathUtils@lcm(int,int):791:0 |==> 1
770:LVR:0:NEG:org.apache.commons.math.util.MathUtils@lcm(int,int):791:0 |==> -1
771:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a % gcd(a, b)
772:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a * gcd(a, b)
773:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a + gcd(a, b)
774:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a - gcd(a, b)
775:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm <= Integer.MIN_VALUE
776:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm >= Integer.MIN_VALUE
777:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> false
778:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) % Math.log(base)
779:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) * Math.log(base)
780:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) + Math.log(base)
781:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) - Math.log(base)
782:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) % ((long)y)
783:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) + ((long)y)
784:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) - ((long)y)
785:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) / ((long)y)
786:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m != Integer.MIN_VALUE
787:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m <= Integer.MIN_VALUE
788:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> false
789:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m != Integer.MAX_VALUE
790:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m >= Integer.MAX_VALUE
791:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> false
792:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m < Integer.MIN_VALUE != m > Integer.MAX_VALUE
793:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m < Integer.MIN_VALUE
794:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m > Integer.MAX_VALUE
795:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> true
796:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a != b
797:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a >= b
798:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> false
799:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:0 |==> 1
800:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:0 |==> -1
801:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a != 0
802:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a <= 0
803:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> false
804:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:0 |==> 1
805:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:0 |==> -1
806:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b != 0
807:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b <= 0
808:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> false
809:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE % b
810:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE * b
811:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE + b
812:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE - b
813:ROR:>=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a == Long.MAX_VALUE / b
814:ROR:>=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a > Long.MAX_VALUE / b
815:ROR:>=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> true
816:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a % b
817:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a + b
818:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a - b
819:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a / b
820:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:0 |==> 1
821:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:0 |==> -1
822:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b != 0
823:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b >= 0
824:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> false
825:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE % b
826:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE * b
827:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE + b
828:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE - b
829:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b < a
830:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b == a
831:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> true
832:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a % b
833:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a + b
834:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a - b
835:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a / b
836:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):873:0 |==> 1
837:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):873:0 |==> -1
838:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:0 |==> 1
839:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:0 |==> -1
840:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a != 0
841:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a >= 0
842:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> false
843:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE % b
844:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE * b
845:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE + b
846:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE - b
847:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a < Long.MAX_VALUE / b
848:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a == Long.MAX_VALUE / b
849:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> true
850:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a % b
851:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a + b
852:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a - b
853:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a / b
854:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):887:0 |==> 1
855:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):887:0 |==> -1
856:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isNaN(d) != Double.isInfinite(d)
857:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isNaN(d)
858:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isInfinite(d)
859:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> true
860:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:0 |==> 1
861:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:0 |==> -1
862:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d <= 0
863:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d >= 0
864:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> false
865:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:0 |==> 1
866:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:0 |==> -1
867:ROR:<(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction != 0
868:ROR:<(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction <= 0
869:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> false
870:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:-Double.MIN_VALUE |==> +Double.MIN_VALUE
871:LVR:NEG:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:-9223372036854775808L |==> 0L
872:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:-9223372036854775808L |==> -9223372036854775808L
873:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:bits & -9223372036854775808L |==> bits ^ -9223372036854775808L
874:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:bits & -9223372036854775808L |==> bits | -9223372036854775808L
875:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:9218868437227405312L |==> 0L
876:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:9218868437227405312L |==> -9218868437227405312L
877:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:bits & 9218868437227405312L |==> bits ^ 9218868437227405312L
878:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:bits & 9218868437227405312L |==> bits | 9218868437227405312L
879:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:4503599627370495L |==> 0L
880:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:4503599627370495L |==> -4503599627370495L
881:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:bits & 4503599627370495L |==> bits ^ 4503599627370495L
882:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:bits & 4503599627370495L |==> bits | 4503599627370495L
883:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction % d
884:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction * d
885:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction + d
886:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction / d
887:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d % (direction - d)
888:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d + (direction - d)
889:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d - (direction - d)
890:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d / (direction - d)
891:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:0 |==> 1
892:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:0 |==> -1
893:ROR:>=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) == 0
894:ROR:>=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) > 0
895:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> true
896:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:4503599627370495L |==> 0L
897:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:4503599627370495L |==> -4503599627370495L
898:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa <= 4503599627370495L
899:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa >= 4503599627370495L
900:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> false
901:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:4503599627370496L |==> 0L
902:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:4503599627370496L |==> -4503599627370496L
903:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent % 4503599627370496L
904:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent * 4503599627370496L
905:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent - 4503599627370496L
906:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent / 4503599627370496L
907:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):930:sign | (exponent + 4503599627370496L) |==> sign & (exponent + 4503599627370496L)
908:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):930:sign | (exponent + 4503599627370496L) |==> sign ^ (exponent + 4503599627370496L)
909:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent |==> sign & exponent
910:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent |==> sign ^ exponent
911:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:1 |==> 0
912:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:1 |==> -1
913:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa % 1
914:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa * 1
915:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa - 1
916:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa / 1
917:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent | (mantissa + 1) |==> (sign | exponent) & (mantissa + 1)
918:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent | (mantissa + 1) |==> (sign | exponent) ^ (mantissa + 1)
919:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:0L |==> 1L
920:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:0L |==> -1L
921:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa <= 0L
922:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa >= 0L
923:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> false
924:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:4503599627370496L |==> 0L
925:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:4503599627370496L |==> -4503599627370496L
926:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent % 4503599627370496L
927:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent * 4503599627370496L
928:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent + 4503599627370496L
929:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent / 4503599627370496L
930:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) |==> sign & (exponent - 4503599627370496L)
931:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) |==> sign ^ (exponent - 4503599627370496L)
932:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):941:4503599627370495L |==> 0L
933:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):941:4503599627370495L |==> -4503599627370495L
934:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) | 4503599627370495L |==> (sign | (exponent - 4503599627370496L)) & 4503599627370495L
935:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) | 4503599627370495L |==> (sign | (exponent - 4503599627370496L)) ^ 4503599627370495L
936:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent |==> sign & exponent
937:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent |==> sign ^ exponent
938:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:1 |==> 0
939:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:1 |==> -1
940:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa % 1
941:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa * 1
942:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa + 1
943:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa / 1
944:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent | (mantissa - 1) |==> (sign | exponent) & (mantissa - 1)
945:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent | (mantissa - 1) |==> (sign | exponent) ^ (mantissa - 1)
946:LVR:0:POS:org.apache.commons.math.util.MathUtils@scalb(double,int):962:0 |==> 1
947:LVR:0:NEG:org.apache.commons.math.util.MathUtils@scalb(double,int):962:0 |==> -1
948:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d <= 0
949:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d >= 0
950:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> false
951:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> (d == 0) != Double.isNaN(d)
952:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> (d == 0)
953:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> Double.isNaN(d)
954:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> true
955:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> ((d == 0) || Double.isNaN(d)) != Double.isInfinite(d)
956:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> (d == 0) || Double.isNaN(d)
957:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> Double.isInfinite(d)
958:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> true
959:LVR:POS:0:org.apache.commons.math.util.MathUtils@scalb(double,int):968:9218868437227405312L |==> 0L
960:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@scalb(double,int):968:9218868437227405312L |==> -9218868437227405312L
961:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):968:bits & 9218868437227405312L |==> bits ^ 9218868437227405312L
962:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):968:bits & 9218868437227405312L |==> bits | 9218868437227405312L
963:LVR:NEG:0:org.apache.commons.math.util.MathUtils@scalb(double,int):969:-9218868437227405313L |==> 0L
964:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@scalb(double,int):969:-9218868437227405313L |==> 9218868437227405313L
965:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):969:bits & -9218868437227405313L |==> bits ^ -9218868437227405313L
966:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):969:bits & -9218868437227405313L |==> bits | -9218868437227405313L
967:LVR:POS:0:org.apache.commons.math.util.MathUtils@scalb(double,int):972:52 |==> 0
968:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@scalb(double,int):972:52 |==> -52
969:SOR:<<(long,int):>>(long,int):org.apache.commons.math.util.MathUtils@scalb(double,int):972:((long)scaleFactor) << 52 |==> ((long)scaleFactor) >> 52
970:SOR:<<(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@scalb(double,int):972:((long)scaleFactor) << 52 |==> ((long)scaleFactor) >>> 52
971:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent % (((long)scaleFactor) << 52)
972:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent * (((long)scaleFactor) << 52)
973:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent - (((long)scaleFactor) << 52)
974:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent / (((long)scaleFactor) << 52)
975:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:rest | (exponent + (((long)scaleFactor) << 52)) |==> rest & (exponent + (((long)scaleFactor) << 52))
976:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:rest | (exponent + (((long)scaleFactor) << 52)) |==> rest ^ (exponent + (((long)scaleFactor) << 52))
977:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a % Math.PI
978:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a * Math.PI
979:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a - Math.PI
980:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a / Math.PI
981:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> (a + Math.PI) % center
982:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> (a + Math.PI) * center
983:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> a + Math.PI + center
984:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> (a + Math.PI) / center
985:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) % TWO_PI
986:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) * TWO_PI
987:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) + TWO_PI
988:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) - TWO_PI
989:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI % Math.floor((a + Math.PI - center) / TWO_PI)
990:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI + Math.floor((a + Math.PI - center) / TWO_PI)
991:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI - Math.floor((a + Math.PI - center) / TWO_PI)
992:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI / Math.floor((a + Math.PI - center) / TWO_PI)
993:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a % (TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI))
994:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a * (TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI))
995:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a + TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI)
996:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a / (TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI))
997:COR:Double.isInfinite(normalizedSum):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1022:Double.isInfinite(normalizedSum) |==> false
998:COR:Double.isInfinite(normalizedSum):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1022:Double.isInfinite(normalizedSum) |==> true
999:COR:Double.isNaN(normalizedSum):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1026:Double.isNaN(normalizedSum) |==> false
1000:COR:Double.isNaN(normalizedSum):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1026:Double.isNaN(normalizedSum) |==> true
1001:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1030:0.0 |==> 1.0
1002:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1030:0.0 |==> -1.0
1003:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:0 |==> 1
1004:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:0 |==> -1
1005:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i != len
1006:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i <= len
1007:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> false
1008:COR:Double.isInfinite(values[i]):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1034:Double.isInfinite(values[i]) |==> false
1009:COR:Double.isInfinite(values[i]):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1034:Double.isInfinite(values[i]) |==> true
1010:COR:Double.isNaN(values[i]):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1038:Double.isNaN(values[i]) |==> false
1011:COR:Double.isNaN(values[i]):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1038:Double.isNaN(values[i]) |==> true
1012:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1039:sum += values[i] |==> <NO-OP>
1013:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:0 |==> 1
1014:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:0 |==> -1
1015:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum <= 0
1016:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum >= 0
1017:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> false
1018:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:0 |==> 1
1019:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:0 |==> -1
1020:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i != len
1021:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i <= len
1022:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> false
1023:COR:Double.isNaN(values[i]):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1047:Double.isNaN(values[i]) |==> false
1024:COR:Double.isNaN(values[i]):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1047:Double.isNaN(values[i]) |==> true
1025:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1048:out[i] = Double.NaN |==> <NO-OP>
1026:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] % normalizedSum
1027:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] + normalizedSum
1028:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] - normalizedSum
1029:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] / normalizedSum
1030:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum % sum
1031:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum * sum
1032:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum + sum
1033:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum - sum
1034:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:out[i] = values[i] * normalizedSum / sum |==> <NO-OP>
1035:COR:Double.isInfinite(x):TRUE:org.apache.commons.math.util.MathUtils@round(double,int,int):1088:Double.isInfinite(x) |==> false
1036:COR:Double.isInfinite(x):FALSE:org.apache.commons.math.util.MathUtils@round(double,int,int):1088:Double.isInfinite(x) |==> true
1037:LVR:POS:0:org.apache.commons.math.util.MathUtils@round(float,int,int):1123:10.0F |==> 0.0F
1038:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@round(float,int,int):1123:10.0F |==> -10.0F
1039:AOR:*(float,float):%(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) % sign
1040:AOR:*(float,float):+(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) + sign
1041:AOR:*(float,float):-(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) - sign
1042:AOR:*(float,float):/(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) / sign
1043:AOR:*(float,float):%(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x % factor
1044:AOR:*(float,float):+(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x + factor
1045:AOR:*(float,float):-(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x - factor
1046:AOR:*(float,float):/(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x / factor
1047:AOR:/(float,float):%(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) % factor
1048:AOR:/(float,float):*(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) * factor
1049:AOR:/(float,float):+(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) + factor
1050:AOR:/(float,float):-(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) - factor
1051:LVR:NEG:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:-1 |==> 0
1052:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:-1 |==> 1
1053:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign <= -1
1054:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign >= -1
1055:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> false
1056:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1144:unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY)) |==> <NO-OP>
1057:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1146:unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY)) |==> <NO-OP>
1058:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1150:unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY)) |==> <NO-OP>
1059:LVR:NEG:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:-1 |==> 0
1060:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:-1 |==> 1
1061:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign <= -1
1062:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign >= -1
1063:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> false
1064:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1154:unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY)) |==> <NO-OP>
1065:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1156:unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY)) |==> <NO-OP>
1066:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1160:unscaled = nextAfter(unscaled, Double.NEGATIVE_INFINITY) |==> <NO-OP>
1067:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled % Math.floor(unscaled)
1068:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled * Math.floor(unscaled)
1069:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled + Math.floor(unscaled)
1070:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled / Math.floor(unscaled)
1071:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:0.5 |==> 0.0
1072:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:0.5 |==> -0.5
1073:ROR:>(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction != 0.5
1074:ROR:>(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction >= 0.5
1075:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> false
1076:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1163:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1077:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1165:unscaled = Math.floor(unscaled) |==> <NO-OP>
1078:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled % Math.floor(unscaled)
1079:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled * Math.floor(unscaled)
1080:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled + Math.floor(unscaled)
1081:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled / Math.floor(unscaled)
1082:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:0.5 |==> 0.0
1083:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:0.5 |==> -0.5
1084:ROR:>(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction != 0.5
1085:ROR:>(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction >= 0.5
1086:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> false
1087:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1172:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1088:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:0.5 |==> 0.0
1089:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:0.5 |==> -0.5
1090:ROR:<(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction != 0.5
1091:ROR:<(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction <= 0.5
1092:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> false
1093:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1174:unscaled = Math.floor(unscaled) |==> <NO-OP>
1094:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:2.0 |==> 0.0
1095:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:2.0 |==> -2.0
1096:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) % 2.0
1097:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) * 2.0
1098:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) + 2.0
1099:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) - 2.0
1100:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1178:2.0 |==> 0.0
1101:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1178:2.0 |==> -2.0
1102:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) % 2.0
1103:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) * 2.0
1104:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) + 2.0
1105:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) - 2.0
1106:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 <= Math.floor(Math.floor(unscaled) / 2.0)
1107:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 >= Math.floor(Math.floor(unscaled) / 2.0)
1108:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> false
1109:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1179:unscaled = Math.floor(unscaled) |==> <NO-OP>
1110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1181:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1111:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1187:unscaled = nextAfter(unscaled, Double.POSITIVE_INFINITY) |==> <NO-OP>
1112:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled % Math.floor(unscaled)
1113:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled * Math.floor(unscaled)
1114:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled + Math.floor(unscaled)
1115:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled / Math.floor(unscaled)
1116:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:0.5 |==> 0.0
1117:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:0.5 |==> -0.5
1118:ROR:>=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction == 0.5
1119:ROR:>=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction > 0.5
1120:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> true
1121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1190:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1122:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1192:unscaled = Math.floor(unscaled) |==> <NO-OP>
1123:ROR:!=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled < Math.floor(unscaled)
1124:ROR:!=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled > Math.floor(unscaled)
1125:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> true
1126:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1202:unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY)) |==> <NO-OP>
1127:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x <= ZB
1128:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x >= ZB
1129:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> false
1130:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x != ZB
1131:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x >= ZB
1132:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> false
1133:COR:Double.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@sign(double):1248:Double.isNaN(x) |==> false
1134:COR:Double.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@sign(double):1248:Double.isNaN(x) |==> true
1135:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> 1.0
1136:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> -1.0
1137:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x <= 0.0
1138:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x >= 0.0
1139:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> false
1140:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> 1.0
1141:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> -1.0
1142:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> 1.0
1143:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> -1.0
1144:ROR:>(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x != 0.0
1145:ROR:>(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x >= 0.0
1146:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> false
1147:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> 0.0
1148:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> -1.0
1149:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@sign(double):1251:-1.0 |==> +1.0
1150:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> 0.0
1151:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> -1.0
1152:COR:Float.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@sign(float):1266:Float.isNaN(x) |==> false
1153:COR:Float.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@sign(float):1266:Float.isNaN(x) |==> true
1154:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> 1.0F
1155:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> -1.0F
1156:ROR:==(float,float):<=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x <= 0.0F
1157:ROR:==(float,float):>=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x >= 0.0F
1158:ROR:==(float,float):FALSE(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> false
1159:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> 1.0F
1160:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> -1.0F
1161:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> 1.0F
1162:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> -1.0F
1163:ROR:>(float,float):!=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x != 0.0F
1164:ROR:>(float,float):>=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x >= 0.0F
1165:ROR:>(float,float):FALSE(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> false
1166:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> 0.0F
1167:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> -1.0F
1168:ORU:-(float):+(float):org.apache.commons.math.util.MathUtils@sign(float):1269:-1.0F |==> +1.0F
1169:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> 0.0F
1170:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> -1.0F
1171:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> 1
1172:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> -1
1173:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x <= 0
1174:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x >= 0
1175:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> false
1176:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> 1
1177:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> -1
1178:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> 1
1179:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> -1
1180:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x != 0
1181:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x >= 0
1182:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> false
1183:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(int):1283:1 |==> 0
1184:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:1 |==> -1
1185:LVR:NEG:0:org.apache.commons.math.util.MathUtils@sign(int):1283:-1 |==> 0
1186:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:-1 |==> 1
1187:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> 1L
1188:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> -1L
1189:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x <= 0L
1190:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x >= 0L
1191:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> false
1192:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> 1L
1193:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> -1L
1194:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> 1L
1195:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> -1L
1196:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x != 0L
1197:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x >= 0L
1198:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> false
1199:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(long):1297:1L |==> 0L
1200:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:1L |==> -1L
1201:LVR:NEG:0:org.apache.commons.math.util.MathUtils@sign(long):1297:-1L |==> 0L
1202:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:-1L |==> 1L
1203:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x <= ZS
1204:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x >= ZS
1205:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> false
1206:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x != ZS
1207:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x >= ZS
1208:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> false
1209:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@sinh(double):1323:-x |==> +x
1210:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) % Math.exp(-x)
1211:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) * Math.exp(-x)
1212:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) + Math.exp(-x)
1213:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) / Math.exp(-x)
1214:LVR:POS:0:org.apache.commons.math.util.MathUtils@sinh(double):1323:2.0 |==> 0.0
1215:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sinh(double):1323:2.0 |==> -2.0
1216:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) % 2.0
1217:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) * 2.0
1218:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) + 2.0
1219:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) - 2.0
1220:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x % (long)y
1221:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x * (long)y
1222:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x + (long)y
1223:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x / (long)y
1224:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s != Integer.MIN_VALUE
1225:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s <= Integer.MIN_VALUE
1226:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> false
1227:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s != Integer.MAX_VALUE
1228:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s >= Integer.MAX_VALUE
1229:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> false
1230:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE != s > Integer.MAX_VALUE
1231:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE
1232:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s > Integer.MAX_VALUE
1233:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> true
1234:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b <= Long.MIN_VALUE
1235:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b >= Long.MIN_VALUE
1236:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> false
1237:LVR:0:POS:org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:0 |==> 1
1238:LVR:0:NEG:org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:0 |==> -1
1239:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a != 0
1240:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a <= 0
1241:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> false
1242:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a % b
1243:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a * b
1244:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a + b
1245:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a / b
1246:ORU:-(long):+(long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1365:-b |==> +b
1247:ORU:-(long):~(long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1365:-b |==> ~b
1248:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,int):1380:0 |==> 1
1249:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1380:0 |==> -1
1250:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e != 0
1251:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e <= 0
1252:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> false
1253:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,int):1386:1 |==> 0
1254:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1386:1 |==> -1
1255:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,int):1388:0 |==> 1
1256:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1388:0 |==> -1
1257:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e < 0
1258:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e > 0
1259:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> true
1260:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,int):1389:1 |==> 0
1261:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1389:1 |==> -1
1262:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:e & 1 |==> e ^ 1
1263:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:e & 1 |==> e | 1
1264:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,int):1389:0 |==> 1
1265:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1389:0 |==> -1
1266:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) < 0
1267:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) > 0
1268:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> true
1269:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,int):1390:result *= k2p |==> <NO-OP>
1270:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,int):1392:k2p *= k2p |==> <NO-OP>
1271:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,int):1393:1 |==> 0
1272:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1393:1 |==> -1
1273:SOR:>>(int,int):<<(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1393:e >> 1 |==> e << 1
1274:SOR:>>(int,int):>>>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1393:e >> 1 |==> e >>> 1
1275:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,int):1393:e = e >> 1 |==> <NO-OP>
1276:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,long):1410:0 |==> 1
1277:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1410:0 |==> -1
1278:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e != 0
1279:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e <= 0
1280:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> false
1281:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,long):1416:1 |==> 0
1282:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1416:1 |==> -1
1283:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,long):1418:0 |==> 1
1284:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1418:0 |==> -1
1285:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e < 0
1286:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e > 0
1287:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> true
1288:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,long):1419:1 |==> 0
1289:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1419:1 |==> -1
1290:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:e & 1 |==> e ^ 1
1291:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:e & 1 |==> e | 1
1292:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,long):1419:0 |==> 1
1293:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1419:0 |==> -1
1294:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) < 0
1295:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) > 0
1296:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> true
1297:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,long):1420:result *= k2p |==> <NO-OP>
1298:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,long):1422:k2p *= k2p |==> <NO-OP>
1299:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,long):1423:1 |==> 0
1300:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1423:1 |==> -1
1301:SOR:>>(long,int):<<(long,int):org.apache.commons.math.util.MathUtils@pow(int,long):1423:e >> 1 |==> e << 1
1302:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@pow(int,long):1423:e >> 1 |==> e >>> 1
1303:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,long):1423:e = e >> 1 |==> <NO-OP>
1304:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,int):1440:0 |==> 1
1305:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1440:0 |==> -1
1306:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e != 0
1307:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e <= 0
1308:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> false
1309:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,int):1446:1L |==> 0L
1310:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1446:1L |==> -1L
1311:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,int):1448:0 |==> 1
1312:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1448:0 |==> -1
1313:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e < 0
1314:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e > 0
1315:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> true
1316:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,int):1449:1 |==> 0
1317:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1449:1 |==> -1
1318:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:e & 1 |==> e ^ 1
1319:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:e & 1 |==> e | 1
1320:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,int):1449:0 |==> 1
1321:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1449:0 |==> -1
1322:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) < 0
1323:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) > 0
1324:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> true
1325:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,int):1450:result *= k2p |==> <NO-OP>
1326:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,int):1452:k2p *= k2p |==> <NO-OP>
1327:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,int):1453:1 |==> 0
1328:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1453:1 |==> -1
1329:SOR:>>(int,int):<<(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1453:e >> 1 |==> e << 1
1330:SOR:>>(int,int):>>>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1453:e >> 1 |==> e >>> 1
1331:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,int):1453:e = e >> 1 |==> <NO-OP>
1332:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,long):1470:0 |==> 1
1333:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1470:0 |==> -1
1334:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e != 0
1335:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e <= 0
1336:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> false
1337:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,long):1476:1L |==> 0L
1338:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1476:1L |==> -1L
1339:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,long):1478:0 |==> 1
1340:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1478:0 |==> -1
1341:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e < 0
1342:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e > 0
1343:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> true
1344:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,long):1479:1 |==> 0
1345:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1479:1 |==> -1
1346:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:e & 1 |==> e ^ 1
1347:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:e & 1 |==> e | 1
1348:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,long):1479:0 |==> 1
1349:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1479:0 |==> -1
1350:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) < 0
1351:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) > 0
1352:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> true
1353:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,long):1480:result *= k2p |==> <NO-OP>
1354:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,long):1482:k2p *= k2p |==> <NO-OP>
1355:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,long):1483:1 |==> 0
1356:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1483:1 |==> -1
1357:SOR:>>(long,int):<<(long,int):org.apache.commons.math.util.MathUtils@pow(long,long):1483:e >> 1 |==> e << 1
1358:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@pow(long,long):1483:e >> 1 |==> e >>> 1
1359:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,long):1483:e = e >> 1 |==> <NO-OP>
1360:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:0 |==> 1
1361:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:0 |==> -1
1362:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e != 0
1363:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e <= 0
1364:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> false
1365:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:0 |==> 1
1366:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:0 |==> -1
1367:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e != 0
1368:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e <= 0
1369:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> false
1370:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:0 |==> 1
1371:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:0 |==> -1
1372:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e < 0
1373:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e > 0
1374:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> true
1375:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:1 |==> 0
1376:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:1 |==> -1
1377:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:e & 1 |==> e ^ 1
1378:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:e & 1 |==> e | 1
1379:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:0 |==> 1
1380:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:0 |==> -1
1381:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) < 0
1382:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) > 0
1383:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> true
1384:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1530:result = result.multiply(k2p) |==> <NO-OP>
1385:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1532:k2p = k2p.multiply(k2p) |==> <NO-OP>
1386:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:1 |==> 0
1387:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:1 |==> -1
1388:SOR:>>(long,int):<<(long,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:e >> 1 |==> e << 1
1389:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:e >> 1 |==> e >>> 1
1390:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:e = e >> 1 |==> <NO-OP>
1391:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:0 |==> 1
1392:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:0 |==> -1
1393:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) != 0
1394:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) <= 0
1395:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> false
1396:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:0 |==> 1
1397:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:0 |==> -1
1398:COR:e.testBit(0):TRUE:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:e.testBit(0) |==> false
1399:COR:e.testBit(0):FALSE:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:e.testBit(0) |==> true
1400:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1560:result = result.multiply(k2p) |==> <NO-OP>
1401:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1562:k2p = k2p.multiply(k2p) |==> <NO-OP>
1402:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1563:1 |==> 0
1403:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1563:1 |==> -1
1404:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1563:e = e.shiftRight(1) |==> <NO-OP>
1405:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1578:0 |==> 1
1406:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1578:0 |==> -1
1407:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:0 |==> 1
1408:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:0 |==> -1
1409:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i != p1.length
1410:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i <= p1.length
1411:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> false
1412:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] % p2[i]
1413:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] * p2[i]
1414:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] + p2[i]
1415:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] / p2[i]
1416:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:sum += Math.abs(p1[i] - p2[i]) |==> <NO-OP>
1417:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1593:0 |==> 1
1418:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1593:0 |==> -1
1419:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:0 |==> 1
1420:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:0 |==> -1
1421:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i != p1.length
1422:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i <= p1.length
1423:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> false
1424:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] % p2[i]
1425:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] * p2[i]
1426:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] + p2[i]
1427:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] / p2[i]
1428:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:sum += Math.abs(p1[i] - p2[i]) |==> <NO-OP>
1429:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1608:0 |==> 1
1430:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1608:0 |==> -1
1431:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:0 |==> 1
1432:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:0 |==> -1
1433:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i != p1.length
1434:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i <= p1.length
1435:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> false
1436:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] % p2[i]
1437:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] * p2[i]
1438:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] + p2[i]
1439:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] / p2[i]
1440:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp % dp
1441:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp + dp
1442:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp - dp
1443:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp / dp
1444:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:sum += dp * dp |==> <NO-OP>
1445:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1624:0 |==> 1
1446:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1624:0 |==> -1
1447:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:0 |==> 1
1448:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:0 |==> -1
1449:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i != p1.length
1450:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i <= p1.length
1451:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> false
1452:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] % p2[i]
1453:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] * p2[i]
1454:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] + p2[i]
1455:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] / p2[i]
1456:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp % dp
1457:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp + dp
1458:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp - dp
1459:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp / dp
1460:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:sum += dp * dp |==> <NO-OP>
1461:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1640:0 |==> 1
1462:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1640:0 |==> -1
1463:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:0 |==> 1
1464:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:0 |==> -1
1465:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i != p1.length
1466:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i <= p1.length
1467:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> false
1468:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] % p2[i]
1469:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] * p2[i]
1470:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] + p2[i]
1471:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] / p2[i]
1472:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:max = Math.max(max, Math.abs(p1[i] - p2[i])) |==> <NO-OP>
1473:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1655:0 |==> 1
1474:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1655:0 |==> -1
1475:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:0 |==> 1
1476:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:0 |==> -1
1477:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i != p1.length
1478:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i <= p1.length
1479:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> false
1480:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] % p2[i]
1481:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] * p2[i]
1482:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] + p2[i]
1483:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] / p2[i]
1484:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:max = Math.max(max, Math.abs(p1[i] - p2[i])) |==> <NO-OP>
