1:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):67:callback.process(externs, root) |==> <NO-OP>
2:COR:isVarInlineForbidden(v):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):88:isVarInlineForbidden(v) |==> false
3:COR:isVarInlineForbidden(v):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):88:isVarInlineForbidden(v) |==> true
4:COR:isInlinableObject(referenceInfo.references):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):94:isInlinableObject(referenceInfo.references) |==> false
5:COR:isInlinableObject(referenceInfo.references):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):94:isInlinableObject(referenceInfo.references) |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):97:staleVars.add(v) |==> <NO-OP>
7:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):99:0 |==> 1
8:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):99:0 |==> -1
9:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):104:splitObject(v, declaration, init, referenceInfo) |==> <NO-OP>
10:COR:node.isName():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:node.isName() |==> false
11:COR:node.isName():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:node.isName() |==> true
12:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):120:staleVars.add(scope.getVar(node.getString())) |==> <NO-OP>
13:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@blacklistVarReferencesInTree(com.google.javascript.rhino.Node,com.google.javascript.jscomp.Scope):116:NodeUtil.visitPreOrder(root, new NodeUtil.Visitor(){...) |==> <NO-OP>
14:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() != var.isExtern()
15:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal()
16:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> var.isExtern()
17:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> true
18:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) != compiler.getCodingConvention().isExported(var.name)
19:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> var.isGlobal() || var.isExtern()
20:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> compiler.getCodingConvention().isExported(var.name)
21:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> true
22:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) != RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
23:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)
24:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
25:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> true
26:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) != staleVars.contains(var)
27:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
28:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> staleVars.contains(var)
29:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> true
30:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):156:false |==> true
31:COR:parent.isGetProp():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):166:parent.isGetProp() |==> false
32:COR:parent.isGetProp():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):166:parent.isGetProp() |==> true
33:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> false
34:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:Preconditions.checkState(parent.getFirstChild() == name) |==> <NO-OP>
35:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> false
36:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() == (gramps.getFirstChild() == parent)
37:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> false
38:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall()
39:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.getFirstChild() == parent
40:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):171:false |==> true
41:COR:gramps.isDelProp():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):176:gramps.isDelProp() |==> false
42:COR:gramps.isDelProp():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):176:gramps.isDelProp() |==> true
43:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):177:false |==> true
44:COR:validProperties.contains(propName):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):189:validProperties.contains(propName) |==> false
45:COR:validProperties.contains(propName):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):189:validProperties.contains(propName) |==> true
46:COR:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):190:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps) |==> false
47:COR:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):190:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps) |==> true
48:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):191:validProperties.add(propName) |==> <NO-OP>
49:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):193:false |==> true
50:COR:isVarOrAssignExprLhs(name):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:isVarOrAssignExprLhs(name) |==> false
51:COR:isVarOrAssignExprLhs(name):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:isVarOrAssignExprLhs(name) |==> true
52:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:false |==> true
53:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):205:val == null |==> false
54:COR:val.isObjectLit():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):211:val.isObjectLit() |==> false
55:COR:val.isObjectLit():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):211:val.isObjectLit() |==> true
56:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):212:false |==> true
57:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):223:child != null |==> true
58:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() != child.isSetterDef()
59:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef()
60:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):226:child.isGetterDef() || child.isSetterDef() |==> child.isSetterDef()
61:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> true
62:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):228:false |==> true
63:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):231:validProperties.add(child.getString()) |==> <NO-OP>
64:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):240:refNode == childVal |==> false
65:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):242:false |==> true
66:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):244:refNode = refNode.getParent() |==> <NO-OP>
67:LVR:TRUE:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):253:true |==> false
68:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):253:ret = true |==> <NO-OP>
69:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.getFirstChild() == n |==> false
70:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() == (parent.getFirstChild() == n)
71:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.isAssign() && parent.getFirstChild() == n |==> false
72:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign()
73:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.isAssign() && parent.getFirstChild() == n |==> parent.getFirstChild() == n
74:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> (parent.isAssign() && parent.getFirstChild() == n) == parent.getParent().isExprResult()
75:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):263:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> false
76:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.isAssign() && parent.getFirstChild() == n
77:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):263:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.getParent().isExprResult()
78:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() != (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
79:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar()
80:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
81:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> true
82:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() != ref.isInitializingDeclaration()
83:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue()
84:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isInitializingDeclaration()
85:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> true
86:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):278:val != null |==> true
87:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):279:Preconditions.checkState(val.isObjectLit()) |==> <NO-OP>
88:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):280:child != null |==> true
89:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):283:varmap.containsKey(varname) |==> false
90:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):283:varmap.containsKey(varname) |==> true
91:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):289:varmap.put(varname, var) |==> <NO-OP>
92:COR:ref.getParent().isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):292:ref.getParent().isVar() |==> false
93:COR:ref.getParent().isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):292:ref.getParent().isVar() |==> true
94:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):296:Preconditions.checkState(getprop.isGetProp()) |==> <NO-OP>
95:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):300:varmap.containsKey(varname) |==> false
96:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):300:varmap.containsKey(varname) |==> true
97:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):305:varmap.put(varname, var) |==> <NO-OP>
98:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):319:Preconditions.checkState(object.isObjectLit()) |==> <NO-OP>
99:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):320:key != null |==> true
100:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):322:initvals.put(key.getString(), key.removeFirstChild()) |==> <NO-OP>
101:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):336:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):337:Preconditions.checkState(val.isObjectLit()) |==> <NO-OP>
103:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):339:key != null |==> true
104:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):344:nodes.add(IR.assign(IR.name(varmap.get(var)), value)) |==> <NO-OP>
105:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):348:all.remove(var) |==> <NO-OP>
106:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):353:nodes.add(IR.assign(IR.name(varmap.get(var)), NodeUtil.newUndefinedNode(null))) |==> <NO-OP>
107:COR:nodes.isEmpty():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):360:nodes.isEmpty() |==> false
108:COR:nodes.isEmpty():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):360:nodes.isEmpty() |==> true
109:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):365:nodes.add(IR.trueNode()) |==> <NO-OP>
110:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):370:nodes = Lists.reverse(nodes) |==> <NO-OP>
111:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:0 |==> 1
112:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:0 |==> -1
113:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:2 |==> 0
114:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:2 |==> -2
115:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() % 2
116:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() * 2
117:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() + 2
118:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() / 2
119:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i != nodes.size() - 2
120:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i <= nodes.size() - 2
121:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> false
122:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
123:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):377:cur.addChildToFront(t) |==> <NO-OP>
124:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):378:cur = t |==> <NO-OP>
125:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):380:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
126:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:1 |==> 0
127:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:1 |==> -1
128:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i % 1
129:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i * 1
130:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i - 1
131:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i / 1
132:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:cur.addChildToFront(nodes.get(i + 1)) |==> <NO-OP>
133:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):385:replacement.copyInformationFromForTree(replace) |==> <NO-OP>
134:COR:replace.isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):387:replace.isVar() |==> false
135:COR:replace.isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):387:replace.isVar() |==> true
136:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):388:replace.getParent().replaceChild(replace, NodeUtil.newExpr(replacement)) |==> <NO-OP>
137:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):391:replace.getParent().replaceChild(replace, replacement) |==> <NO-OP>
138:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() == init.getParent().isVar()
139:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> false
140:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined()
141:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):412:referenceInfo.isWellDefined() && init.getParent().isVar() |==> init.getParent().isVar()
142:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):413:defined |==> false
143:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):413:defined |==> true
144:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):415:fillInitialValues(init, initvals) |==> <NO-OP>
145:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):425:val == null |==> false
146:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):427:varnode.copyInformationFromForTree(vnode) |==> <NO-OP>
147:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):429:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
148:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):431:vnode.getParent().addChildBefore(varnode, vnode) |==> <NO-OP>
149:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined |==> false
150:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined |==> true
151:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):435:vnode.getParent().removeChild(vnode) |==> <NO-OP>
152:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:ref == init |==> false
153:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> defined == (ref == init)
154:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> false
155:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> defined
156:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> ref == init
157:COR:ref.isLvalue():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):442:ref.isLvalue() |==> false
158:COR:ref.isLvalue():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):442:ref.isLvalue() |==> true
159:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):445:replaceAssignmentExpression(v, ref, varmap) |==> <NO-OP>
160:COR:ref.getParent().isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):446:ref.getParent().isVar() |==> false
161:COR:ref.getParent().isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):446:ref.getParent().isVar() |==> true
162:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):449:ref.getGrandparent().removeChild(ref.getParent()) |==> <NO-OP>
163:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):453:Preconditions.checkState(getprop.isGetProp()) |==> <NO-OP>
164:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):456:1 |==> 0
165:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):456:1 |==> -1
166:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):460:Preconditions.checkState(varmap.containsKey(var)) |==> <NO-OP>
167:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):464:replacement.copyInformationFrom(getprop) |==> <NO-OP>
168:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):465:ref.getGrandparent().replaceChild(ref.getParent(), replacement) |==> <NO-OP>
169:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):469:compiler.reportCodeChange() |==> <NO-OP>
